2014-01-21 12:12:53,364 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,365 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,365 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,365 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,365 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#6], was: [jpa.Question.propositionCollection#6] (uninitialized)
2014-01-21 12:12:53,365 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#6], was: [jpa.Question.reponseHistoCollection#6] (uninitialized)
2014-01-21 12:12:53,365 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#6], was: [jpa.Question.reponseCollection#6] (uninitialized)
2014-01-21 12:12:53,366 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#7], was: [jpa.Question.propositionCollection#7] (uninitialized)
2014-01-21 12:12:53,366 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#7], was: [jpa.Question.reponseHistoCollection#7] (uninitialized)
2014-01-21 12:12:53,366 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#7], was: [jpa.Question.reponseCollection#7] (uninitialized)
2014-01-21 12:12:53,366 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#8], was: [jpa.Question.propositionCollection#8] (uninitialized)
2014-01-21 12:12:53,366 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#8], was: [jpa.Question.reponseHistoCollection#8] (uninitialized)
2014-01-21 12:12:53,366 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#8], was: [jpa.Question.reponseCollection#8] (uninitialized)
2014-01-21 12:12:53,366 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#9], was: [jpa.Question.propositionCollection#9] (uninitialized)
2014-01-21 12:12:53,366 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#9], was: [jpa.Question.reponseHistoCollection#9] (uninitialized)
2014-01-21 12:12:53,366 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#9], was: [jpa.Question.reponseCollection#9] (uninitialized)
2014-01-21 12:12:53,367 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#10], was: [jpa.Question.propositionCollection#10] (uninitialized)
2014-01-21 12:12:53,367 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#10], was: [jpa.Question.reponseHistoCollection#10] (uninitialized)
2014-01-21 12:12:53,367 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#10], was: [jpa.Question.reponseCollection#10] (uninitialized)
2014-01-21 12:12:53,367 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#11], was: [jpa.Question.propositionCollection#11] (uninitialized)
2014-01-21 12:12:53,367 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#11], was: [jpa.Question.reponseHistoCollection#11] (uninitialized)
2014-01-21 12:12:53,367 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#11], was: [jpa.Question.reponseCollection#11] (uninitialized)
2014-01-21 12:12:53,367 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
2014-01-21 12:12:53,367 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 18 collections
2014-01-21 12:12:53,367 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,368 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=10}
2014-01-21 12:12:53,368 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Boucles foreach imbriquées. Soit le tableau array. A l’aide des boucles foreach affichez le résultat ci-dessous., questionid=11}
2014-01-21 12:12:53,368 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Boucle imbriquées, affichez la table de multiplication du chiffre 12.Codez l'algorithme ci-dessous., questionid=9}
2014-01-21 12:12:53,368 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Soit le tableau fruits : codez le reste de l’algorithme., questionid=8}
2014-01-21 12:12:53,368 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=7}
2014-01-21 12:12:53,368 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Affichez toutes les valeurs du tableau avec la boucle foreach (K + V)., questionid=6}
2014-01-21 12:12:53,369 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,370 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,370 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,370 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495733
2014-01-21 12:12:53,371 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,371 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,371 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,381 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,381 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,382 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,382 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select test0_.TESTID as TESTID3_, test0_.TESTMATIERE as TESTMATI2_3_, test0_.TESTDUREE as TESTDUREE3_, test0_.TEST_NBQUESTION_RUB as TEST4_3_, test0_.TESTNATURE as TESTNATURE3_, test0_.TESTFORMAT as TESTFORMAT3_, test0_.TEST_START as TEST7_3_, test0_.TEST_DESCRIPTION as TEST8_3_, test0_.THEME as THEME3_, test0_.NIVEAU as NIVEAU3_, test0_.CATEGORIEID as CATEGOR11_3_ from test test0_ where test0_.TESTID=1
2014-01-21 12:12:53,383 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,383 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#1]
2014-01-21 12:12:53,384 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,384 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,384 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#1]
2014-01-21 12:12:53,384 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#1]
2014-01-21 12:12:53,384 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,384 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,384 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,385 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,385 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.rubriqueCollection#1], was: [jpa.Test.rubriqueCollection#1] (uninitialized)
2014-01-21 12:12:53,385 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.jointureCollection#1], was: [jpa.Test.jointureCollection#1] (uninitialized)
2014-01-21 12:12:53,385 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:53,385 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2014-01-21 12:12:53,385 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,385 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Test{rubriqueCollection=<uninitialized>, testmatiere=Développement PHP, testformat=PHP, theme=Boucles en PHP, jointureCollection=<uninitialized>, testnature=THEM, testid=1, testDescription=Les boucles permettent d'effectuer un certain nombre de fois les mêmes opérations, par exemple afficher une suite de nombres que l'on incrémentera à chaque tour de boucle. 
Vous allez pouvoir répéter autant d'instructions que vous souhaitez et vous arrêter lorsque vous l'aurez décidé.
Ce test vérifiera les compétences du candidat sur ces notions élémentaires.
, categorieid=jpa.Categorie#1, testStart=Instructions début, niveau=1, testNbquestionRub=10, testduree=20}
2014-01-21 12:12:53,386 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,387 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,387 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,387 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495733
2014-01-21 12:12:53,387 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,388 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,388 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,398 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,398 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,399 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,399 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select rubrique0_.RUBRIQUEID as RUBRIQUEID6_, rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_, rubrique0_.TESTID as TESTID6_ from rubrique rubrique0_ where rubrique0_.TESTID=?
2014-01-21 12:12:53,400 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,400 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#1]
2014-01-21 12:12:53,400 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#2]
2014-01-21 12:12:53,400 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,400 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,401 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#1]
2014-01-21 12:12:53,401 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#1]
2014-01-21 12:12:53,401 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#2]
2014-01-21 12:12:53,401 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#2]
2014-01-21 12:12:53,401 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,401 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,402 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,402 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,402 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#1], was: [jpa.Rubrique.questionCollection#1] (uninitialized)
2014-01-21 12:12:53,402 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#2], was: [jpa.Rubrique.questionCollection#2] (uninitialized)
2014-01-21 12:12:53,402 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2014-01-21 12:12:53,402 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2014-01-21 12:12:53,402 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,402 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=2, testid=jpa.Test#1, rubriquenom=Boucles PHP - Niveau 2}
2014-01-21 12:12:53,402 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=1, testid=jpa.Test#1, rubriquenom=Boucles PHP - Niveau 1}
2014-01-21 12:12:53,404 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,405 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,405 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,405 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495734
2014-01-21 12:12:53,405 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,405 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,405 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,422 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,422 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,424 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,424 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONTEXT as QUESTION2_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-01-21 12:12:53,428 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,428 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#1]
2014-01-21 12:12:53,428 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#2]
2014-01-21 12:12:53,428 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#3]
2014-01-21 12:12:53,429 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#4]
2014-01-21 12:12:53,429 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#5]
2014-01-21 12:12:53,429 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,429 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,429 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#1]
2014-01-21 12:12:53,429 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#1]
2014-01-21 12:12:53,429 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#2]
2014-01-21 12:12:53,430 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#2]
2014-01-21 12:12:53,430 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#3]
2014-01-21 12:12:53,430 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#3]
2014-01-21 12:12:53,430 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#4]
2014-01-21 12:12:53,430 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#4]
2014-01-21 12:12:53,430 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#5]
2014-01-21 12:12:53,430 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#5]
2014-01-21 12:12:53,431 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,431 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,431 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,431 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,431 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#1], was: [jpa.Question.propositionCollection#1] (uninitialized)
2014-01-21 12:12:53,431 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#1], was: [jpa.Question.reponseHistoCollection#1] (uninitialized)
2014-01-21 12:12:53,431 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#1], was: [jpa.Question.reponseCollection#1] (uninitialized)
2014-01-21 12:12:53,431 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#2], was: [jpa.Question.propositionCollection#2] (uninitialized)
2014-01-21 12:12:53,431 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#2], was: [jpa.Question.reponseHistoCollection#2] (uninitialized)
2014-01-21 12:12:53,432 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#2], was: [jpa.Question.reponseCollection#2] (uninitialized)
2014-01-21 12:12:53,432 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#3], was: [jpa.Question.propositionCollection#3] (uninitialized)
2014-01-21 12:12:53,432 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#3], was: [jpa.Question.reponseHistoCollection#3] (uninitialized)
2014-01-21 12:12:53,432 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#3], was: [jpa.Question.reponseCollection#3] (uninitialized)
2014-01-21 12:12:53,432 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#4], was: [jpa.Question.propositionCollection#4] (uninitialized)
2014-01-21 12:12:53,432 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#4], was: [jpa.Question.reponseHistoCollection#4] (uninitialized)
2014-01-21 12:12:53,432 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#4], was: [jpa.Question.reponseCollection#4] (uninitialized)
2014-01-21 12:12:53,433 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#5], was: [jpa.Question.propositionCollection#5] (uninitialized)
2014-01-21 12:12:53,433 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#5], was: [jpa.Question.reponseHistoCollection#5] (uninitialized)
2014-01-21 12:12:53,433 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#5], was: [jpa.Question.reponseCollection#5] (uninitialized)
2014-01-21 12:12:53,433 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
2014-01-21 12:12:53,433 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 15 collections
2014-01-21 12:12:53,433 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,433 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=5}
2014-01-21 12:12:53,433 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=4}
2014-01-21 12:12:53,434 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=A l'aide d'une boucle foreach, affichez le contenu du tableau., questionid=3}
2014-01-21 12:12:53,434 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=2}
2014-01-21 12:12:53,434 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=1}
2014-01-21 12:12:53,435 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,437 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,437 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,437 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495734
2014-01-21 12:12:53,437 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,437 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,437 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,448 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,449 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,449 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 127, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:12:53,450 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,450 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,450 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,450 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:53,450 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,450 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,450 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=127, questionid=jpa.Question#1}
2014-01-21 12:12:53,451 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,451 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-21 12:12:53,451 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:12:53,452 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,455 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,455 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,456 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,456 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,456 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,456 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:53,456 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,456 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,456 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=127, questionid=jpa.Question#1}
2014-01-21 12:12:53,456 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 127
2014-01-21 12:12:53,457 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '127'

2014-01-21 12:12:53,457 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,458 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:12:53,458 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-01-21 12:12:53,458 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:12:53,458 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@97dd98
2014-01-21 12:12:53,458 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-01-21 12:12:53,459 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:12:53,459 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 127 ) ) )
2014-01-21 12:12:53,459 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:12:53,459 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-01-21 12:12:53,459 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:12:53,459 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '127'

2014-01-21 12:12:53,459 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,460 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 127
2014-01-21 12:12:53,460 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=127
2014-01-21 12:12:53,460 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,460 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,460 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=127
2014-01-21 12:12:53,461 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,462 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#127]
2014-01-21 12:12:53,462 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,462 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,462 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,462 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,462 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495734
2014-01-21 12:12:53,462 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,462 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,462 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,477 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,477 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,479 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,479 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-01-21 12:12:53,480 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,480 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#127]
2014-01-21 12:12:53,480 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,480 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,480 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#127]
2014-01-21 12:12:53,481 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#127]
2014-01-21 12:12:53,481 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,481 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,481 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,481 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,481 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-21 12:12:53,481 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,481 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,482 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=127, questionid=jpa.Question#1}
2014-01-21 12:12:53,482 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,482 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-01-21 12:12:53,482 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:12:53,483 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,484 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,485 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,485 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,485 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495734
2014-01-21 12:12:53,485 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,485 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,485 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,494 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,494 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,495 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 128, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:12:53,495 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,495 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,495 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,496 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:53,496 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,496 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,496 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=128, questionid=jpa.Question#2}
2014-01-21 12:12:53,496 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,496 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-21 12:12:53,497 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:12:53,497 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,499 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,499 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,499 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,500 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,500 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,500 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:53,500 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,500 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,500 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=128, questionid=jpa.Question#2}
2014-01-21 12:12:53,500 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 128
2014-01-21 12:12:53,501 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '128'

2014-01-21 12:12:53,501 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,501 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:12:53,502 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-01-21 12:12:53,502 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:12:53,502 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@97dd98
2014-01-21 12:12:53,502 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-01-21 12:12:53,502 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:12:53,502 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 128 ) ) )
2014-01-21 12:12:53,503 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:12:53,503 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-01-21 12:12:53,503 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:12:53,503 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '128'

2014-01-21 12:12:53,503 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,503 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 128
2014-01-21 12:12:53,503 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=128
2014-01-21 12:12:53,504 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,504 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,504 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=128
2014-01-21 12:12:53,505 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,505 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#128]
2014-01-21 12:12:53,505 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,505 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,505 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,506 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,506 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495735
2014-01-21 12:12:53,506 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,506 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,506 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,515 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,515 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,516 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,516 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-01-21 12:12:53,517 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,517 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#128]
2014-01-21 12:12:53,517 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,517 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,517 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#128]
2014-01-21 12:12:53,518 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#128]
2014-01-21 12:12:53,518 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,518 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,518 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,518 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,518 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-21 12:12:53,518 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,518 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,518 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=128, questionid=jpa.Question#2}
2014-01-21 12:12:53,519 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,519 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-01-21 12:12:53,519 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:12:53,520 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,521 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,521 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,522 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,522 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495735
2014-01-21 12:12:53,522 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,522 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,522 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,532 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,532 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,533 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 129, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:12:53,533 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,533 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,533 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,533 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:53,533 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,533 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,534 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=129, questionid=jpa.Question#3}
2014-01-21 12:12:53,534 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,534 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-21 12:12:53,534 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:12:53,535 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,536 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,537 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,537 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,537 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,537 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,537 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:53,537 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,537 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,537 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=129, questionid=jpa.Question#3}
2014-01-21 12:12:53,538 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 129
2014-01-21 12:12:53,539 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '129'

2014-01-21 12:12:53,539 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,539 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:12:53,539 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-01-21 12:12:53,539 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:12:53,539 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@97dd98
2014-01-21 12:12:53,539 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-01-21 12:12:53,540 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:12:53,540 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 129 ) ) )
2014-01-21 12:12:53,540 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:12:53,540 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-01-21 12:12:53,540 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:12:53,540 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '129'

2014-01-21 12:12:53,541 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,541 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 129
2014-01-21 12:12:53,541 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=129
2014-01-21 12:12:53,541 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,541 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,541 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=129
2014-01-21 12:12:53,542 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,542 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#129]
2014-01-21 12:12:53,542 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,543 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,543 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,543 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,543 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495735
2014-01-21 12:12:53,543 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,543 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,543 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,552 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,552 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,553 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,553 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-01-21 12:12:53,554 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,554 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#129]
2014-01-21 12:12:53,555 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,555 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,555 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#129]
2014-01-21 12:12:53,555 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#129]
2014-01-21 12:12:53,555 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,555 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,555 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,555 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,556 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-21 12:12:53,556 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,556 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,556 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=129, questionid=jpa.Question#3}
2014-01-21 12:12:53,556 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,556 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-01-21 12:12:53,556 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:12:53,557 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,558 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,559 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,559 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,559 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495735
2014-01-21 12:12:53,559 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,559 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,559 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,568 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,568 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,569 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 130, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:12:53,569 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,569 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,569 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,569 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:53,569 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,569 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,569 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=130, questionid=jpa.Question#4}
2014-01-21 12:12:53,570 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,570 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-21 12:12:53,570 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:12:53,571 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,572 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,572 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,572 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,572 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,573 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,573 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:53,573 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,573 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,573 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=130, questionid=jpa.Question#4}
2014-01-21 12:12:53,573 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 130
2014-01-21 12:12:53,574 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '130'

2014-01-21 12:12:53,574 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,574 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:12:53,575 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-01-21 12:12:53,575 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:12:53,575 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@97dd98
2014-01-21 12:12:53,575 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-01-21 12:12:53,575 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:12:53,575 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 130 ) ) )
2014-01-21 12:12:53,575 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:12:53,576 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-01-21 12:12:53,576 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:12:53,576 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '130'

2014-01-21 12:12:53,576 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,576 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 130
2014-01-21 12:12:53,576 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=130
2014-01-21 12:12:53,576 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,577 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,577 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=130
2014-01-21 12:12:53,578 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,578 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#130]
2014-01-21 12:12:53,578 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,578 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,578 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,578 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,579 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495735
2014-01-21 12:12:53,579 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,579 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,579 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,588 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,588 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,589 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,589 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-01-21 12:12:53,590 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,590 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#130]
2014-01-21 12:12:53,590 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,590 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,591 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#130]
2014-01-21 12:12:53,591 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#130]
2014-01-21 12:12:53,591 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,591 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,591 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,591 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,591 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-21 12:12:53,591 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,591 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,592 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=130, questionid=jpa.Question#4}
2014-01-21 12:12:53,592 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,592 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-01-21 12:12:53,592 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:12:53,593 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,594 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,595 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,595 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,595 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495735
2014-01-21 12:12:53,595 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,595 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,595 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,604 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,605 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,605 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 131, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:12:53,605 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,606 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,606 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,606 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:53,606 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,606 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,606 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=131, questionid=jpa.Question#5}
2014-01-21 12:12:53,606 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,607 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-21 12:12:53,607 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:12:53,608 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,609 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,610 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,610 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,610 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,610 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,610 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:53,610 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,610 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,611 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=131, questionid=jpa.Question#5}
2014-01-21 12:12:53,611 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 131
2014-01-21 12:12:53,612 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '131'

2014-01-21 12:12:53,612 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,612 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:12:53,612 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-01-21 12:12:53,612 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:12:53,613 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@97dd98
2014-01-21 12:12:53,613 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-01-21 12:12:53,613 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:12:53,613 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 131 ) ) )
2014-01-21 12:12:53,613 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:12:53,613 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-01-21 12:12:53,613 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:12:53,614 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '131'

2014-01-21 12:12:53,614 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,614 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 131
2014-01-21 12:12:53,614 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=131
2014-01-21 12:12:53,614 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,614 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,615 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=131
2014-01-21 12:12:53,616 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,617 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#131]
2014-01-21 12:12:53,617 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,617 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,617 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,617 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,617 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495736
2014-01-21 12:12:53,617 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,617 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,617 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,631 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,631 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,633 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,633 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-01-21 12:12:53,635 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,635 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#131]
2014-01-21 12:12:53,636 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,636 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,636 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#131]
2014-01-21 12:12:53,636 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#131]
2014-01-21 12:12:53,637 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,637 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,637 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,637 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,637 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-21 12:12:53,637 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,637 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,637 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=131, questionid=jpa.Question#5}
2014-01-21 12:12:53,638 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,638 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-01-21 12:12:53,638 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:12:53,639 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,641 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,642 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,642 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,642 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495736
2014-01-21 12:12:53,642 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,642 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,642 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,653 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,653 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,654 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,654 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONTEXT as QUESTION2_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-01-21 12:12:53,655 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,656 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#6]
2014-01-21 12:12:53,656 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#7]
2014-01-21 12:12:53,656 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#8]
2014-01-21 12:12:53,656 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#9]
2014-01-21 12:12:53,656 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#10]
2014-01-21 12:12:53,656 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#11]
2014-01-21 12:12:53,656 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,657 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,657 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#6]
2014-01-21 12:12:53,657 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#6]
2014-01-21 12:12:53,657 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#7]
2014-01-21 12:12:53,657 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#7]
2014-01-21 12:12:53,657 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#8]
2014-01-21 12:12:53,657 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#8]
2014-01-21 12:12:53,657 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#9]
2014-01-21 12:12:53,658 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#9]
2014-01-21 12:12:53,658 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#10]
2014-01-21 12:12:53,658 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#10]
2014-01-21 12:12:53,658 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#11]
2014-01-21 12:12:53,658 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#11]
2014-01-21 12:12:53,658 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,658 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,658 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,658 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,659 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#6], was: [jpa.Question.propositionCollection#6] (uninitialized)
2014-01-21 12:12:53,659 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#6], was: [jpa.Question.reponseHistoCollection#6] (uninitialized)
2014-01-21 12:12:53,659 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#6], was: [jpa.Question.reponseCollection#6] (uninitialized)
2014-01-21 12:12:53,659 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#7], was: [jpa.Question.propositionCollection#7] (uninitialized)
2014-01-21 12:12:53,659 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#7], was: [jpa.Question.reponseHistoCollection#7] (uninitialized)
2014-01-21 12:12:53,659 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#7], was: [jpa.Question.reponseCollection#7] (uninitialized)
2014-01-21 12:12:53,659 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#8], was: [jpa.Question.propositionCollection#8] (uninitialized)
2014-01-21 12:12:53,660 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#8], was: [jpa.Question.reponseHistoCollection#8] (uninitialized)
2014-01-21 12:12:53,660 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#8], was: [jpa.Question.reponseCollection#8] (uninitialized)
2014-01-21 12:12:53,660 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#9], was: [jpa.Question.propositionCollection#9] (uninitialized)
2014-01-21 12:12:53,660 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#9], was: [jpa.Question.reponseHistoCollection#9] (uninitialized)
2014-01-21 12:12:53,660 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#9], was: [jpa.Question.reponseCollection#9] (uninitialized)
2014-01-21 12:12:53,660 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#10], was: [jpa.Question.propositionCollection#10] (uninitialized)
2014-01-21 12:12:53,660 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#10], was: [jpa.Question.reponseHistoCollection#10] (uninitialized)
2014-01-21 12:12:53,660 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#10], was: [jpa.Question.reponseCollection#10] (uninitialized)
2014-01-21 12:12:53,660 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#11], was: [jpa.Question.propositionCollection#11] (uninitialized)
2014-01-21 12:12:53,661 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#11], was: [jpa.Question.reponseHistoCollection#11] (uninitialized)
2014-01-21 12:12:53,661 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#11], was: [jpa.Question.reponseCollection#11] (uninitialized)
2014-01-21 12:12:53,661 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
2014-01-21 12:12:53,661 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 18 collections
2014-01-21 12:12:53,661 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,661 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=10}
2014-01-21 12:12:53,661 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Boucles foreach imbriquées. Soit le tableau array. A l’aide des boucles foreach affichez le résultat ci-dessous., questionid=11}
2014-01-21 12:12:53,661 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Boucle imbriquées, affichez la table de multiplication du chiffre 12.Codez l'algorithme ci-dessous., questionid=9}
2014-01-21 12:12:53,661 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Soit le tableau fruits : codez le reste de l’algorithme., questionid=8}
2014-01-21 12:12:53,662 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=7}
2014-01-21 12:12:53,662 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Affichez toutes les valeurs du tableau avec la boucle foreach (K + V)., questionid=6}
2014-01-21 12:12:53,662 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,663 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,663 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,663 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495736
2014-01-21 12:12:53,664 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,664 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,664 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,673 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,673 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,674 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 132, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:12:53,674 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,674 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,674 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,674 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:53,675 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,675 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,675 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=132, questionid=jpa.Question#6}
2014-01-21 12:12:53,675 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,675 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-21 12:12:53,676 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:12:53,676 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,678 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,679 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,679 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,679 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,679 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,679 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:53,679 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,679 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,679 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=132, questionid=jpa.Question#6}
2014-01-21 12:12:53,680 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 132
2014-01-21 12:12:53,681 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '132'

2014-01-21 12:12:53,681 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,681 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:12:53,681 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-01-21 12:12:53,681 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:12:53,681 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@97dd98
2014-01-21 12:12:53,681 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-01-21 12:12:53,682 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:12:53,682 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 132 ) ) )
2014-01-21 12:12:53,682 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:12:53,682 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-01-21 12:12:53,682 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:12:53,682 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '132'

2014-01-21 12:12:53,682 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,683 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 132
2014-01-21 12:12:53,683 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=132
2014-01-21 12:12:53,683 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,683 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,683 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=132
2014-01-21 12:12:53,684 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,684 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#132]
2014-01-21 12:12:53,684 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,685 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,685 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,685 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,685 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495736
2014-01-21 12:12:53,685 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,685 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,685 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,695 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,695 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,696 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,696 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-01-21 12:12:53,697 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,697 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#132]
2014-01-21 12:12:53,697 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,697 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,697 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#132]
2014-01-21 12:12:53,697 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#132]
2014-01-21 12:12:53,697 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,698 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,698 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,698 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,698 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-21 12:12:53,698 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,698 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,698 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=132, questionid=jpa.Question#6}
2014-01-21 12:12:53,698 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,698 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-01-21 12:12:53,699 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:12:53,699 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,701 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,701 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,701 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,701 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495737
2014-01-21 12:12:53,705 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,705 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,705 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,718 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,718 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,718 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 133, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:12:53,719 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,719 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,719 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,719 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:53,719 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,719 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,719 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=133, questionid=jpa.Question#7}
2014-01-21 12:12:53,720 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,720 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-21 12:12:53,720 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:12:53,721 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,722 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,723 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,723 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,723 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,723 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,723 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:53,723 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,723 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,723 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=133, questionid=jpa.Question#7}
2014-01-21 12:12:53,724 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 133
2014-01-21 12:12:53,725 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '133'

2014-01-21 12:12:53,725 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,725 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:12:53,725 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-01-21 12:12:53,725 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:12:53,725 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@97dd98
2014-01-21 12:12:53,725 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-01-21 12:12:53,726 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:12:53,726 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 133 ) ) )
2014-01-21 12:12:53,726 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:12:53,726 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-01-21 12:12:53,726 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:12:53,726 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '133'

2014-01-21 12:12:53,726 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,727 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 133
2014-01-21 12:12:53,727 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=133
2014-01-21 12:12:53,727 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,727 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,727 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=133
2014-01-21 12:12:53,728 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,728 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#133]
2014-01-21 12:12:53,728 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,728 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,729 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,729 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,729 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495737
2014-01-21 12:12:53,729 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,729 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,729 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,738 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,738 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,739 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,739 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-01-21 12:12:53,740 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,740 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#133]
2014-01-21 12:12:53,740 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,740 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,740 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#133]
2014-01-21 12:12:53,741 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#133]
2014-01-21 12:12:53,741 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,741 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,741 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,741 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,741 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-21 12:12:53,741 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,741 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,741 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=133, questionid=jpa.Question#7}
2014-01-21 12:12:53,742 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,742 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-01-21 12:12:53,742 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:12:53,743 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,744 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,744 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,745 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,745 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495737
2014-01-21 12:12:53,745 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,745 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,745 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,755 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,755 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,756 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 134, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:12:53,756 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,756 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,756 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,756 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:53,756 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,756 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,756 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=134, questionid=jpa.Question#8}
2014-01-21 12:12:53,757 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,757 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-21 12:12:53,757 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:12:53,758 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,759 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,760 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,760 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,760 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,760 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,761 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:53,761 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,761 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,761 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=134, questionid=jpa.Question#8}
2014-01-21 12:12:53,761 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 134
2014-01-21 12:12:53,762 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '134'

2014-01-21 12:12:53,762 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,762 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:12:53,762 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-01-21 12:12:53,763 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:12:53,763 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@97dd98
2014-01-21 12:12:53,763 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-01-21 12:12:53,763 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:12:53,763 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 134 ) ) )
2014-01-21 12:12:53,763 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:12:53,763 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-01-21 12:12:53,764 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:12:53,764 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '134'

2014-01-21 12:12:53,764 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,764 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 134
2014-01-21 12:12:53,764 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=134
2014-01-21 12:12:53,764 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,764 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,765 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=134
2014-01-21 12:12:53,765 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,766 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#134]
2014-01-21 12:12:53,766 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,766 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,766 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,766 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,766 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495737
2014-01-21 12:12:53,766 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,766 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,766 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,776 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,776 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,777 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,777 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-01-21 12:12:53,778 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,778 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#134]
2014-01-21 12:12:53,779 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,779 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,779 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#134]
2014-01-21 12:12:53,779 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#134]
2014-01-21 12:12:53,779 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,779 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,779 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,779 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,780 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-21 12:12:53,780 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,780 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,780 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=134, questionid=jpa.Question#8}
2014-01-21 12:12:53,780 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,780 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-01-21 12:12:53,780 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:12:53,781 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,782 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,783 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,783 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,783 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495737
2014-01-21 12:12:53,783 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,783 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,784 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,792 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,793 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,793 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 135, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:12:53,793 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,794 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,794 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,794 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:53,794 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,794 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,794 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=135, questionid=jpa.Question#9}
2014-01-21 12:12:53,794 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,794 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-21 12:12:53,795 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:12:53,795 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,797 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,797 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,797 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,797 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,798 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,798 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:53,798 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,798 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,798 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=135, questionid=jpa.Question#9}
2014-01-21 12:12:53,798 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 135
2014-01-21 12:12:53,799 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '135'

2014-01-21 12:12:53,799 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,799 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:12:53,800 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-01-21 12:12:53,800 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:12:53,800 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@97dd98
2014-01-21 12:12:53,800 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-01-21 12:12:53,800 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:12:53,800 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 135 ) ) )
2014-01-21 12:12:53,801 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:12:53,801 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-01-21 12:12:53,801 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:12:53,801 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '135'

2014-01-21 12:12:53,801 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,801 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 135
2014-01-21 12:12:53,801 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=135
2014-01-21 12:12:53,801 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,802 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,802 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=135
2014-01-21 12:12:53,803 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,803 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#135]
2014-01-21 12:12:53,803 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,803 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,803 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,804 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,804 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495738
2014-01-21 12:12:53,804 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,804 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,804 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,813 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,813 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,814 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,814 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-01-21 12:12:53,815 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,815 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#135]
2014-01-21 12:12:53,815 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,815 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,815 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#135]
2014-01-21 12:12:53,816 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#135]
2014-01-21 12:12:53,816 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,816 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,816 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,816 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,816 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-21 12:12:53,816 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,816 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,816 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=135, questionid=jpa.Question#9}
2014-01-21 12:12:53,816 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,817 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-01-21 12:12:53,817 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:12:53,818 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,819 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,820 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,820 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,820 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495738
2014-01-21 12:12:53,820 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,820 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,820 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,830 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,830 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,831 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 136, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:12:53,831 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,831 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,831 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,831 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:53,831 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,832 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,832 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=136, questionid=jpa.Question#10}
2014-01-21 12:12:53,832 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,832 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-21 12:12:53,832 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:12:53,833 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,835 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,835 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,836 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,836 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,836 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,836 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:53,836 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,836 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,836 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=136, questionid=jpa.Question#10}
2014-01-21 12:12:53,837 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 136
2014-01-21 12:12:53,838 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '136'

2014-01-21 12:12:53,838 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,838 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:12:53,838 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-01-21 12:12:53,838 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:12:53,838 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@97dd98
2014-01-21 12:12:53,839 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-01-21 12:12:53,839 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:12:53,839 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 136 ) ) )
2014-01-21 12:12:53,839 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:12:53,839 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-01-21 12:12:53,839 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:12:53,840 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '136'

2014-01-21 12:12:53,840 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,840 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 136
2014-01-21 12:12:53,840 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=136
2014-01-21 12:12:53,840 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,841 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,841 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=136
2014-01-21 12:12:53,842 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,842 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#136]
2014-01-21 12:12:53,842 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,842 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,842 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,843 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,843 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495738
2014-01-21 12:12:53,843 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,843 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,843 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,856 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,856 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,857 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,857 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-01-21 12:12:53,858 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,859 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#136]
2014-01-21 12:12:53,859 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,859 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,859 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#136]
2014-01-21 12:12:53,859 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#136]
2014-01-21 12:12:53,860 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,860 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,860 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,860 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,860 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-21 12:12:53,860 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,860 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,860 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=136, questionid=jpa.Question#10}
2014-01-21 12:12:53,861 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,861 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-01-21 12:12:53,861 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:12:53,863 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,868 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,869 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,869 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,870 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495738
2014-01-21 12:12:53,870 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,870 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,870 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,883 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,883 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,884 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 137, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:12:53,884 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,884 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,884 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,884 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:53,884 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,884 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,885 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=137, questionid=jpa.Question#11}
2014-01-21 12:12:53,885 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,885 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-21 12:12:53,885 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:12:53,886 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,888 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,889 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,889 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,889 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,890 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,890 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:53,890 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,890 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,890 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=137, questionid=jpa.Question#11}
2014-01-21 12:12:53,890 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 137
2014-01-21 12:12:53,891 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '137'

2014-01-21 12:12:53,891 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,891 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:12:53,892 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-01-21 12:12:53,892 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:12:53,892 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@97dd98
2014-01-21 12:12:53,892 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-01-21 12:12:53,892 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:12:53,892 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 137 ) ) )
2014-01-21 12:12:53,893 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:12:53,893 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-01-21 12:12:53,893 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:12:53,893 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '137'

2014-01-21 12:12:53,893 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,893 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 137
2014-01-21 12:12:53,893 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=137
2014-01-21 12:12:53,893 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:12:53,894 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,894 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=137
2014-01-21 12:12:53,895 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,895 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#137]
2014-01-21 12:12:53,895 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,895 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,896 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,896 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,896 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495738
2014-01-21 12:12:53,896 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,896 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,896 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,906 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,906 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,907 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,907 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-01-21 12:12:53,908 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,908 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#137]
2014-01-21 12:12:53,908 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,909 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,909 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#137]
2014-01-21 12:12:53,909 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#137]
2014-01-21 12:12:53,909 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,909 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,909 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,909 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,909 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-21 12:12:53,909 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,910 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,910 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=137, questionid=jpa.Question#11}
2014-01-21 12:12:53,910 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,910 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-01-21 12:12:53,910 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:12:53,911 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,912 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,912 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,913 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,913 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495739
2014-01-21 12:12:53,913 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,913 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,913 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,922 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,922 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,923 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,923 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select test0_.TESTID as TESTID3_, test0_.TESTMATIERE as TESTMATI2_3_, test0_.TESTDUREE as TESTDUREE3_, test0_.TEST_NBQUESTION_RUB as TEST4_3_, test0_.TESTNATURE as TESTNATURE3_, test0_.TESTFORMAT as TESTFORMAT3_, test0_.TEST_START as TEST7_3_, test0_.TEST_DESCRIPTION as TEST8_3_, test0_.THEME as THEME3_, test0_.NIVEAU as NIVEAU3_, test0_.CATEGORIEID as CATEGOR11_3_ from test test0_ where test0_.TESTID=1
2014-01-21 12:12:53,924 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,924 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#1]
2014-01-21 12:12:53,924 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,925 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,925 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#1]
2014-01-21 12:12:53,925 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#1]
2014-01-21 12:12:53,925 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,925 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,925 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,925 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,926 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.rubriqueCollection#1], was: [jpa.Test.rubriqueCollection#1] (uninitialized)
2014-01-21 12:12:53,926 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.jointureCollection#1], was: [jpa.Test.jointureCollection#1] (uninitialized)
2014-01-21 12:12:53,926 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:53,926 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2014-01-21 12:12:53,926 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,926 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Test{rubriqueCollection=<uninitialized>, testmatiere=Développement PHP, testformat=PHP, theme=Boucles en PHP, jointureCollection=<uninitialized>, testnature=THEM, testid=1, testDescription=Les boucles permettent d'effectuer un certain nombre de fois les mêmes opérations, par exemple afficher une suite de nombres que l'on incrémentera à chaque tour de boucle. 
Vous allez pouvoir répéter autant d'instructions que vous souhaitez et vous arrêter lorsque vous l'aurez décidé.
Ce test vérifiera les compétences du candidat sur ces notions élémentaires.
, categorieid=jpa.Categorie#1, testStart=Instructions début, niveau=1, testNbquestionRub=10, testduree=20}
2014-01-21 12:12:53,927 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,928 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,928 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,928 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495739
2014-01-21 12:12:53,928 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,928 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,928 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,937 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,937 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,938 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,938 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ cross join question question1_ cross join rubrique rubrique2_ where propositio0_.QUESTIONID=question1_.QUESTIONID and question1_.RUBRIQUEID=rubrique2_.RUBRIQUEID and rubrique2_.TESTID=?
2014-01-21 12:12:53,939 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,939 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#1]
2014-01-21 12:12:53,939 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#2]
2014-01-21 12:12:53,939 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#3]
2014-01-21 12:12:53,940 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#4]
2014-01-21 12:12:53,940 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#5]
2014-01-21 12:12:53,940 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#6]
2014-01-21 12:12:53,940 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#7]
2014-01-21 12:12:53,940 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#8]
2014-01-21 12:12:53,940 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#9]
2014-01-21 12:12:53,940 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#10]
2014-01-21 12:12:53,941 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#11]
2014-01-21 12:12:53,941 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,941 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,941 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#1]
2014-01-21 12:12:53,941 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#1]
2014-01-21 12:12:53,941 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#2]
2014-01-21 12:12:53,941 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#2]
2014-01-21 12:12:53,941 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#3]
2014-01-21 12:12:53,942 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#3]
2014-01-21 12:12:53,942 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#4]
2014-01-21 12:12:53,942 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#4]
2014-01-21 12:12:53,942 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#5]
2014-01-21 12:12:53,945 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#5]
2014-01-21 12:12:53,945 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#6]
2014-01-21 12:12:53,946 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#6]
2014-01-21 12:12:53,946 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#7]
2014-01-21 12:12:53,946 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#7]
2014-01-21 12:12:53,946 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#8]
2014-01-21 12:12:53,946 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#8]
2014-01-21 12:12:53,946 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#9]
2014-01-21 12:12:53,946 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#9]
2014-01-21 12:12:53,946 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#10]
2014-01-21 12:12:53,947 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#10]
2014-01-21 12:12:53,947 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#11]
2014-01-21 12:12:53,947 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#11]
2014-01-21 12:12:53,947 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,947 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,947 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,947 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,947 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 11 objects
2014-01-21 12:12:53,948 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,948 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,948 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 1, propositionvrai=1, propositionid=1, questionid=jpa.Question#1}
2014-01-21 12:12:53,948 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 3, propositionvrai=1, propositionid=3, questionid=jpa.Question#3}
2014-01-21 12:12:53,948 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 2, propositionvrai=1, propositionid=2, questionid=jpa.Question#2}
2014-01-21 12:12:53,948 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 9, propositionvrai=1, propositionid=9, questionid=jpa.Question#9}
2014-01-21 12:12:53,948 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 5, propositionvrai=1, propositionid=5, questionid=jpa.Question#5}
2014-01-21 12:12:53,948 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 8, propositionvrai=1, propositionid=8, questionid=jpa.Question#8}
2014-01-21 12:12:53,948 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 4, propositionvrai=1, propositionid=4, questionid=jpa.Question#4}
2014-01-21 12:12:53,948 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 11, propositionvrai=1, propositionid=11, questionid=jpa.Question#11}
2014-01-21 12:12:53,949 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 7, propositionvrai=1, propositionid=7, questionid=jpa.Question#7}
2014-01-21 12:12:53,949 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 10, propositionvrai=1, propositionid=10, questionid=jpa.Question#10}
2014-01-21 12:12:53,949 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 6, propositionvrai=1, propositionid=6, questionid=jpa.Question#6}
2014-01-21 12:12:53,950 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,951 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,951 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,952 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495739
2014-01-21 12:12:53,953 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,953 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,953 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,961 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,962 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,962 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,963 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,963 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,963 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,964 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,964 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.TESTID as TESTID3_0_, this_.TESTMATIERE as TESTMATI2_3_0_, this_.TESTDUREE as TESTDUREE3_0_, this_.TEST_NBQUESTION_RUB as TEST4_3_0_, this_.TESTNATURE as TESTNATURE3_0_, this_.TESTFORMAT as TESTFORMAT3_0_, this_.TEST_START as TEST7_3_0_, this_.TEST_DESCRIPTION as TEST8_3_0_, this_.THEME as THEME3_0_, this_.NIVEAU as NIVEAU3_0_, this_.CATEGORIEID as CATEGOR11_3_0_ from test this_
2014-01-21 12:12:53,965 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,965 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#1]
2014-01-21 12:12:53,965 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#2]
2014-01-21 12:12:53,965 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#3]
2014-01-21 12:12:53,966 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#4]
2014-01-21 12:12:53,966 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#5]
2014-01-21 12:12:53,966 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#6]
2014-01-21 12:12:53,966 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,966 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,966 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#1]
2014-01-21 12:12:53,967 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#1]
2014-01-21 12:12:53,967 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#2]
2014-01-21 12:12:53,967 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#2]
2014-01-21 12:12:53,967 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#3]
2014-01-21 12:12:53,967 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#3]
2014-01-21 12:12:53,967 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#4]
2014-01-21 12:12:53,968 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#4]
2014-01-21 12:12:53,968 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#5]
2014-01-21 12:12:53,968 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#5]
2014-01-21 12:12:53,968 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#6]
2014-01-21 12:12:53,968 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#6]
2014-01-21 12:12:53,968 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,968 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,969 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495739
2014-01-21 12:12:53,969 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,969 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,969 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,979 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,979 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,979 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,979 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONTEXT as QUESTION2_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.QUESTIONID=16
2014-01-21 12:12:53,980 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,980 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#16]
2014-01-21 12:12:53,981 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,981 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,981 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#16]
2014-01-21 12:12:53,981 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#16]
2014-01-21 12:12:53,981 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,981 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,981 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,981 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,982 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#16], was: [jpa.Question.propositionCollection#16] (uninitialized)
2014-01-21 12:12:53,982 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#16], was: [jpa.Question.reponseHistoCollection#16] (uninitialized)
2014-01-21 12:12:53,982 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#16], was: [jpa.Question.reponseCollection#16] (uninitialized)
2014-01-21 12:12:53,982 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:53,982 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2014-01-21 12:12:53,982 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,982 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#10, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=A quoi sert l'opérateur @ en php ?, questionid=16}
2014-01-21 12:12:53,983 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,983 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,983 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,984 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495739
2014-01-21 12:12:53,984 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,984 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,984 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:53,992 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:53,992 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:53,993 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:53,993 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.QUESTIONID=? and propositio0_.PROPOSITIONVRAI=1
2014-01-21 12:12:53,994 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:53,994 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#50]
2014-01-21 12:12:53,994 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:53,994 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:53,994 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#50]
2014-01-21 12:12:53,995 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#50]
2014-01-21 12:12:53,995 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:53,995 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:53,995 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:53,995 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:53,995 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:53,995 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:53,995 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:53,995 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=bloquer les messages d'erreurs, propositionvrai=1, propositionid=50, questionid=jpa.Question#16}
2014-01-21 12:12:53,996 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:53,997 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:53,997 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:53,997 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495739
2014-01-21 12:12:53,997 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:53,997 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:53,997 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:54,006 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:54,007 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:54,007 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:54,008 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:54,009 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:54,009 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:54,009 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:54,009 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ADMINID as ADMINID1_0_, this_.ADMINLOGIN as ADMINLOGIN1_0_, this_.ADMINPASSWORD as ADMINPAS3_1_0_ from admin this_
2014-01-21 12:12:54,010 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:54,010 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Admin#1]
2014-01-21 12:12:54,010 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Admin#2]
2014-01-21 12:12:54,011 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:54,011 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:54,011 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Admin#1]
2014-01-21 12:12:54,011 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Admin#1]
2014-01-21 12:12:54,011 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Admin#2]
2014-01-21 12:12:54,011 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Admin#2]
2014-01-21 12:12:54,011 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:54,011 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:54,012 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495740
2014-01-21 12:12:54,012 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:54,012 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:54,012 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:54,021 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:54,021 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:54,022 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:54,022 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:54,022 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:54,022 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2014-01-21 12:12:54,023 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 1 removals to 0 collections
2014-01-21 12:12:54,023 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:54,023 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=grosLard@hotmail.fr, passageCollection=null, candidatDateNaissance=Tue Jan 01 00:00:00 GMT-12:00 1985, candidatPrenom=Samuel, candidatNom=Faber, candidatCivilite=Mr, candidatid=1}
2014-01-21 12:12:54,023 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:54,023 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update candidat set CANDIDAT_CIVILITE=?, CANDIDAT_NOM=?, CANDIDAT_PRENOM=?, CANDIDAT_MAIL=?, CANDIDAT_DATE_NAISSANCE=? where CANDIDATID=?
2014-01-21 12:12:54,024 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:12:54,024 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:54,027 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:54,027 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:54,028 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:54,028 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:54,028 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:54,028 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:54,028 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:54,028 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:54,028 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=grosLard@hotmail.fr, passageCollection=null, candidatDateNaissance=Tue Jan 01 00:00:00 GMT-12:00 1985, candidatPrenom=Samuel, candidatNom=Faber, candidatCivilite=Mr, candidatid=1}
2014-01-21 12:12:54,028 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:54,028 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select candidat0_.CANDIDATID as CANDIDATID2_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_ from candidat candidat0_ where candidat0_.CANDIDATID=1
2014-01-21 12:12:54,029 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:54,029 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#1]
2014-01-21 12:12:54,029 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:54,030 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:54,030 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:54,030 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:54,030 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495740
2014-01-21 12:12:54,030 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:54,030 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:54,030 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:54,040 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:54,040 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:54,041 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:54,041 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:54,041 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:54,041 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2014-01-21 12:12:54,041 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 1 removals to 0 collections
2014-01-21 12:12:54,041 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:54,041 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=nazbrock.grave@hotmail.fr, passageCollection=null, candidatDateNaissance=Thu Mar 10 00:00:00 GMT-12:00 1983, candidatPrenom=Romain, candidatNom=Crusson, candidatCivilite=Mr, candidatid=2}
2014-01-21 12:12:54,042 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:54,042 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update candidat set CANDIDAT_CIVILITE=?, CANDIDAT_NOM=?, CANDIDAT_PRENOM=?, CANDIDAT_MAIL=?, CANDIDAT_DATE_NAISSANCE=? where CANDIDATID=?
2014-01-21 12:12:54,042 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:12:54,043 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:54,044 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:54,045 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:54,045 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:54,045 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:54,045 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:54,045 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:54,046 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:54,046 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:54,046 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=nazbrock.grave@hotmail.fr, passageCollection=null, candidatDateNaissance=Thu Mar 10 00:00:00 GMT-12:00 1983, candidatPrenom=Romain, candidatNom=Crusson, candidatCivilite=Mr, candidatid=2}
2014-01-21 12:12:54,046 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:54,046 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select candidat0_.CANDIDATID as CANDIDATID2_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_ from candidat candidat0_ where candidat0_.CANDIDATID=2
2014-01-21 12:12:54,047 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:54,047 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#2]
2014-01-21 12:12:54,047 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:54,047 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:54,047 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:54,047 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:54,047 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495740
2014-01-21 12:12:54,048 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:54,048 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:54,048 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:54,057 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:54,057 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:54,058 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:54,059 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:54,059 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:54,059 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2014-01-21 12:12:54,059 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 1 removals to 0 collections
2014-01-21 12:12:54,059 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:54,059 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=beaugosse.laclasse@hotmail.fr, passageCollection=null, candidatDateNaissance=Tue Oct 21 00:00:00 GMT-12:00 1980, candidatPrenom=loïc, candidatNom=Crusson, candidatCivilite=Mr, candidatid=3}
2014-01-21 12:12:54,059 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:54,060 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update candidat set CANDIDAT_CIVILITE=?, CANDIDAT_NOM=?, CANDIDAT_PRENOM=?, CANDIDAT_MAIL=?, CANDIDAT_DATE_NAISSANCE=? where CANDIDATID=?
2014-01-21 12:12:54,060 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:12:54,061 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:54,062 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:54,063 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:54,063 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:54,063 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:54,063 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:54,064 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:54,064 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:54,064 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:54,064 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=beaugosse.laclasse@hotmail.fr, passageCollection=null, candidatDateNaissance=Tue Oct 21 00:00:00 GMT-12:00 1980, candidatPrenom=loïc, candidatNom=Crusson, candidatCivilite=Mr, candidatid=3}
2014-01-21 12:12:54,064 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:54,064 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select candidat0_.CANDIDATID as CANDIDATID2_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_ from candidat candidat0_ where candidat0_.CANDIDATID=3
2014-01-21 12:12:54,065 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:54,065 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#3]
2014-01-21 12:12:54,065 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:54,066 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:54,066 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:54,066 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:54,066 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495740
2014-01-21 12:12:54,066 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:54,066 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:54,066 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:54,075 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:54,075 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:54,076 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:54,076 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:54,076 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:54,076 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2014-01-21 12:12:54,076 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 1 removals to 0 collections
2014-01-21 12:12:54,076 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:54,076 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=duped.freeMan@hotmail.fr, passageCollection=null, candidatDateNaissance=Tue Jun 07 00:00:00 GMT-12:00 1983, candidatPrenom=Hervé, candidatNom=Halgand, candidatCivilite=Mr, candidatid=4}
2014-01-21 12:12:54,077 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:54,077 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update candidat set CANDIDAT_CIVILITE=?, CANDIDAT_NOM=?, CANDIDAT_PRENOM=?, CANDIDAT_MAIL=?, CANDIDAT_DATE_NAISSANCE=? where CANDIDATID=?
2014-01-21 12:12:54,077 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:12:54,078 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:54,079 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:54,080 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:54,080 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:54,080 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:12:54,080 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:12:54,080 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:12:54,080 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:12:54,080 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:12:54,081 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=duped.freeMan@hotmail.fr, passageCollection=null, candidatDateNaissance=Tue Jun 07 00:00:00 GMT-12:00 1983, candidatPrenom=Hervé, candidatNom=Halgand, candidatCivilite=Mr, candidatid=4}
2014-01-21 12:12:54,081 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:54,081 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select candidat0_.CANDIDATID as CANDIDATID2_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_ from candidat candidat0_ where candidat0_.CANDIDATID=4
2014-01-21 12:12:54,082 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:54,082 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#4]
2014-01-21 12:12:54,082 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:54,082 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:54,082 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:54,082 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:54,083 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903495740
2014-01-21 12:12:54,083 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:12:54,083 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:12:54,083 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:12:54,094 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:12:54,094 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:12:54,095 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:12:54,096 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:12:54,096 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:12:54,096 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:12:54,097 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:12:54,097 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.CANDIDATID as CANDIDATID2_0_, this_.CANDIDAT_CIVILITE as CANDIDAT2_2_0_, this_.CANDIDAT_NOM as CANDIDAT3_2_0_, this_.CANDIDAT_PRENOM as CANDIDAT4_2_0_, this_.CANDIDAT_MAIL as CANDIDAT5_2_0_, this_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_0_ from candidat this_
2014-01-21 12:12:54,098 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:12:54,098 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#1]
2014-01-21 12:12:54,098 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#2]
2014-01-21 12:12:54,098 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#3]
2014-01-21 12:12:54,099 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#4]
2014-01-21 12:12:54,099 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:12:54,099 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:12:54,099 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Candidat#1]
2014-01-21 12:12:54,101 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Candidat#1]
2014-01-21 12:12:54,101 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Candidat#2]
2014-01-21 12:12:54,101 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Candidat#2]
2014-01-21 12:12:54,101 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Candidat#3]
2014-01-21 12:12:54,101 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Candidat#3]
2014-01-21 12:12:54,101 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Candidat#4]
2014-01-21 12:12:54,101 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Candidat#4]
2014-01-21 12:12:54,101 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:12:54,101 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:14,068 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:112) - Initializing new StandardEnvironment
2014-01-21 12:19:14,073 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:107) - Adding [systemProperties] PropertySource with lowest search precedence
2014-01-21 12:19:14,074 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:107) - Adding [systemEnvironment] PropertySource with lowest search precedence
2014-01-21 12:19:14,074 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:116) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2014-01-21 12:19:14,077 [main] INFO  org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:510) - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@121e5a: startup date [Tue Jan 21 12:19:14 GMT-12:00 2014]; root of context hierarchy
2014-01-21 12:19:14,121 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:112) - Initializing new StandardEnvironment
2014-01-21 12:19:14,121 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:107) - Adding [systemProperties] PropertySource with lowest search precedence
2014-01-21 12:19:14,121 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:107) - Adding [systemEnvironment] PropertySource with lowest search precedence
2014-01-21 12:19:14,121 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:116) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2014-01-21 12:19:14,131 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from class path resource [applicationContext.xml]
2014-01-21 12:19:14,133 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2014-01-21 12:19:14,158 [main] WARN  org.springframework.util.xml.SimpleSaxErrorHandler.warning(SimpleSaxErrorHandler.java:47) - Ignored XML validation warning
org.xml.sax.SAXParseException; lineNumber: 14; columnNumber: 34; SchemaLocation : La valeur schemaLocation 'http://www.springframework.org/schema/beans         http://www.springframework.org/schema/beans/spring-beans-2.5.xsd         http://www.springframework.org/schema/aop          http://www.springframework.org/schema/aop/spring-aop-2.5.xsd         http://www.springframework.org/schema/context         http://www.springframework.org/schema/tx         http://www.springframework.org/schema/context/spring-context-2.5.xsd' doit comporter un nombre pair d'URI.
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:198)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.warning(ErrorHandlerWrapper.java:99)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:433)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:368)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:325)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$XSIErrorReporter.reportError(XMLSchemaValidator.java:458)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.storeLocations(XMLSchemaValidator.java:2353)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:1760)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.startElement(XMLSchemaValidator.java:746)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:378)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDriver.scanRootElementHook(XMLNSDocumentScannerImpl.java:604)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3130)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:880)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:117)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:347)
	at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:75)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:388)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:174)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:209)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:180)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:243)
	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:127)
	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:93)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:130)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:537)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:451)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at dao.DaoTest.<init>(DaoTest.java:49)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at java.lang.Class.newInstance(Class.java:374)
	at org.apache.maven.surefire.junit.PojoTestSet.<init>(PojoTestSet.java:64)
	at org.apache.maven.surefire.junit.JUnit3Provider.createTestSet(JUnit3Provider.java:103)
	at org.apache.maven.surefire.junit.JUnit3Provider.invoke(JUnit3Provider.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
2014-01-21 12:19:14,162 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:140) - Loading schema mappings from [META-INF/spring.schemas]
2014-01-21 12:19:14,166 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:146) - Loaded schema mappings: {http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
2014-01-21 12:19:14,168 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-2.5.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2014-01-21 12:19:14,213 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:106) - Loading bean definitions
2014-01-21 12:19:14,235 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:216) - Loaded 11 bean definitions from location pattern [applicationContext.xml]
2014-01-21 12:19:14,235 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:540) - Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@121e5a: org.springframework.beans.factory.support.DefaultListableBeanFactory@1e610e3: defining beans [dataSource,sessionFactory,adminDao,candidatDao,testDao,jointureDao,passageDao,rubriqueDao,questionDao,propositionDao,reponseDao]; root of factory hierarchy
2014-01-21 12:19:14,269 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:807) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@9ddf21]
2014-01-21 12:19:14,272 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:831) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1eb8639]
2014-01-21 12:19:14,274 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:598) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e610e3: defining beans [dataSource,sessionFactory,adminDao,candidatDao,testDao,jointureDao,passageDao,rubriqueDao,questionDao,propositionDao,reponseDao]; root of factory hierarchy
2014-01-21 12:19:14,275 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'dataSource'
2014-01-21 12:19:14,275 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'dataSource'
2014-01-21 12:19:14,292 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2014-01-21 12:19:14,329 [main] INFO  org.springframework.jdbc.datasource.DriverManagerDataSource.setDriverClassName(DriverManagerDataSource.java:153) - Loaded JDBC driver: com.mysql.jdbc.Driver
2014-01-21 12:19:14,330 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'dataSource'
2014-01-21 12:19:14,330 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'sessionFactory'
2014-01-21 12:19:14,330 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'sessionFactory'
2014-01-21 12:19:14,335 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2014-01-21 12:19:14,359 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'dataSource'
2014-01-21 12:19:14,369 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1555) - Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2014-01-21 12:19:14,400 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@c1b980
2014-01-21 12:19:14,400 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@c1b980
2014-01-21 12:19:14,400 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@c1b980
2014-01-21 12:19:14,401 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1e9fd86
2014-01-21 12:19:14,402 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1d8928e
2014-01-21 12:19:14,403 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration yes_no -> org.hibernate.type.YesNoType@1ce3aac
2014-01-21 12:19:14,404 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@1e54f45
2014-01-21 12:19:14,404 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@1e54f45
2014-01-21 12:19:14,404 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1e54f45
2014-01-21 12:19:14,405 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration character -> org.hibernate.type.CharacterType@1eb96fc
2014-01-21 12:19:14,405 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char -> org.hibernate.type.CharacterType@1eb96fc
2014-01-21 12:19:14,405 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1eb96fc
2014-01-21 12:19:14,407 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@17191a4
2014-01-21 12:19:14,407 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@17191a4
2014-01-21 12:19:14,407 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@17191a4
2014-01-21 12:19:14,408 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration integer -> org.hibernate.type.IntegerType@277469
2014-01-21 12:19:14,408 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration int -> org.hibernate.type.IntegerType@277469
2014-01-21 12:19:14,408 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@277469
2014-01-21 12:19:14,410 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@1297ee0
2014-01-21 12:19:14,410 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@1297ee0
2014-01-21 12:19:14,410 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1297ee0
2014-01-21 12:19:14,412 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@bbe4d3
2014-01-21 12:19:14,412 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@bbe4d3
2014-01-21 12:19:14,412 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@bbe4d3
2014-01-21 12:19:14,413 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@152b54b
2014-01-21 12:19:14,413 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@152b54b
2014-01-21 12:19:14,413 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@152b54b
2014-01-21 12:19:14,415 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@d00d24
2014-01-21 12:19:14,415 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@d00d24
2014-01-21 12:19:14,416 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@fea41a
2014-01-21 12:19:14,416 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@fea41a
2014-01-21 12:19:14,417 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration string -> org.hibernate.type.StringType@30b298
2014-01-21 12:19:14,417 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.String -> org.hibernate.type.StringType@30b298
2014-01-21 12:19:14,418 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration url -> org.hibernate.type.UrlType@83a865
2014-01-21 12:19:14,418 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@83a865
2014-01-21 12:19:14,420 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration date -> org.hibernate.type.DateType@5ebdf7
2014-01-21 12:19:14,420 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5ebdf7
2014-01-21 12:19:14,421 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration time -> org.hibernate.type.TimeType@11a0fb
2014-01-21 12:19:14,421 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@11a0fb
2014-01-21 12:19:14,423 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timestamp -> org.hibernate.type.TimestampType@723592
2014-01-21 12:19:14,423 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@723592
2014-01-21 12:19:14,423 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@723592
2014-01-21 12:19:14,424 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@a937ae
2014-01-21 12:19:14,425 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar -> org.hibernate.type.CalendarType@a5cd0c
2014-01-21 12:19:14,425 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@a5cd0c
2014-01-21 12:19:14,425 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@a5cd0c
2014-01-21 12:19:14,426 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1c86ddb
2014-01-21 12:19:14,427 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration locale -> org.hibernate.type.LocaleType@1d53277
2014-01-21 12:19:14,427 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1d53277
2014-01-21 12:19:14,428 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration currency -> org.hibernate.type.CurrencyType@12d12e6
2014-01-21 12:19:14,428 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@12d12e6
2014-01-21 12:19:14,431 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@fb2274
2014-01-21 12:19:14,432 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@fb2274
2014-01-21 12:19:14,432 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration class -> org.hibernate.type.ClassType@1f52d1d
2014-01-21 12:19:14,432 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1f52d1d
2014-01-21 12:19:14,434 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@d69a74
2014-01-21 12:19:14,434 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@d69a74
2014-01-21 12:19:14,434 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@69b5a7
2014-01-21 12:19:14,435 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7ad394
2014-01-21 12:19:14,436 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration binary -> org.hibernate.type.BinaryType@9fbdd7
2014-01-21 12:19:14,436 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte[] -> org.hibernate.type.BinaryType@9fbdd7
2014-01-21 12:19:14,436 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [B -> org.hibernate.type.BinaryType@9fbdd7
2014-01-21 12:19:14,437 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@19d035e
2014-01-21 12:19:14,437 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@19d035e
2014-01-21 12:19:14,437 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@19d035e
2014-01-21 12:19:14,438 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration image -> org.hibernate.type.ImageType@bd9750
2014-01-21 12:19:14,439 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters -> org.hibernate.type.CharArrayType@167e86a
2014-01-21 12:19:14,439 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char[] -> org.hibernate.type.CharArrayType@167e86a
2014-01-21 12:19:14,439 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [C -> org.hibernate.type.CharArrayType@167e86a
2014-01-21 12:19:14,440 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1c8590c
2014-01-21 12:19:14,440 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1c8590c
2014-01-21 12:19:14,440 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1c8590c
2014-01-21 12:19:14,441 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration text -> org.hibernate.type.TextType@f604b0
2014-01-21 12:19:14,446 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration blob -> org.hibernate.type.BlobType@845f64
2014-01-21 12:19:14,447 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@845f64
2014-01-21 12:19:14,447 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@81205b
2014-01-21 12:19:14,447 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e579f9
2014-01-21 12:19:14,451 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration clob -> org.hibernate.type.ClobType@1806022
2014-01-21 12:19:14,451 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1806022
2014-01-21 12:19:14,451 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ef152b
2014-01-21 12:19:14,452 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@b98c18
2014-01-21 12:19:14,452 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@3837ba
2014-01-21 12:19:14,453 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration serializable -> org.hibernate.type.SerializableType@19104e3
2014-01-21 12:19:14,455 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration object -> org.hibernate.type.ObjectType@e9635a
2014-01-21 12:19:14,456 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@e9635a
2014-01-21 12:19:14,456 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1d37602
2014-01-21 12:19:14,456 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1e890b4
2014-01-21 12:19:14,456 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1744996
2014-01-21 12:19:14,456 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18b3f9a
2014-01-21 12:19:14,456 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@fcc66a
2014-01-21 12:19:14,457 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@14662e3
2014-01-21 12:19:14,457 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@62df1
2014-01-21 12:19:14,457 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1b23bb1
2014-01-21 12:19:14,471 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - Hibernate Commons Annotations 3.2.0.Final
2014-01-21 12:19:14,475 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:603) - Hibernate 3.6.10.Final
2014-01-21 12:19:14,476 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:636) - hibernate.properties not found
2014-01-21 12:19:14,479 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:814) - Bytecode provider name : javassist
2014-01-21 12:19:14,481 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:695) - using JDK 1.4 java.sql.Timestamp handling
2014-01-21 12:19:14,518 [main] DEBUG org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
2014-01-21 12:19:14,519 [main] DEBUG org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
2014-01-21 12:19:14,519 [main] DEBUG org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
2014-01-21 12:19:14,519 [main] DEBUG org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
2014-01-21 12:19:14,521 [main] DEBUG org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
2014-01-21 12:19:14,521 [main] DEBUG org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
2014-01-21 12:19:14,522 [main] DEBUG org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
2014-01-21 12:19:14,522 [main] DEBUG org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
2014-01-21 12:19:14,522 [main] DEBUG org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
2014-01-21 12:19:14,523 [main] DEBUG org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
2014-01-21 12:19:14,523 [main] DEBUG org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
2014-01-21 12:19:14,524 [main] DEBUG org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
2014-01-21 12:19:14,524 [main] DEBUG org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
2014-01-21 12:19:14,524 [main] DEBUG org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
2014-01-21 12:19:14,525 [main] DEBUG org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
2014-01-21 12:19:14,549 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) - trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2014-01-21 12:19:14,549 [main] WARN  org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) - recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2014-01-21 12:19:14,549 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) - attempting to resolve on classpath under org/hibernate/
2014-01-21 12:19:14,550 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) - located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2014-01-21 12:19:14,581 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) - trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2014-01-21 12:19:14,582 [main] WARN  org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) - recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2014-01-21 12:19:14,582 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) - attempting to resolve on classpath under org/hibernate/
2014-01-21 12:19:14,582 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) - located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2014-01-21 12:19:14,594 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) - trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2014-01-21 12:19:14,594 [main] WARN  org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) - recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2014-01-21 12:19:14,594 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) - attempting to resolve on classpath under org/hibernate/
2014-01-21 12:19:14,594 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) - located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2014-01-21 12:19:14,605 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) - trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2014-01-21 12:19:14,605 [main] WARN  org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) - recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2014-01-21 12:19:14,605 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) - attempting to resolve on classpath under org/hibernate/
2014-01-21 12:19:14,605 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) - located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2014-01-21 12:19:14,614 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) - trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2014-01-21 12:19:14,614 [main] WARN  org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) - recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2014-01-21 12:19:14,614 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) - attempting to resolve on classpath under org/hibernate/
2014-01-21 12:19:14,614 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) - located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2014-01-21 12:19:14,621 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) - trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2014-01-21 12:19:14,621 [main] WARN  org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) - recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2014-01-21 12:19:14,621 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) - attempting to resolve on classpath under org/hibernate/
2014-01-21 12:19:14,622 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) - located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2014-01-21 12:19:14,632 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) - trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2014-01-21 12:19:14,633 [main] WARN  org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) - recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2014-01-21 12:19:14,633 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) - attempting to resolve on classpath under org/hibernate/
2014-01-21 12:19:14,633 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) - located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2014-01-21 12:19:14,641 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) - trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2014-01-21 12:19:14,641 [main] WARN  org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) - recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2014-01-21 12:19:14,641 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) - attempting to resolve on classpath under org/hibernate/
2014-01-21 12:19:14,642 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) - located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2014-01-21 12:19:14,649 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) - trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2014-01-21 12:19:14,649 [main] WARN  org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) - recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2014-01-21 12:19:14,649 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) - attempting to resolve on classpath under org/hibernate/
2014-01-21 12:19:14,650 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) - located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2014-01-21 12:19:14,655 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) - trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2014-01-21 12:19:14,655 [main] WARN  org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) - recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2014-01-21 12:19:14,655 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) - attempting to resolve on classpath under org/hibernate/
2014-01-21 12:19:14,656 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) - located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2014-01-21 12:19:14,661 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) - trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2014-01-21 12:19:14,662 [main] WARN  org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) - recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2014-01-21 12:19:14,662 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) - attempting to resolve on classpath under org/hibernate/
2014-01-21 12:19:14,662 [main] DEBUG org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) - located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2014-01-21 12:19:14,687 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
2014-01-21 12:19:14,702 [main] INFO  org.hibernate.cfg.HbmBinder.bindRootPersistentClassCommonValues(HbmBinder.java:353) - Mapping class: jpa.Proposition -> proposition
2014-01-21 12:19:14,710 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: propositionid -> PROPOSITIONID
2014-01-21 12:19:14,717 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: propositionlibelle -> PROPOSITIONLIBELLE
2014-01-21 12:19:14,717 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: propositionvrai -> PROPOSITIONVRAI
2014-01-21 12:19:14,720 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: questionid -> QUESTIONID
2014-01-21 12:19:14,720 [main] INFO  org.hibernate.cfg.HbmBinder.bindRootPersistentClassCommonValues(HbmBinder.java:353) - Mapping class: jpa.Admin -> admin
2014-01-21 12:19:14,721 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: adminid -> ADMINID
2014-01-21 12:19:14,721 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: adminlogin -> ADMINLOGIN
2014-01-21 12:19:14,721 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: adminpassword -> ADMINPASSWORD
2014-01-21 12:19:14,721 [main] INFO  org.hibernate.cfg.HbmBinder.bindRootPersistentClassCommonValues(HbmBinder.java:353) - Mapping class: jpa.Candidat -> candidat
2014-01-21 12:19:14,722 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: candidatid -> CANDIDATID
2014-01-21 12:19:14,722 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: candidatCivilite -> CANDIDAT_CIVILITE
2014-01-21 12:19:14,723 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: candidatNom -> CANDIDAT_NOM
2014-01-21 12:19:14,723 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: candidatPrenom -> CANDIDAT_PRENOM
2014-01-21 12:19:14,723 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: candidatMail -> CANDIDAT_MAIL
2014-01-21 12:19:14,723 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: candidatDateNaissance -> CANDIDAT_DATE_NAISSANCE
2014-01-21 12:19:14,725 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: passageCollection
2014-01-21 12:19:14,725 [main] INFO  org.hibernate.cfg.HbmBinder.bindRootPersistentClassCommonValues(HbmBinder.java:353) - Mapping class: jpa.Test -> test
2014-01-21 12:19:14,727 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: testid -> TESTID
2014-01-21 12:19:14,727 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: testmatiere -> TESTMATIERE
2014-01-21 12:19:14,727 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: testduree -> TESTDUREE
2014-01-21 12:19:14,727 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: testNbquestionRub -> TEST_NBQUESTION_RUB
2014-01-21 12:19:14,727 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: testnature -> TESTNATURE
2014-01-21 12:19:14,727 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: testformat -> TESTFORMAT
2014-01-21 12:19:14,728 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: testStart -> TEST_START
2014-01-21 12:19:14,728 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: testDescription -> TEST_DESCRIPTION
2014-01-21 12:19:14,728 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: theme -> THEME
2014-01-21 12:19:14,728 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: niveau -> NIVEAU
2014-01-21 12:19:14,728 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: rubriqueCollection
2014-01-21 12:19:14,728 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: categorieid -> CATEGORIEID
2014-01-21 12:19:14,728 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: jointureCollection
2014-01-21 12:19:14,729 [main] INFO  org.hibernate.cfg.HbmBinder.bindRootPersistentClassCommonValues(HbmBinder.java:353) - Mapping class: jpa.Categorie -> categorie
2014-01-21 12:19:14,729 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: categorieid -> CATEGORIEID
2014-01-21 12:19:14,729 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: categorielibelle -> CATEGORIELIBELLE
2014-01-21 12:19:14,729 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: testCollection
2014-01-21 12:19:14,729 [main] INFO  org.hibernate.cfg.HbmBinder.bindRootPersistentClassCommonValues(HbmBinder.java:353) - Mapping class: jpa.Passage -> passage
2014-01-21 12:19:14,730 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: passageid -> PASSAGEID
2014-01-21 12:19:14,730 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: passageEtat -> PASSAGE_ETAT
2014-01-21 12:19:14,730 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: passageDate -> PASSAGE_DATE
2014-01-21 12:19:14,730 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: passagedebutVal -> PASSAGEDEBUT_VAL
2014-01-21 12:19:14,730 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: passagefinVal -> PASSAGEFIN_VAL
2014-01-21 12:19:14,731 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: reponseHistoCollection
2014-01-21 12:19:14,731 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: reponseCollection
2014-01-21 12:19:14,731 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: candidatid -> CANDIDATID
2014-01-21 12:19:14,731 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: jointureCollection
2014-01-21 12:19:14,731 [main] INFO  org.hibernate.cfg.HbmBinder.bindRootPersistentClassCommonValues(HbmBinder.java:353) - Mapping class: jpa.Rubrique -> rubrique
2014-01-21 12:19:14,732 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: rubriqueid -> RUBRIQUEID
2014-01-21 12:19:14,732 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: rubriquenom -> RUBRIQUENOM
2014-01-21 12:19:14,732 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: testid -> TESTID
2014-01-21 12:19:14,732 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: questionCollection
2014-01-21 12:19:14,732 [main] INFO  org.hibernate.cfg.HbmBinder.bindRootPersistentClassCommonValues(HbmBinder.java:353) - Mapping class: jpa.ReponseHisto -> reponse_histo
2014-01-21 12:19:14,733 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: reponsehistoid -> REPONSEHISTOID
2014-01-21 12:19:14,733 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: reponsevaleur -> REPONSEVALEUR
2014-01-21 12:19:14,733 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: reponsedebut -> REPONSEDEBUT
2014-01-21 12:19:14,734 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: reponsefin -> REPONSEFIN
2014-01-21 12:19:14,734 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: passageid -> PASSAGEID
2014-01-21 12:19:14,734 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: questionid -> QUESTIONID
2014-01-21 12:19:14,734 [main] INFO  org.hibernate.cfg.HbmBinder.bindRootPersistentClassCommonValues(HbmBinder.java:353) - Mapping class: jpa.Reponse -> reponse
2014-01-21 12:19:14,735 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: reponseid -> REPONSEID
2014-01-21 12:19:14,735 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: reponsetexte -> REPONSETEXTE
2014-01-21 12:19:14,735 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: reponseduree -> REPONSEDUREE
2014-01-21 12:19:14,735 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: reponsemessage -> REPONSEMESSAGE
2014-01-21 12:19:14,735 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: passageid -> PASSAGEID
2014-01-21 12:19:14,735 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: questionid -> QUESTIONID
2014-01-21 12:19:14,736 [main] INFO  org.hibernate.cfg.HbmBinder.bindRootPersistentClassCommonValues(HbmBinder.java:353) - Mapping class: jpa.Question -> question
2014-01-21 12:19:14,736 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: questionid -> QUESTIONID
2014-01-21 12:19:14,736 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: questiontext -> QUESTIONTEXT
2014-01-21 12:19:14,736 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: rubriqueid -> RUBRIQUEID
2014-01-21 12:19:14,736 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: propositionCollection
2014-01-21 12:19:14,736 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: reponseHistoCollection
2014-01-21 12:19:14,737 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: reponseCollection
2014-01-21 12:19:14,737 [main] INFO  org.hibernate.cfg.HbmBinder.bindRootPersistentClassCommonValues(HbmBinder.java:353) - Mapping class: jpa.Jointure -> jointure
2014-01-21 12:19:14,737 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: jointureid -> JOINTUREID
2014-01-21 12:19:14,738 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: champvide -> CHAMPVIDE
2014-01-21 12:19:14,738 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: testid -> TESTID
2014-01-21 12:19:14,738 [main] DEBUG org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) - Mapped property: passageid -> PASSAGEID
2014-01-21 12:19:14,738 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
2014-01-21 12:19:14,739 [main] DEBUG org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
2014-01-21 12:19:14,740 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
2014-01-21 12:19:14,740 [main] DEBUG org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
2014-01-21 12:19:14,740 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
2014-01-21 12:19:14,740 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:63) - Second pass for collection: jpa.Candidat.passageCollection
2014-01-21 12:19:14,740 [main] INFO  org.hibernate.cfg.HbmBinder.bindCollectionSecondPass(HbmBinder.java:2508) - Mapping collection: jpa.Candidat.passageCollection -> passage
2014-01-21 12:19:14,741 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:79) - Mapped collection key: CANDIDATID, one-to-many: jpa.Passage
2014-01-21 12:19:14,741 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:63) - Second pass for collection: jpa.Test.rubriqueCollection
2014-01-21 12:19:14,741 [main] INFO  org.hibernate.cfg.HbmBinder.bindCollectionSecondPass(HbmBinder.java:2508) - Mapping collection: jpa.Test.rubriqueCollection -> rubrique
2014-01-21 12:19:14,741 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:79) - Mapped collection key: TESTID, one-to-many: jpa.Rubrique
2014-01-21 12:19:14,741 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:63) - Second pass for collection: jpa.Test.jointureCollection
2014-01-21 12:19:14,741 [main] INFO  org.hibernate.cfg.HbmBinder.bindCollectionSecondPass(HbmBinder.java:2508) - Mapping collection: jpa.Test.jointureCollection -> jointure
2014-01-21 12:19:14,741 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:79) - Mapped collection key: TESTID, one-to-many: jpa.Jointure
2014-01-21 12:19:14,741 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:63) - Second pass for collection: jpa.Categorie.testCollection
2014-01-21 12:19:14,741 [main] INFO  org.hibernate.cfg.HbmBinder.bindCollectionSecondPass(HbmBinder.java:2508) - Mapping collection: jpa.Categorie.testCollection -> test
2014-01-21 12:19:14,742 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:79) - Mapped collection key: CATEGORIEID, one-to-many: jpa.Test
2014-01-21 12:19:14,742 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:63) - Second pass for collection: jpa.Passage.reponseHistoCollection
2014-01-21 12:19:14,742 [main] INFO  org.hibernate.cfg.HbmBinder.bindCollectionSecondPass(HbmBinder.java:2508) - Mapping collection: jpa.Passage.reponseHistoCollection -> reponse_histo
2014-01-21 12:19:14,742 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:79) - Mapped collection key: PASSAGEID, one-to-many: jpa.ReponseHisto
2014-01-21 12:19:14,742 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:63) - Second pass for collection: jpa.Passage.reponseCollection
2014-01-21 12:19:14,742 [main] INFO  org.hibernate.cfg.HbmBinder.bindCollectionSecondPass(HbmBinder.java:2508) - Mapping collection: jpa.Passage.reponseCollection -> reponse
2014-01-21 12:19:14,743 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:79) - Mapped collection key: PASSAGEID, one-to-many: jpa.Reponse
2014-01-21 12:19:14,743 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:63) - Second pass for collection: jpa.Passage.jointureCollection
2014-01-21 12:19:14,743 [main] INFO  org.hibernate.cfg.HbmBinder.bindCollectionSecondPass(HbmBinder.java:2508) - Mapping collection: jpa.Passage.jointureCollection -> jointure
2014-01-21 12:19:14,743 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:79) - Mapped collection key: PASSAGEID, one-to-many: jpa.Jointure
2014-01-21 12:19:14,743 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:63) - Second pass for collection: jpa.Rubrique.questionCollection
2014-01-21 12:19:14,743 [main] INFO  org.hibernate.cfg.HbmBinder.bindCollectionSecondPass(HbmBinder.java:2508) - Mapping collection: jpa.Rubrique.questionCollection -> question
2014-01-21 12:19:14,743 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:79) - Mapped collection key: RUBRIQUEID, one-to-many: jpa.Question
2014-01-21 12:19:14,744 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:63) - Second pass for collection: jpa.Question.propositionCollection
2014-01-21 12:19:14,744 [main] INFO  org.hibernate.cfg.HbmBinder.bindCollectionSecondPass(HbmBinder.java:2508) - Mapping collection: jpa.Question.propositionCollection -> proposition
2014-01-21 12:19:14,744 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:79) - Mapped collection key: QUESTIONID, one-to-many: jpa.Proposition
2014-01-21 12:19:14,744 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:63) - Second pass for collection: jpa.Question.reponseHistoCollection
2014-01-21 12:19:14,744 [main] INFO  org.hibernate.cfg.HbmBinder.bindCollectionSecondPass(HbmBinder.java:2508) - Mapping collection: jpa.Question.reponseHistoCollection -> reponse_histo
2014-01-21 12:19:14,744 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:79) - Mapped collection key: QUESTIONID, one-to-many: jpa.ReponseHisto
2014-01-21 12:19:14,744 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:63) - Second pass for collection: jpa.Question.reponseCollection
2014-01-21 12:19:14,744 [main] INFO  org.hibernate.cfg.HbmBinder.bindCollectionSecondPass(HbmBinder.java:2508) - Mapping collection: jpa.Question.reponseCollection -> reponse
2014-01-21 12:19:14,745 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:79) - Mapped collection key: QUESTIONID, one-to-many: jpa.Reponse
2014-01-21 12:19:14,745 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
2014-01-21 12:19:14,745 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
2014-01-21 12:19:14,745 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
2014-01-21 12:19:14,745 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: jpa.Passage
2014-01-21 12:19:14,745 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: jpa.Test
2014-01-21 12:19:14,745 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: jpa.Candidat
2014-01-21 12:19:14,745 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: jpa.Question
2014-01-21 12:19:14,745 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: jpa.Rubrique
2014-01-21 12:19:14,746 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: jpa.Passage
2014-01-21 12:19:14,746 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: jpa.Question
2014-01-21 12:19:14,746 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: jpa.Passage
2014-01-21 12:19:14,746 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: jpa.Question
2014-01-21 12:19:14,746 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: jpa.Test
2014-01-21 12:19:14,746 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: jpa.Categorie
2014-01-21 12:19:14,747 [main] INFO  org.hibernate.cfg.Configuration.applyHibernateValidatorLegacyConstraintsOnDDL(Configuration.java:1676) - Hibernate Validator not found: ignoring
2014-01-21 12:19:14,759 [main] INFO  org.hibernate.validator.util.Version.<clinit>(Version.java:56) - Hibernate Validator 4.1.0.Final
2014-01-21 12:19:14,763 [main] DEBUG org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:66) - Found javax.persistence.PersistenceUtil on classpath.
2014-01-21 12:19:14,764 [main] INFO  org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:81) - Instantiated an instance of org.hibernate.validator.engine.resolver.JPATraversableResolver.
2014-01-21 12:19:14,766 [main] DEBUG org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:200) - No META-INF/validation.xml found. Using annotation based configuration only
2014-01-21 12:19:14,853 [main] INFO  org.springframework.orm.hibernate3.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:780) - Building new Hibernate SessionFactory
2014-01-21 12:19:14,853 [main] DEBUG org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) - Preparing to build session factory with filters : {}
2014-01-21 12:19:14,854 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
2014-01-21 12:19:14,854 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
2014-01-21 12:19:14,854 [main] DEBUG org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
2014-01-21 12:19:14,854 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
2014-01-21 12:19:14,854 [main] DEBUG org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
2014-01-21 12:19:14,854 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
2014-01-21 12:19:14,854 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
2014-01-21 12:19:14,854 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
2014-01-21 12:19:14,854 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
2014-01-21 12:19:14,854 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: jpa.Passage
2014-01-21 12:19:14,854 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: jpa.Test
2014-01-21 12:19:14,855 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: jpa.Candidat
2014-01-21 12:19:14,855 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: jpa.Question
2014-01-21 12:19:14,855 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: jpa.Rubrique
2014-01-21 12:19:14,855 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: jpa.Passage
2014-01-21 12:19:14,855 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: jpa.Question
2014-01-21 12:19:14,855 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: jpa.Passage
2014-01-21 12:19:14,855 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: jpa.Question
2014-01-21 12:19:14,855 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: jpa.Test
2014-01-21 12:19:14,855 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: jpa.Categorie
2014-01-21 12:19:14,856 [main] DEBUG org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:66) - Found javax.persistence.PersistenceUtil on classpath.
2014-01-21 12:19:14,856 [main] INFO  org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:81) - Instantiated an instance of org.hibernate.validator.engine.resolver.JPATraversableResolver.
2014-01-21 12:19:14,856 [main] DEBUG org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:200) - No META-INF/validation.xml found. Using annotation based configuration only
2014-01-21 12:19:14,872 [main] DEBUG org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) - Legacy Validator not present in classpath, ignoring event listener registration
2014-01-21 12:19:14,872 [main] DEBUG org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:66) - Found javax.persistence.PersistenceUtil on classpath.
2014-01-21 12:19:14,872 [main] INFO  org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:81) - Instantiated an instance of org.hibernate.validator.engine.resolver.JPATraversableResolver.
2014-01-21 12:19:14,873 [main] DEBUG org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:200) - No META-INF/validation.xml found. Using annotation based configuration only
2014-01-21 12:19:14,876 [main] DEBUG org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) - Search not present in classpath, ignoring event listener registration.
2014-01-21 12:19:14,876 [main] INFO  org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
2014-01-21 12:19:14,879 [main] INFO  org.hibernate.connection.ConnectionProviderFactory.initializeConnectionProviderFromConfig(ConnectionProviderFactory.java:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
2014-01-21 12:19:14,879 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:15,106 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:136) - Using dialect: org.hibernate.dialect.MySQLDialect
2014-01-21 12:19:15,116 [main] INFO  org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) - Database ->
       name : MySQL
    version : 5.5.28
      major : 5
      minor : 5
2014-01-21 12:19:15,116 [main] INFO  org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.27 ( Revision: alexander.soklakov@oracle.com-20131021093118-gtm1bh1vb450xipt )
      major : 5
      minor : 1
2014-01-21 12:19:15,123 [main] INFO  org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:65) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
2014-01-21 12:19:15,124 [main] INFO  org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
2014-01-21 12:19:15,125 [main] INFO  org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) - Automatic flush during beforeCompletion(): disabled
2014-01-21 12:19:15,125 [main] INFO  org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) - Automatic session close at end of transaction: disabled
2014-01-21 12:19:15,125 [main] INFO  org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) - JDBC batch size: 15
2014-01-21 12:19:15,125 [main] INFO  org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) - JDBC batch updates for versioned data: disabled
2014-01-21 12:19:15,126 [main] INFO  org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) - Scrollable result sets: enabled
2014-01-21 12:19:15,126 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) - Wrap result sets: disabled
2014-01-21 12:19:15,126 [main] INFO  org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) - JDBC3 getGeneratedKeys(): enabled
2014-01-21 12:19:15,127 [main] INFO  org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) - Connection release mode: auto
2014-01-21 12:19:15,127 [main] INFO  org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) - Maximum outer join fetch depth: 2
2014-01-21 12:19:15,128 [main] INFO  org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) - Default batch fetch size: 1
2014-01-21 12:19:15,128 [main] INFO  org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) - Generate SQL with comments: disabled
2014-01-21 12:19:15,128 [main] INFO  org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) - Order SQL updates by primary key: disabled
2014-01-21 12:19:15,128 [main] INFO  org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) - Order SQL inserts for batching: disabled
2014-01-21 12:19:15,129 [main] INFO  org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
2014-01-21 12:19:15,130 [main] INFO  org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) - Using ASTQueryTranslatorFactory
2014-01-21 12:19:15,130 [main] INFO  org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) - Query language substitutions: {}
2014-01-21 12:19:15,130 [main] INFO  org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) - JPA-QL strict compliance: disabled
2014-01-21 12:19:15,131 [main] INFO  org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) - Second-level cache: enabled
2014-01-21 12:19:15,131 [main] INFO  org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) - Query cache: disabled
2014-01-21 12:19:15,131 [main] INFO  org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
2014-01-21 12:19:15,135 [main] INFO  org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) - Optimize cache for minimal puts: disabled
2014-01-21 12:19:15,136 [main] INFO  org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) - Structured second-level cache entries: disabled
2014-01-21 12:19:15,139 [main] INFO  org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) - Statistics: disabled
2014-01-21 12:19:15,140 [main] INFO  org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) - Deleted entity synthetic identifier rollback: disabled
2014-01-21 12:19:15,140 [main] INFO  org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) - Default entity-mode: pojo
2014-01-21 12:19:15,140 [main] INFO  org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) - Named query checking : enabled
2014-01-21 12:19:15,140 [main] INFO  org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) - Check Nullability in Core (should be disabled when Bean Validation is on): disabled
2014-01-21 12:19:15,153 [main] INFO  org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) - building session factory
2014-01-21 12:19:15,156 [main] DEBUG org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) - Statistics initialized [enabled=false]}
2014-01-21 12:19:15,157 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@c1b980
2014-01-21 12:19:15,157 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@c1b980
2014-01-21 12:19:15,157 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@c1b980
2014-01-21 12:19:15,158 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1e9fd86
2014-01-21 12:19:15,158 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1d8928e
2014-01-21 12:19:15,158 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration yes_no -> org.hibernate.type.YesNoType@1ce3aac
2014-01-21 12:19:15,158 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@1e54f45
2014-01-21 12:19:15,158 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@1e54f45
2014-01-21 12:19:15,158 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1e54f45
2014-01-21 12:19:15,158 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration character -> org.hibernate.type.CharacterType@1eb96fc
2014-01-21 12:19:15,158 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char -> org.hibernate.type.CharacterType@1eb96fc
2014-01-21 12:19:15,158 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1eb96fc
2014-01-21 12:19:15,158 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@17191a4
2014-01-21 12:19:15,159 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@17191a4
2014-01-21 12:19:15,159 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@17191a4
2014-01-21 12:19:15,159 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration integer -> org.hibernate.type.IntegerType@277469
2014-01-21 12:19:15,159 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration int -> org.hibernate.type.IntegerType@277469
2014-01-21 12:19:15,159 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@277469
2014-01-21 12:19:15,159 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@1297ee0
2014-01-21 12:19:15,159 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@1297ee0
2014-01-21 12:19:15,159 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1297ee0
2014-01-21 12:19:15,159 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@bbe4d3
2014-01-21 12:19:15,159 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@bbe4d3
2014-01-21 12:19:15,160 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@bbe4d3
2014-01-21 12:19:15,160 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@152b54b
2014-01-21 12:19:15,160 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@152b54b
2014-01-21 12:19:15,160 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@152b54b
2014-01-21 12:19:15,160 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@d00d24
2014-01-21 12:19:15,160 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@d00d24
2014-01-21 12:19:15,160 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@fea41a
2014-01-21 12:19:15,160 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@fea41a
2014-01-21 12:19:15,160 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration string -> org.hibernate.type.StringType@30b298
2014-01-21 12:19:15,160 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.String -> org.hibernate.type.StringType@30b298
2014-01-21 12:19:15,161 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration url -> org.hibernate.type.UrlType@83a865
2014-01-21 12:19:15,161 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@83a865
2014-01-21 12:19:15,161 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration date -> org.hibernate.type.DateType@5ebdf7
2014-01-21 12:19:15,161 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5ebdf7
2014-01-21 12:19:15,161 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration time -> org.hibernate.type.TimeType@11a0fb
2014-01-21 12:19:15,161 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@11a0fb
2014-01-21 12:19:15,161 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timestamp -> org.hibernate.type.TimestampType@723592
2014-01-21 12:19:15,161 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@723592
2014-01-21 12:19:15,161 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@723592
2014-01-21 12:19:15,162 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@a937ae
2014-01-21 12:19:15,162 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar -> org.hibernate.type.CalendarType@a5cd0c
2014-01-21 12:19:15,162 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@a5cd0c
2014-01-21 12:19:15,162 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@a5cd0c
2014-01-21 12:19:15,162 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1c86ddb
2014-01-21 12:19:15,162 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration locale -> org.hibernate.type.LocaleType@1d53277
2014-01-21 12:19:15,162 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1d53277
2014-01-21 12:19:15,162 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration currency -> org.hibernate.type.CurrencyType@12d12e6
2014-01-21 12:19:15,162 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@12d12e6
2014-01-21 12:19:15,162 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@fb2274
2014-01-21 12:19:15,162 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@fb2274
2014-01-21 12:19:15,163 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration class -> org.hibernate.type.ClassType@1f52d1d
2014-01-21 12:19:15,163 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1f52d1d
2014-01-21 12:19:15,163 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@d69a74
2014-01-21 12:19:15,163 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@d69a74
2014-01-21 12:19:15,163 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@69b5a7
2014-01-21 12:19:15,163 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7ad394
2014-01-21 12:19:15,163 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration binary -> org.hibernate.type.BinaryType@9fbdd7
2014-01-21 12:19:15,163 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte[] -> org.hibernate.type.BinaryType@9fbdd7
2014-01-21 12:19:15,163 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [B -> org.hibernate.type.BinaryType@9fbdd7
2014-01-21 12:19:15,163 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@19d035e
2014-01-21 12:19:15,164 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@19d035e
2014-01-21 12:19:15,164 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@19d035e
2014-01-21 12:19:15,164 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration image -> org.hibernate.type.ImageType@bd9750
2014-01-21 12:19:15,164 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters -> org.hibernate.type.CharArrayType@167e86a
2014-01-21 12:19:15,164 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char[] -> org.hibernate.type.CharArrayType@167e86a
2014-01-21 12:19:15,164 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [C -> org.hibernate.type.CharArrayType@167e86a
2014-01-21 12:19:15,164 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1c8590c
2014-01-21 12:19:15,164 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1c8590c
2014-01-21 12:19:15,164 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1c8590c
2014-01-21 12:19:15,164 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration text -> org.hibernate.type.TextType@f604b0
2014-01-21 12:19:15,165 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration blob -> org.hibernate.type.BlobType@845f64
2014-01-21 12:19:15,165 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@845f64
2014-01-21 12:19:15,165 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@81205b
2014-01-21 12:19:15,165 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e579f9
2014-01-21 12:19:15,165 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration clob -> org.hibernate.type.ClobType@1806022
2014-01-21 12:19:15,165 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1806022
2014-01-21 12:19:15,165 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ef152b
2014-01-21 12:19:15,165 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@b98c18
2014-01-21 12:19:15,165 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@3837ba
2014-01-21 12:19:15,165 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration serializable -> org.hibernate.type.SerializableType@19104e3
2014-01-21 12:19:15,166 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration object -> org.hibernate.type.ObjectType@e9635a
2014-01-21 12:19:15,166 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@e9635a
2014-01-21 12:19:15,166 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12e8138
2014-01-21 12:19:15,166 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@25bc8e
2014-01-21 12:19:15,166 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@17e3ad1
2014-01-21 12:19:15,166 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@479402
2014-01-21 12:19:15,166 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1462811
2014-01-21 12:19:15,166 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@f08a49
2014-01-21 12:19:15,166 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6c43b
2014-01-21 12:19:15,166 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3d1932
2014-01-21 12:19:15,167 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@1391b1a
2014-01-21 12:19:15,167 [main] INFO  org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@b98c18
2014-01-21 12:19:15,167 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@9a9672
2014-01-21 12:19:15,167 [main] INFO  org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@e579f9
2014-01-21 12:19:15,167 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@170a23
2014-01-21 12:19:15,167 [main] INFO  org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@81205b
2014-01-21 12:19:15,167 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@aca7bf
2014-01-21 12:19:15,167 [main] INFO  org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@ef152b
2014-01-21 12:19:15,167 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration blob -> org.hibernate.type.BlobType@7a195c
2014-01-21 12:19:15,168 [main] INFO  org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [blob] overrides previous : org.hibernate.type.BlobType@845f64
2014-01-21 12:19:15,168 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7a195c
2014-01-21 12:19:15,168 [main] INFO  org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@845f64
2014-01-21 12:19:15,168 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration clob -> org.hibernate.type.ClobType@10b2509
2014-01-21 12:19:15,168 [main] INFO  org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [clob] overrides previous : org.hibernate.type.ClobType@1806022
2014-01-21 12:19:15,168 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@10b2509
2014-01-21 12:19:15,168 [main] INFO  org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@1806022
2014-01-21 12:19:15,168 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@228830
2014-01-21 12:19:15,168 [main] INFO  org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@3837ba
2014-01-21 12:19:15,169 [main] DEBUG org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) - Session factory constructed with filter configurations : {}
2014-01-21 12:19:15,170 [main] DEBUG org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_45\jre\bin, java.vm.version=24.45-b08, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\NetBeansProjects\CodeTester, java.runtime.version=1.7.0_45-b18, netbeans.deploy=true, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, basedir=C:\NetBeansProjects\CodeTester, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_45\jre\lib\endorsed, os.arch=x86, surefire.real.class.path=C:\NetBeansProjects\CodeTester\target\surefire\surefirebooter7926195090838527912.jar, hibernate.check_nullability=false, java.io.tmpdir=C:\Users\LOC~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, maven.ext.class.path=C:\Program Files (x86)\NetBeans 7.4\java\maven-nblib\netbeans-eventspy.jar, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk1.7.0_45\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;c:\Program Files (x86)\Intel\iCLS Client\;c:\Program Files\Intel\iCLS Client\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;c:\Users\LOC~1\Android\sdk;C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files\Internet Explorer;C:\Program Files\nodejs\;C:\Program Files\Java\jdk1.7.0_45\bin;c:\Program Files (x86)\Intel\iCLS Client\;c:\Program Files\Intel\iCLS Client\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;c:\Users\LOC~1\Android\sdk;C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files\Internet Explorer;C:\Program Files\nodejs\;C:\Program Files\Java\jdk1.7.0_45\bin;C:\apache-ant-1.9.2\bin;C:\apache-maven-2.2.1-bin\apache-maven-2.2.1\bin;C:\outils\db-derby-10.9.1.0-bin\bin;C:\wamp\bin\php\php5.3.13;C:\msysgit\msysgit\bin;C:\msysgit\msysgit\mingw\bin;C:\Users\Loïc\AppData\Roaming\npm;C:\apache-maven-2.2.1-bin\apache-maven-2.2.1\bin;;.;;.;;.;;., surefire.test.class.path=C:\NetBeansProjects\CodeTester\target\test-classes;C:\NetBeansProjects\CodeTester\target\classes;C:\dev\m2_repository\org\primefaces\primefaces\4.0\primefaces-4.0.jar;C:\dev\m2_repository\com\sun\faces\jsf-api\2.1.7\jsf-api-2.1.7.jar;C:\dev\m2_repository\com\sun\faces\jsf-impl\2.1.7\jsf-impl-2.1.7.jar;C:\dev\m2_repository\org\hibernate\hibernate-core\3.6.10.Final\hibernate-core-3.6.10.Final.jar;C:\dev\m2_repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\dev\m2_repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\dev\m2_repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\dev\m2_repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\dev\m2_repository\org\hibernate\hibernate-entitymanager\3.6.10.Final\hibernate-entitymanager-3.6.10.Final.jar;C:\dev\m2_repository\cglib\cglib\2.2\cglib-2.2.jar;C:\dev\m2_repository\asm\asm\3.1\asm-3.1.jar;C:\dev\m2_repository\javassist\javassist\3.12.0.GA\javassist-3.12.0.GA.jar;C:\dev\m2_repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\dev\m2_repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\dev\m2_repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\dev\m2_repository\org\eclipse\persistence\eclipselink\2.5.1\eclipselink-2.5.1.jar;C:\dev\m2_repository\org\eclipse\persistence\javax.persistence\2.1.0\javax.persistence-2.1.0.jar;C:\dev\m2_repository\org\eclipse\persistence\commonj.sdo\2.1.1\commonj.sdo-2.1.1.jar;C:\dev\m2_repository\org\eclipse\persistence\org.eclipse.persistence.jpa.modelgen.processor\2.5.1\org.eclipse.persistence.jpa.modelgen.processor-2.5.1.jar;C:\dev\m2_repository\org\eclipse\persistence\org.eclipse.persistence.core\2.5.1\org.eclipse.persistence.core-2.5.1.jar;C:\dev\m2_repository\org\eclipse\persistence\org.eclipse.persistence.asm\2.5.1\org.eclipse.persistence.asm-2.5.1.jar;C:\dev\m2_repository\org\eclipse\persistence\org.eclipse.persistence.jpa\2.5.1\org.eclipse.persistence.jpa-2.5.1.jar;C:\dev\m2_repository\org\eclipse\persistence\org.eclipse.persistence.antlr\2.5.1\org.eclipse.persistence.antlr-2.5.1.jar;C:\dev\m2_repository\org\eclipse\persistence\org.eclipse.persistence.jpa.jpql\2.5.1\org.eclipse.persistence.jpa.jpql-2.5.1.jar;C:\dev\m2_repository\org\hibernate\hibernate-validator-annotation-processor\4.1.0.Final\hibernate-validator-annotation-processor-4.1.0.Final.jar;C:\dev\m2_repository\org\hibernate\hibernate-validator\4.1.0.Final\hibernate-validator-4.1.0.Final.jar;C:\dev\m2_repository\org\springframework\spring-web\3.2.5.RELEASE\spring-web-3.2.5.RELEASE.jar;C:\dev\m2_repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\dev\m2_repository\org\springframework\spring-aop\3.2.5.RELEASE\spring-aop-3.2.5.RELEASE.jar;C:\dev\m2_repository\org\springframework\spring-beans\3.2.5.RELEASE\spring-beans-3.2.5.RELEASE.jar;C:\dev\m2_repository\org\springframework\spring-core\3.2.5.RELEASE\spring-core-3.2.5.RELEASE.jar;C:\dev\m2_repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\dev\m2_repository\org\springframework\spring-context\3.2.5.RELEASE\spring-context-3.2.5.RELEASE.jar;C:\dev\m2_repository\org\springframework\spring-expression\3.2.5.RELEASE\spring-expression-3.2.5.RELEASE.jar;C:\dev\m2_repository\org\springframework\spring-tx\3.2.5.RELEASE\spring-tx-3.2.5.RELEASE.jar;C:\dev\m2_repository\org\springframework\spring-orm\3.2.5.RELEASE\spring-orm-3.2.5.RELEASE.jar;C:\dev\m2_repository\org\springframework\spring-jdbc\3.2.5.RELEASE\spring-jdbc-3.2.5.RELEASE.jar;C:\dev\m2_repository\org\springframework\spring-test\3.2.5.RELEASE\spring-test-3.2.5.RELEASE.jar;C:\dev\m2_repository\org\springframework\spring-webmvc\3.2.5.RELEASE\spring-webmvc-3.2.5.RELEASE.jar;C:\dev\m2_repository\commons-fileupload\commons-fileupload\1.2.1\commons-fileupload-1.2.1.jar;C:\dev\m2_repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\dev\m2_repository\javax\javaee-api\7.0\javaee-api-7.0.jar;C:\dev\m2_repository\com\sun\mail\javax.mail\1.5.0\javax.mail-1.5.0.jar;C:\dev\m2_repository\javax\activation\activation\1.1\activation-1.1.jar;C:\dev\m2_repository\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;C:\dev\m2_repository\mysql\mysql-connector-java\5.1.27\mysql-connector-java-5.1.27.jar;C:\dev\m2_repository\jaxen\jaxen\full\jaxen-full.jar;C:\dev\m2_repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\dev\m2_repository\joda-time\joda-time\2.3\joda-time-2.3.jar;C:\dev\m2_repository\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;C:\dev\m2_repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot Client Compiler, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.1, user.home=C:\Users\Loïc, user.timezone=GMT-1200, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.7, file.encoding=Cp1252, user.name=Loïc, java.class.path=C:\NetBeansProjects\CodeTester\target\test-classes;C:\NetBeansProjects\CodeTester\target\classes;C:\dev\m2_repository\org\primefaces\primefaces\4.0\primefaces-4.0.jar;C:\dev\m2_repository\com\sun\faces\jsf-api\2.1.7\jsf-api-2.1.7.jar;C:\dev\m2_repository\com\sun\faces\jsf-impl\2.1.7\jsf-impl-2.1.7.jar;C:\dev\m2_repository\org\hibernate\hibernate-core\3.6.10.Final\hibernate-core-3.6.10.Final.jar;C:\dev\m2_repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\dev\m2_repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\dev\m2_repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\dev\m2_repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\dev\m2_repository\org\hibernate\hibernate-entitymanager\3.6.10.Final\hibernate-entitymanager-3.6.10.Final.jar;C:\dev\m2_repository\cglib\cglib\2.2\cglib-2.2.jar;C:\dev\m2_repository\asm\asm\3.1\asm-3.1.jar;C:\dev\m2_repository\javassist\javassist\3.12.0.GA\javassist-3.12.0.GA.jar;C:\dev\m2_repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\dev\m2_repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\dev\m2_repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\dev\m2_repository\org\eclipse\persistence\eclipselink\2.5.1\eclipselink-2.5.1.jar;C:\dev\m2_repository\org\eclipse\persistence\javax.persistence\2.1.0\javax.persistence-2.1.0.jar;C:\dev\m2_repository\org\eclipse\persistence\commonj.sdo\2.1.1\commonj.sdo-2.1.1.jar;C:\dev\m2_repository\org\eclipse\persistence\org.eclipse.persistence.jpa.modelgen.processor\2.5.1\org.eclipse.persistence.jpa.modelgen.processor-2.5.1.jar;C:\dev\m2_repository\org\eclipse\persistence\org.eclipse.persistence.core\2.5.1\org.eclipse.persistence.core-2.5.1.jar;C:\dev\m2_repository\org\eclipse\persistence\org.eclipse.persistence.asm\2.5.1\org.eclipse.persistence.asm-2.5.1.jar;C:\dev\m2_repository\org\eclipse\persistence\org.eclipse.persistence.jpa\2.5.1\org.eclipse.persistence.jpa-2.5.1.jar;C:\dev\m2_repository\org\eclipse\persistence\org.eclipse.persistence.antlr\2.5.1\org.eclipse.persistence.antlr-2.5.1.jar;C:\dev\m2_repository\org\eclipse\persistence\org.eclipse.persistence.jpa.jpql\2.5.1\org.eclipse.persistence.jpa.jpql-2.5.1.jar;C:\dev\m2_repository\org\hibernate\hibernate-validator-annotation-processor\4.1.0.Final\hibernate-validator-annotation-processor-4.1.0.Final.jar;C:\dev\m2_repository\org\hibernate\hibernate-validator\4.1.0.Final\hibernate-validator-4.1.0.Final.jar;C:\dev\m2_repository\org\springframework\spring-web\3.2.5.RELEASE\spring-web-3.2.5.RELEASE.jar;C:\dev\m2_repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\dev\m2_repository\org\springframework\spring-aop\3.2.5.RELEASE\spring-aop-3.2.5.RELEASE.jar;C:\dev\m2_repository\org\springframework\spring-beans\3.2.5.RELEASE\spring-beans-3.2.5.RELEASE.jar;C:\dev\m2_repository\org\springframework\spring-core\3.2.5.RELEASE\spring-core-3.2.5.RELEASE.jar;C:\dev\m2_repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\dev\m2_repository\org\springframework\spring-context\3.2.5.RELEASE\spring-context-3.2.5.RELEASE.jar;C:\dev\m2_repository\org\springframework\spring-expression\3.2.5.RELEASE\spring-expression-3.2.5.RELEASE.jar;C:\dev\m2_repository\org\springframework\spring-tx\3.2.5.RELEASE\spring-tx-3.2.5.RELEASE.jar;C:\dev\m2_repository\org\springframework\spring-orm\3.2.5.RELEASE\spring-orm-3.2.5.RELEASE.jar;C:\dev\m2_repository\org\springframework\spring-jdbc\3.2.5.RELEASE\spring-jdbc-3.2.5.RELEASE.jar;C:\dev\m2_repository\org\springframework\spring-test\3.2.5.RELEASE\spring-test-3.2.5.RELEASE.jar;C:\dev\m2_repository\org\springframework\spring-webmvc\3.2.5.RELEASE\spring-webmvc-3.2.5.RELEASE.jar;C:\dev\m2_repository\commons-fileupload\commons-fileupload\1.2.1\commons-fileupload-1.2.1.jar;C:\dev\m2_repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\dev\m2_repository\javax\javaee-api\7.0\javaee-api-7.0.jar;C:\dev\m2_repository\com\sun\mail\javax.mail\1.5.0\javax.mail-1.5.0.jar;C:\dev\m2_repository\javax\activation\activation\1.1\activation-1.1.jar;C:\dev\m2_repository\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;C:\dev\m2_repository\mysql\mysql-connector-java\5.1.27\mysql-connector-java-5.1.27.jar;C:\dev\m2_repository\jaxen\jaxen\full\jaxen-full.jar;C:\dev\m2_repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\dev\m2_repository\joda-time\joda-time\2.3\joda-time-2.3.jar;C:\dev\m2_repository\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;C:\dev\m2_repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.version=1.7, sun.arch.data.model=32, java.home=C:\Program Files\Java\jdk1.7.0_45\jre, sun.java.command=C:\NetBeansProjects\CodeTester\target\surefire\surefirebooter7926195090838527912.jar C:\NetBeansProjects\CodeTester\target\surefire\surefire8863686541709164674tmp C:\NetBeansProjects\CodeTester\target\surefire\surefire2284491489715096243tmp, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=fr, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.7.0_45, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_45\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_45\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_45\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_45\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_45\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_45\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_45\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_45\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_45\jre\classes, java.vendor=Oracle Corporation, localRepository=C:\dev\m2_repository, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}
2014-01-21 12:19:15,180 [main] DEBUG org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
2014-01-21 12:19:15,181 [main] DEBUG org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
2014-01-21 12:19:15,182 [main] DEBUG org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
2014-01-21 12:19:15,182 [main] DEBUG org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
2014-01-21 12:19:15,182 [main] DEBUG org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
2014-01-21 12:19:15,182 [main] DEBUG org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
2014-01-21 12:19:15,182 [main] DEBUG org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
2014-01-21 12:19:15,182 [main] DEBUG org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
2014-01-21 12:19:15,182 [main] DEBUG org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
2014-01-21 12:19:15,183 [main] DEBUG org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
2014-01-21 12:19:15,183 [main] DEBUG org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
2014-01-21 12:19:15,284 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2953) - Static SQL for entity: jpa.Categorie
2014-01-21 12:19:15,284 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2958) -  Version select: select CATEGORIEID from categorie where CATEGORIEID =?
2014-01-21 12:19:15,284 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2961) -  Snapshot select: select categorie_.CATEGORIEID, categorie_.CATEGORIELIBELLE as CATEGORI2_4_ from categorie categorie_ where categorie_.CATEGORIEID=?
2014-01-21 12:19:15,284 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Insert 0: insert into categorie (CATEGORIELIBELLE, CATEGORIEID) values (?, ?)
2014-01-21 12:19:15,284 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Update 0: update categorie set CATEGORIELIBELLE=? where CATEGORIEID=?
2014-01-21 12:19:15,285 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2966) -  Delete 0: delete from categorie where CATEGORIEID=?
2014-01-21 12:19:15,285 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2970) -  Identity insert: insert into categorie (CATEGORIELIBELLE) values (?)
2014-01-21 12:19:15,289 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2953) - Static SQL for entity: jpa.Candidat
2014-01-21 12:19:15,289 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2958) -  Version select: select CANDIDATID from candidat where CANDIDATID =?
2014-01-21 12:19:15,289 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2961) -  Snapshot select: select candidat_.CANDIDATID, candidat_.CANDIDAT_CIVILITE as CANDIDAT2_2_, candidat_.CANDIDAT_NOM as CANDIDAT3_2_, candidat_.CANDIDAT_PRENOM as CANDIDAT4_2_, candidat_.CANDIDAT_MAIL as CANDIDAT5_2_, candidat_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_ from candidat candidat_ where candidat_.CANDIDATID=?
2014-01-21 12:19:15,290 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Insert 0: insert into candidat (CANDIDAT_CIVILITE, CANDIDAT_NOM, CANDIDAT_PRENOM, CANDIDAT_MAIL, CANDIDAT_DATE_NAISSANCE, CANDIDATID) values (?, ?, ?, ?, ?, ?)
2014-01-21 12:19:15,290 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Update 0: update candidat set CANDIDAT_CIVILITE=?, CANDIDAT_NOM=?, CANDIDAT_PRENOM=?, CANDIDAT_MAIL=?, CANDIDAT_DATE_NAISSANCE=? where CANDIDATID=?
2014-01-21 12:19:15,290 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2966) -  Delete 0: delete from candidat where CANDIDATID=?
2014-01-21 12:19:15,297 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2953) - Static SQL for entity: jpa.Rubrique
2014-01-21 12:19:15,298 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2958) -  Version select: select RUBRIQUEID from rubrique where RUBRIQUEID =?
2014-01-21 12:19:15,298 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2961) -  Snapshot select: select rubrique_.RUBRIQUEID, rubrique_.RUBRIQUENOM as RUBRIQUE2_6_, rubrique_.TESTID as TESTID6_ from rubrique rubrique_ where rubrique_.RUBRIQUEID=?
2014-01-21 12:19:15,298 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Insert 0: insert into rubrique (RUBRIQUENOM, TESTID, RUBRIQUEID) values (?, ?, ?)
2014-01-21 12:19:15,298 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Update 0: update rubrique set RUBRIQUENOM=?, TESTID=? where RUBRIQUEID=?
2014-01-21 12:19:15,298 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2966) -  Delete 0: delete from rubrique where RUBRIQUEID=?
2014-01-21 12:19:15,298 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2970) -  Identity insert: insert into rubrique (RUBRIQUENOM, TESTID) values (?, ?)
2014-01-21 12:19:15,301 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2953) - Static SQL for entity: jpa.Proposition
2014-01-21 12:19:15,301 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2958) -  Version select: select PROPOSITIONID from proposition where PROPOSITIONID =?
2014-01-21 12:19:15,301 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2961) -  Snapshot select: select propositio_.PROPOSITIONID, propositio_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio_.QUESTIONID as QUESTIONID0_ from proposition propositio_ where propositio_.PROPOSITIONID=?
2014-01-21 12:19:15,301 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Insert 0: insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-21 12:19:15,301 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Update 0: update proposition set PROPOSITIONLIBELLE=?, PROPOSITIONVRAI=?, QUESTIONID=? where PROPOSITIONID=?
2014-01-21 12:19:15,301 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2966) -  Delete 0: delete from proposition where PROPOSITIONID=?
2014-01-21 12:19:15,304 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2953) - Static SQL for entity: jpa.Jointure
2014-01-21 12:19:15,304 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2958) -  Version select: select JOINTUREID from jointure where JOINTUREID =?
2014-01-21 12:19:15,304 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2961) -  Snapshot select: select jointure_.JOINTUREID, jointure_.CHAMPVIDE as CHAMPVIDE10_, jointure_.TESTID as TESTID10_, jointure_.PASSAGEID as PASSAGEID10_ from jointure jointure_ where jointure_.JOINTUREID=?
2014-01-21 12:19:15,304 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Insert 0: insert into jointure (CHAMPVIDE, TESTID, PASSAGEID, JOINTUREID) values (?, ?, ?, ?)
2014-01-21 12:19:15,304 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Update 0: update jointure set CHAMPVIDE=?, TESTID=?, PASSAGEID=? where JOINTUREID=?
2014-01-21 12:19:15,304 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2966) -  Delete 0: delete from jointure where JOINTUREID=?
2014-01-21 12:19:15,306 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2953) - Static SQL for entity: jpa.Admin
2014-01-21 12:19:15,306 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2958) -  Version select: select ADMINID from admin where ADMINID =?
2014-01-21 12:19:15,306 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2961) -  Snapshot select: select admin_.ADMINID, admin_.ADMINLOGIN as ADMINLOGIN1_, admin_.ADMINPASSWORD as ADMINPAS3_1_ from admin admin_ where admin_.ADMINID=?
2014-01-21 12:19:15,306 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Insert 0: insert into admin (ADMINLOGIN, ADMINPASSWORD, ADMINID) values (?, ?, ?)
2014-01-21 12:19:15,306 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Update 0: update admin set ADMINLOGIN=?, ADMINPASSWORD=? where ADMINID=?
2014-01-21 12:19:15,306 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2966) -  Delete 0: delete from admin where ADMINID=?
2014-01-21 12:19:15,307 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2970) -  Identity insert: insert into admin (ADMINLOGIN, ADMINPASSWORD) values (?, ?)
2014-01-21 12:19:15,309 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2953) - Static SQL for entity: jpa.ReponseHisto
2014-01-21 12:19:15,310 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2958) -  Version select: select REPONSEHISTOID from reponse_histo where REPONSEHISTOID =?
2014-01-21 12:19:15,310 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2961) -  Snapshot select: select reponsehis_.REPONSEHISTOID, reponsehis_.REPONSEVALEUR as REPONSEV2_7_, reponsehis_.REPONSEDEBUT as REPONSED3_7_, reponsehis_.REPONSEFIN as REPONSEFIN7_, reponsehis_.PASSAGEID as PASSAGEID7_, reponsehis_.QUESTIONID as QUESTIONID7_ from reponse_histo reponsehis_ where reponsehis_.REPONSEHISTOID=?
2014-01-21 12:19:15,310 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Insert 0: insert into reponse_histo (REPONSEVALEUR, REPONSEDEBUT, REPONSEFIN, PASSAGEID, QUESTIONID, REPONSEHISTOID) values (?, ?, ?, ?, ?, ?)
2014-01-21 12:19:15,310 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Update 0: update reponse_histo set REPONSEVALEUR=?, REPONSEDEBUT=?, REPONSEFIN=?, PASSAGEID=?, QUESTIONID=? where REPONSEHISTOID=?
2014-01-21 12:19:15,310 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2966) -  Delete 0: delete from reponse_histo where REPONSEHISTOID=?
2014-01-21 12:19:15,313 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2953) - Static SQL for entity: jpa.Reponse
2014-01-21 12:19:15,313 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2958) -  Version select: select REPONSEID from reponse where REPONSEID =?
2014-01-21 12:19:15,313 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2961) -  Snapshot select: select reponse_.REPONSEID, reponse_.REPONSETEXTE as REPONSET2_8_, reponse_.REPONSEDUREE as REPONSED3_8_, reponse_.REPONSEMESSAGE as REPONSEM4_8_, reponse_.PASSAGEID as PASSAGEID8_, reponse_.QUESTIONID as QUESTIONID8_ from reponse reponse_ where reponse_.REPONSEID=?
2014-01-21 12:19:15,313 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Insert 0: insert into reponse (REPONSETEXTE, REPONSEDUREE, REPONSEMESSAGE, PASSAGEID, QUESTIONID, REPONSEID) values (?, ?, ?, ?, ?, ?)
2014-01-21 12:19:15,314 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Update 0: update reponse set REPONSETEXTE=?, REPONSEDUREE=?, REPONSEMESSAGE=?, PASSAGEID=?, QUESTIONID=? where REPONSEID=?
2014-01-21 12:19:15,314 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2966) -  Delete 0: delete from reponse where REPONSEID=?
2014-01-21 12:19:15,317 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2953) - Static SQL for entity: jpa.Passage
2014-01-21 12:19:15,317 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2958) -  Version select: select PASSAGEID from passage where PASSAGEID =?
2014-01-21 12:19:15,317 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2961) -  Snapshot select: select passage_.PASSAGEID, passage_.PASSAGE_ETAT as PASSAGE2_5_, passage_.PASSAGE_DATE as PASSAGE3_5_, passage_.PASSAGEDEBUT_VAL as PASSAGED4_5_, passage_.PASSAGEFIN_VAL as PASSAGEFIN5_5_, passage_.CANDIDATID as CANDIDATID5_ from passage passage_ where passage_.PASSAGEID=?
2014-01-21 12:19:15,317 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Insert 0: insert into passage (PASSAGE_ETAT, PASSAGE_DATE, PASSAGEDEBUT_VAL, PASSAGEFIN_VAL, CANDIDATID, PASSAGEID) values (?, ?, ?, ?, ?, ?)
2014-01-21 12:19:15,318 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Update 0: update passage set PASSAGE_ETAT=?, PASSAGE_DATE=?, PASSAGEDEBUT_VAL=?, PASSAGEFIN_VAL=?, CANDIDATID=? where PASSAGEID=?
2014-01-21 12:19:15,318 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2966) -  Delete 0: delete from passage where PASSAGEID=?
2014-01-21 12:19:15,320 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2953) - Static SQL for entity: jpa.Question
2014-01-21 12:19:15,320 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2958) -  Version select: select QUESTIONID from question where QUESTIONID =?
2014-01-21 12:19:15,320 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2961) -  Snapshot select: select question_.QUESTIONID, question_.QUESTIONTEXT as QUESTION2_9_, question_.RUBRIQUEID as RUBRIQUEID9_ from question question_ where question_.QUESTIONID=?
2014-01-21 12:19:15,320 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Insert 0: insert into question (QUESTIONTEXT, RUBRIQUEID, QUESTIONID) values (?, ?, ?)
2014-01-21 12:19:15,321 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Update 0: update question set QUESTIONTEXT=?, RUBRIQUEID=? where QUESTIONID=?
2014-01-21 12:19:15,321 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2966) -  Delete 0: delete from question where QUESTIONID=?
2014-01-21 12:19:15,325 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2953) - Static SQL for entity: jpa.Test
2014-01-21 12:19:15,325 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2958) -  Version select: select TESTID from test where TESTID =?
2014-01-21 12:19:15,325 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2961) -  Snapshot select: select test_.TESTID, test_.TESTMATIERE as TESTMATI2_3_, test_.TESTDUREE as TESTDUREE3_, test_.TEST_NBQUESTION_RUB as TEST4_3_, test_.TESTNATURE as TESTNATURE3_, test_.TESTFORMAT as TESTFORMAT3_, test_.TEST_START as TEST7_3_, test_.TEST_DESCRIPTION as TEST8_3_, test_.THEME as THEME3_, test_.NIVEAU as NIVEAU3_, test_.CATEGORIEID as CATEGOR11_3_ from test test_ where test_.TESTID=?
2014-01-21 12:19:15,325 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Insert 0: insert into test (TESTMATIERE, TESTDUREE, TEST_NBQUESTION_RUB, TESTNATURE, TESTFORMAT, TEST_START, TEST_DESCRIPTION, THEME, NIVEAU, CATEGORIEID, TESTID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2014-01-21 12:19:15,326 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Update 0: update test set TESTMATIERE=?, TESTDUREE=?, TEST_NBQUESTION_RUB=?, TESTNATURE=?, TESTFORMAT=?, TEST_START=?, TEST_DESCRIPTION=?, THEME=?, NIVEAU=?, CATEGORIEID=? where TESTID=?
2014-01-21 12:19:15,326 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2966) -  Delete 0: delete from test where TESTID=?
2014-01-21 12:19:15,331 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:610) - Static SQL for collection: jpa.Test.rubriqueCollection
2014-01-21 12:19:15,332 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:612) -  Row insert: update rubrique set TESTID=? where RUBRIQUEID=?
2014-01-21 12:19:15,332 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:618) -  Row delete: update rubrique set TESTID=null where TESTID=? and RUBRIQUEID=?
2014-01-21 12:19:15,332 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:621) -  One-shot delete: update rubrique set TESTID=null where TESTID=?
2014-01-21 12:19:15,332 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:610) - Static SQL for collection: jpa.Question.propositionCollection
2014-01-21 12:19:15,332 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:612) -  Row insert: update proposition set QUESTIONID=? where PROPOSITIONID=?
2014-01-21 12:19:15,332 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:618) -  Row delete: update proposition set QUESTIONID=null where QUESTIONID=? and PROPOSITIONID=?
2014-01-21 12:19:15,332 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:621) -  One-shot delete: update proposition set QUESTIONID=null where QUESTIONID=?
2014-01-21 12:19:15,333 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:610) - Static SQL for collection: jpa.Passage.reponseHistoCollection
2014-01-21 12:19:15,333 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:612) -  Row insert: update reponse_histo set PASSAGEID=? where REPONSEHISTOID=?
2014-01-21 12:19:15,333 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:618) -  Row delete: update reponse_histo set PASSAGEID=null where PASSAGEID=? and REPONSEHISTOID=?
2014-01-21 12:19:15,333 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:621) -  One-shot delete: update reponse_histo set PASSAGEID=null where PASSAGEID=?
2014-01-21 12:19:15,333 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:610) - Static SQL for collection: jpa.Candidat.passageCollection
2014-01-21 12:19:15,333 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:612) -  Row insert: update passage set CANDIDATID=? where PASSAGEID=?
2014-01-21 12:19:15,333 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:618) -  Row delete: update passage set CANDIDATID=null where CANDIDATID=? and PASSAGEID=?
2014-01-21 12:19:15,333 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:621) -  One-shot delete: update passage set CANDIDATID=null where CANDIDATID=?
2014-01-21 12:19:15,333 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:610) - Static SQL for collection: jpa.Question.reponseCollection
2014-01-21 12:19:15,333 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:612) -  Row insert: update reponse set QUESTIONID=? where REPONSEID=?
2014-01-21 12:19:15,334 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:618) -  Row delete: update reponse set QUESTIONID=null where QUESTIONID=? and REPONSEID=?
2014-01-21 12:19:15,334 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:621) -  One-shot delete: update reponse set QUESTIONID=null where QUESTIONID=?
2014-01-21 12:19:15,334 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:610) - Static SQL for collection: jpa.Test.jointureCollection
2014-01-21 12:19:15,334 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:612) -  Row insert: update jointure set TESTID=? where JOINTUREID=?
2014-01-21 12:19:15,334 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:618) -  Row delete: update jointure set TESTID=null where TESTID=? and JOINTUREID=?
2014-01-21 12:19:15,334 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:621) -  One-shot delete: update jointure set TESTID=null where TESTID=?
2014-01-21 12:19:15,334 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:610) - Static SQL for collection: jpa.Question.reponseHistoCollection
2014-01-21 12:19:15,334 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:612) -  Row insert: update reponse_histo set QUESTIONID=? where REPONSEHISTOID=?
2014-01-21 12:19:15,334 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:618) -  Row delete: update reponse_histo set QUESTIONID=null where QUESTIONID=? and REPONSEHISTOID=?
2014-01-21 12:19:15,335 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:621) -  One-shot delete: update reponse_histo set QUESTIONID=null where QUESTIONID=?
2014-01-21 12:19:15,335 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:610) - Static SQL for collection: jpa.Passage.reponseCollection
2014-01-21 12:19:15,335 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:612) -  Row insert: update reponse set PASSAGEID=? where REPONSEID=?
2014-01-21 12:19:15,335 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:618) -  Row delete: update reponse set PASSAGEID=null where PASSAGEID=? and REPONSEID=?
2014-01-21 12:19:15,335 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:621) -  One-shot delete: update reponse set PASSAGEID=null where PASSAGEID=?
2014-01-21 12:19:15,335 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:610) - Static SQL for collection: jpa.Categorie.testCollection
2014-01-21 12:19:15,335 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:612) -  Row insert: update test set CATEGORIEID=? where TESTID=?
2014-01-21 12:19:15,335 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:618) -  Row delete: update test set CATEGORIEID=null where CATEGORIEID=? and TESTID=?
2014-01-21 12:19:15,335 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:621) -  One-shot delete: update test set CATEGORIEID=null where CATEGORIEID=?
2014-01-21 12:19:15,336 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:610) - Static SQL for collection: jpa.Passage.jointureCollection
2014-01-21 12:19:15,336 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:612) -  Row insert: update jointure set PASSAGEID=? where JOINTUREID=?
2014-01-21 12:19:15,336 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:618) -  Row delete: update jointure set PASSAGEID=null where PASSAGEID=? and JOINTUREID=?
2014-01-21 12:19:15,336 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:621) -  One-shot delete: update jointure set PASSAGEID=null where PASSAGEID=?
2014-01-21 12:19:15,336 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:610) - Static SQL for collection: jpa.Rubrique.questionCollection
2014-01-21 12:19:15,336 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:612) -  Row insert: update question set RUBRIQUEID=? where QUESTIONID=?
2014-01-21 12:19:15,336 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:618) -  Row delete: update question set RUBRIQUEID=null where RUBRIQUEID=? and QUESTIONID=?
2014-01-21 12:19:15,336 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:621) -  One-shot delete: update question set RUBRIQUEID=null where RUBRIQUEID=?
2014-01-21 12:19:15,351 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Categorie [NONE]: select categorie0_.CATEGORIEID as CATEGORI1_4_0_, categorie0_.CATEGORIELIBELLE as CATEGORI2_4_0_ from categorie categorie0_ where categorie0_.CATEGORIEID=?
2014-01-21 12:19:15,351 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Categorie [READ]: select categorie0_.CATEGORIEID as CATEGORI1_4_0_, categorie0_.CATEGORIELIBELLE as CATEGORI2_4_0_ from categorie categorie0_ where categorie0_.CATEGORIEID=?
2014-01-21 12:19:15,351 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Categorie [UPGRADE]: select categorie0_.CATEGORIEID as CATEGORI1_4_0_, categorie0_.CATEGORIELIBELLE as CATEGORI2_4_0_ from categorie categorie0_ where categorie0_.CATEGORIEID=? for update
2014-01-21 12:19:15,351 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Categorie [UPGRADE_NOWAIT]: select categorie0_.CATEGORIEID as CATEGORI1_4_0_, categorie0_.CATEGORIELIBELLE as CATEGORI2_4_0_ from categorie categorie0_ where categorie0_.CATEGORIEID=? for update
2014-01-21 12:19:15,351 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Categorie [FORCE]: select categorie0_.CATEGORIEID as CATEGORI1_4_0_, categorie0_.CATEGORIELIBELLE as CATEGORI2_4_0_ from categorie categorie0_ where categorie0_.CATEGORIEID=? for update
2014-01-21 12:19:15,352 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Categorie [PESSIMISTIC_READ]: select categorie0_.CATEGORIEID as CATEGORI1_4_0_, categorie0_.CATEGORIELIBELLE as CATEGORI2_4_0_ from categorie categorie0_ where categorie0_.CATEGORIEID=? lock in share mode
2014-01-21 12:19:15,352 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Categorie [PESSIMISTIC_WRITE]: select categorie0_.CATEGORIEID as CATEGORI1_4_0_, categorie0_.CATEGORIELIBELLE as CATEGORI2_4_0_ from categorie categorie0_ where categorie0_.CATEGORIEID=? for update
2014-01-21 12:19:15,352 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Categorie [PESSIMISTIC_FORCE_INCREMENT]: select categorie0_.CATEGORIEID as CATEGORI1_4_0_, categorie0_.CATEGORIELIBELLE as CATEGORI2_4_0_ from categorie categorie0_ where categorie0_.CATEGORIEID=? for update
2014-01-21 12:19:15,352 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Categorie [OPTIMISTIC]: select categorie0_.CATEGORIEID as CATEGORI1_4_0_, categorie0_.CATEGORIELIBELLE as CATEGORI2_4_0_ from categorie categorie0_ where categorie0_.CATEGORIEID=?
2014-01-21 12:19:15,352 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Categorie [OPTIMISTIC_FORCE_INCREMENT]: select categorie0_.CATEGORIEID as CATEGORI1_4_0_, categorie0_.CATEGORIELIBELLE as CATEGORI2_4_0_ from categorie categorie0_ where categorie0_.CATEGORIEID=?
2014-01-21 12:19:15,356 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity jpa.Categorie: select categorie0_.CATEGORIEID as CATEGORI1_4_0_, categorie0_.CATEGORIELIBELLE as CATEGORI2_4_0_ from categorie categorie0_ where categorie0_.CATEGORIEID=?
2014-01-21 12:19:15,356 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity jpa.Categorie: select categorie0_.CATEGORIEID as CATEGORI1_4_0_, categorie0_.CATEGORIELIBELLE as CATEGORI2_4_0_ from categorie categorie0_ where categorie0_.CATEGORIEID=?
2014-01-21 12:19:15,357 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Candidat [NONE]: select candidat0_.CANDIDATID as CANDIDATID2_0_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_0_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_0_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_0_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_0_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_0_ from candidat candidat0_ where candidat0_.CANDIDATID=?
2014-01-21 12:19:15,358 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Candidat [READ]: select candidat0_.CANDIDATID as CANDIDATID2_0_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_0_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_0_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_0_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_0_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_0_ from candidat candidat0_ where candidat0_.CANDIDATID=?
2014-01-21 12:19:15,358 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Candidat [UPGRADE]: select candidat0_.CANDIDATID as CANDIDATID2_0_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_0_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_0_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_0_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_0_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_0_ from candidat candidat0_ where candidat0_.CANDIDATID=? for update
2014-01-21 12:19:15,358 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Candidat [UPGRADE_NOWAIT]: select candidat0_.CANDIDATID as CANDIDATID2_0_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_0_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_0_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_0_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_0_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_0_ from candidat candidat0_ where candidat0_.CANDIDATID=? for update
2014-01-21 12:19:15,358 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Candidat [FORCE]: select candidat0_.CANDIDATID as CANDIDATID2_0_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_0_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_0_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_0_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_0_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_0_ from candidat candidat0_ where candidat0_.CANDIDATID=? for update
2014-01-21 12:19:15,358 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Candidat [PESSIMISTIC_READ]: select candidat0_.CANDIDATID as CANDIDATID2_0_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_0_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_0_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_0_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_0_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_0_ from candidat candidat0_ where candidat0_.CANDIDATID=? lock in share mode
2014-01-21 12:19:15,359 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Candidat [PESSIMISTIC_WRITE]: select candidat0_.CANDIDATID as CANDIDATID2_0_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_0_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_0_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_0_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_0_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_0_ from candidat candidat0_ where candidat0_.CANDIDATID=? for update
2014-01-21 12:19:15,359 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Candidat [PESSIMISTIC_FORCE_INCREMENT]: select candidat0_.CANDIDATID as CANDIDATID2_0_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_0_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_0_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_0_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_0_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_0_ from candidat candidat0_ where candidat0_.CANDIDATID=? for update
2014-01-21 12:19:15,359 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Candidat [OPTIMISTIC]: select candidat0_.CANDIDATID as CANDIDATID2_0_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_0_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_0_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_0_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_0_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_0_ from candidat candidat0_ where candidat0_.CANDIDATID=?
2014-01-21 12:19:15,359 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Candidat [OPTIMISTIC_FORCE_INCREMENT]: select candidat0_.CANDIDATID as CANDIDATID2_0_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_0_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_0_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_0_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_0_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_0_ from candidat candidat0_ where candidat0_.CANDIDATID=?
2014-01-21 12:19:15,359 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity jpa.Candidat: select candidat0_.CANDIDATID as CANDIDATID2_0_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_0_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_0_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_0_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_0_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_0_ from candidat candidat0_ where candidat0_.CANDIDATID=?
2014-01-21 12:19:15,360 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity jpa.Candidat: select candidat0_.CANDIDATID as CANDIDATID2_0_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_0_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_0_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_0_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_0_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_0_ from candidat candidat0_ where candidat0_.CANDIDATID=?
2014-01-21 12:19:15,360 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Proposition [NONE]: select propositio0_.PROPOSITIONID as PROPOSIT1_0_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_0_, propositio0_.QUESTIONID as QUESTIONID0_0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=?
2014-01-21 12:19:15,360 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Proposition [READ]: select propositio0_.PROPOSITIONID as PROPOSIT1_0_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_0_, propositio0_.QUESTIONID as QUESTIONID0_0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=?
2014-01-21 12:19:15,360 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Proposition [UPGRADE]: select propositio0_.PROPOSITIONID as PROPOSIT1_0_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_0_, propositio0_.QUESTIONID as QUESTIONID0_0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=? for update
2014-01-21 12:19:15,360 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Proposition [UPGRADE_NOWAIT]: select propositio0_.PROPOSITIONID as PROPOSIT1_0_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_0_, propositio0_.QUESTIONID as QUESTIONID0_0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=? for update
2014-01-21 12:19:15,363 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Proposition [FORCE]: select propositio0_.PROPOSITIONID as PROPOSIT1_0_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_0_, propositio0_.QUESTIONID as QUESTIONID0_0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=? for update
2014-01-21 12:19:15,363 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Proposition [PESSIMISTIC_READ]: select propositio0_.PROPOSITIONID as PROPOSIT1_0_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_0_, propositio0_.QUESTIONID as QUESTIONID0_0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=? lock in share mode
2014-01-21 12:19:15,363 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Proposition [PESSIMISTIC_WRITE]: select propositio0_.PROPOSITIONID as PROPOSIT1_0_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_0_, propositio0_.QUESTIONID as QUESTIONID0_0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=? for update
2014-01-21 12:19:15,364 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Proposition [PESSIMISTIC_FORCE_INCREMENT]: select propositio0_.PROPOSITIONID as PROPOSIT1_0_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_0_, propositio0_.QUESTIONID as QUESTIONID0_0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=? for update
2014-01-21 12:19:15,364 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Proposition [OPTIMISTIC]: select propositio0_.PROPOSITIONID as PROPOSIT1_0_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_0_, propositio0_.QUESTIONID as QUESTIONID0_0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=?
2014-01-21 12:19:15,364 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Proposition [OPTIMISTIC_FORCE_INCREMENT]: select propositio0_.PROPOSITIONID as PROPOSIT1_0_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_0_, propositio0_.QUESTIONID as QUESTIONID0_0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=?
2014-01-21 12:19:15,364 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity jpa.Proposition: select propositio0_.PROPOSITIONID as PROPOSIT1_0_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_0_, propositio0_.QUESTIONID as QUESTIONID0_0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=?
2014-01-21 12:19:15,364 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity jpa.Proposition: select propositio0_.PROPOSITIONID as PROPOSIT1_0_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_0_, propositio0_.QUESTIONID as QUESTIONID0_0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=?
2014-01-21 12:19:15,365 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Rubrique [NONE]: select rubrique0_.RUBRIQUEID as RUBRIQUEID6_0_, rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_0_, rubrique0_.TESTID as TESTID6_0_ from rubrique rubrique0_ where rubrique0_.RUBRIQUEID=?
2014-01-21 12:19:15,365 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Rubrique [READ]: select rubrique0_.RUBRIQUEID as RUBRIQUEID6_0_, rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_0_, rubrique0_.TESTID as TESTID6_0_ from rubrique rubrique0_ where rubrique0_.RUBRIQUEID=?
2014-01-21 12:19:15,365 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Rubrique [UPGRADE]: select rubrique0_.RUBRIQUEID as RUBRIQUEID6_0_, rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_0_, rubrique0_.TESTID as TESTID6_0_ from rubrique rubrique0_ where rubrique0_.RUBRIQUEID=? for update
2014-01-21 12:19:15,365 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Rubrique [UPGRADE_NOWAIT]: select rubrique0_.RUBRIQUEID as RUBRIQUEID6_0_, rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_0_, rubrique0_.TESTID as TESTID6_0_ from rubrique rubrique0_ where rubrique0_.RUBRIQUEID=? for update
2014-01-21 12:19:15,365 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Rubrique [FORCE]: select rubrique0_.RUBRIQUEID as RUBRIQUEID6_0_, rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_0_, rubrique0_.TESTID as TESTID6_0_ from rubrique rubrique0_ where rubrique0_.RUBRIQUEID=? for update
2014-01-21 12:19:15,366 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Rubrique [PESSIMISTIC_READ]: select rubrique0_.RUBRIQUEID as RUBRIQUEID6_0_, rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_0_, rubrique0_.TESTID as TESTID6_0_ from rubrique rubrique0_ where rubrique0_.RUBRIQUEID=? lock in share mode
2014-01-21 12:19:15,366 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Rubrique [PESSIMISTIC_WRITE]: select rubrique0_.RUBRIQUEID as RUBRIQUEID6_0_, rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_0_, rubrique0_.TESTID as TESTID6_0_ from rubrique rubrique0_ where rubrique0_.RUBRIQUEID=? for update
2014-01-21 12:19:15,366 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Rubrique [PESSIMISTIC_FORCE_INCREMENT]: select rubrique0_.RUBRIQUEID as RUBRIQUEID6_0_, rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_0_, rubrique0_.TESTID as TESTID6_0_ from rubrique rubrique0_ where rubrique0_.RUBRIQUEID=? for update
2014-01-21 12:19:15,366 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Rubrique [OPTIMISTIC]: select rubrique0_.RUBRIQUEID as RUBRIQUEID6_0_, rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_0_, rubrique0_.TESTID as TESTID6_0_ from rubrique rubrique0_ where rubrique0_.RUBRIQUEID=?
2014-01-21 12:19:15,366 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Rubrique [OPTIMISTIC_FORCE_INCREMENT]: select rubrique0_.RUBRIQUEID as RUBRIQUEID6_0_, rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_0_, rubrique0_.TESTID as TESTID6_0_ from rubrique rubrique0_ where rubrique0_.RUBRIQUEID=?
2014-01-21 12:19:15,366 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity jpa.Rubrique: select rubrique0_.RUBRIQUEID as RUBRIQUEID6_0_, rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_0_, rubrique0_.TESTID as TESTID6_0_ from rubrique rubrique0_ where rubrique0_.RUBRIQUEID=?
2014-01-21 12:19:15,367 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity jpa.Rubrique: select rubrique0_.RUBRIQUEID as RUBRIQUEID6_0_, rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_0_, rubrique0_.TESTID as TESTID6_0_ from rubrique rubrique0_ where rubrique0_.RUBRIQUEID=?
2014-01-21 12:19:15,367 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Jointure [NONE]: select jointure0_.JOINTUREID as JOINTUREID10_0_, jointure0_.CHAMPVIDE as CHAMPVIDE10_0_, jointure0_.TESTID as TESTID10_0_, jointure0_.PASSAGEID as PASSAGEID10_0_ from jointure jointure0_ where jointure0_.JOINTUREID=?
2014-01-21 12:19:15,367 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Jointure [READ]: select jointure0_.JOINTUREID as JOINTUREID10_0_, jointure0_.CHAMPVIDE as CHAMPVIDE10_0_, jointure0_.TESTID as TESTID10_0_, jointure0_.PASSAGEID as PASSAGEID10_0_ from jointure jointure0_ where jointure0_.JOINTUREID=?
2014-01-21 12:19:15,367 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Jointure [UPGRADE]: select jointure0_.JOINTUREID as JOINTUREID10_0_, jointure0_.CHAMPVIDE as CHAMPVIDE10_0_, jointure0_.TESTID as TESTID10_0_, jointure0_.PASSAGEID as PASSAGEID10_0_ from jointure jointure0_ where jointure0_.JOINTUREID=? for update
2014-01-21 12:19:15,367 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Jointure [UPGRADE_NOWAIT]: select jointure0_.JOINTUREID as JOINTUREID10_0_, jointure0_.CHAMPVIDE as CHAMPVIDE10_0_, jointure0_.TESTID as TESTID10_0_, jointure0_.PASSAGEID as PASSAGEID10_0_ from jointure jointure0_ where jointure0_.JOINTUREID=? for update
2014-01-21 12:19:15,367 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Jointure [FORCE]: select jointure0_.JOINTUREID as JOINTUREID10_0_, jointure0_.CHAMPVIDE as CHAMPVIDE10_0_, jointure0_.TESTID as TESTID10_0_, jointure0_.PASSAGEID as PASSAGEID10_0_ from jointure jointure0_ where jointure0_.JOINTUREID=? for update
2014-01-21 12:19:15,368 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Jointure [PESSIMISTIC_READ]: select jointure0_.JOINTUREID as JOINTUREID10_0_, jointure0_.CHAMPVIDE as CHAMPVIDE10_0_, jointure0_.TESTID as TESTID10_0_, jointure0_.PASSAGEID as PASSAGEID10_0_ from jointure jointure0_ where jointure0_.JOINTUREID=? lock in share mode
2014-01-21 12:19:15,368 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Jointure [PESSIMISTIC_WRITE]: select jointure0_.JOINTUREID as JOINTUREID10_0_, jointure0_.CHAMPVIDE as CHAMPVIDE10_0_, jointure0_.TESTID as TESTID10_0_, jointure0_.PASSAGEID as PASSAGEID10_0_ from jointure jointure0_ where jointure0_.JOINTUREID=? for update
2014-01-21 12:19:15,368 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Jointure [PESSIMISTIC_FORCE_INCREMENT]: select jointure0_.JOINTUREID as JOINTUREID10_0_, jointure0_.CHAMPVIDE as CHAMPVIDE10_0_, jointure0_.TESTID as TESTID10_0_, jointure0_.PASSAGEID as PASSAGEID10_0_ from jointure jointure0_ where jointure0_.JOINTUREID=? for update
2014-01-21 12:19:15,368 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Jointure [OPTIMISTIC]: select jointure0_.JOINTUREID as JOINTUREID10_0_, jointure0_.CHAMPVIDE as CHAMPVIDE10_0_, jointure0_.TESTID as TESTID10_0_, jointure0_.PASSAGEID as PASSAGEID10_0_ from jointure jointure0_ where jointure0_.JOINTUREID=?
2014-01-21 12:19:15,368 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Jointure [OPTIMISTIC_FORCE_INCREMENT]: select jointure0_.JOINTUREID as JOINTUREID10_0_, jointure0_.CHAMPVIDE as CHAMPVIDE10_0_, jointure0_.TESTID as TESTID10_0_, jointure0_.PASSAGEID as PASSAGEID10_0_ from jointure jointure0_ where jointure0_.JOINTUREID=?
2014-01-21 12:19:15,369 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity jpa.Jointure: select jointure0_.JOINTUREID as JOINTUREID10_0_, jointure0_.CHAMPVIDE as CHAMPVIDE10_0_, jointure0_.TESTID as TESTID10_0_, jointure0_.PASSAGEID as PASSAGEID10_0_ from jointure jointure0_ where jointure0_.JOINTUREID=?
2014-01-21 12:19:15,369 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity jpa.Jointure: select jointure0_.JOINTUREID as JOINTUREID10_0_, jointure0_.CHAMPVIDE as CHAMPVIDE10_0_, jointure0_.TESTID as TESTID10_0_, jointure0_.PASSAGEID as PASSAGEID10_0_ from jointure jointure0_ where jointure0_.JOINTUREID=?
2014-01-21 12:19:15,369 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Admin [NONE]: select admin0_.ADMINID as ADMINID1_0_, admin0_.ADMINLOGIN as ADMINLOGIN1_0_, admin0_.ADMINPASSWORD as ADMINPAS3_1_0_ from admin admin0_ where admin0_.ADMINID=?
2014-01-21 12:19:15,369 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Admin [READ]: select admin0_.ADMINID as ADMINID1_0_, admin0_.ADMINLOGIN as ADMINLOGIN1_0_, admin0_.ADMINPASSWORD as ADMINPAS3_1_0_ from admin admin0_ where admin0_.ADMINID=?
2014-01-21 12:19:15,369 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Admin [UPGRADE]: select admin0_.ADMINID as ADMINID1_0_, admin0_.ADMINLOGIN as ADMINLOGIN1_0_, admin0_.ADMINPASSWORD as ADMINPAS3_1_0_ from admin admin0_ where admin0_.ADMINID=? for update
2014-01-21 12:19:15,369 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Admin [UPGRADE_NOWAIT]: select admin0_.ADMINID as ADMINID1_0_, admin0_.ADMINLOGIN as ADMINLOGIN1_0_, admin0_.ADMINPASSWORD as ADMINPAS3_1_0_ from admin admin0_ where admin0_.ADMINID=? for update
2014-01-21 12:19:15,370 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Admin [FORCE]: select admin0_.ADMINID as ADMINID1_0_, admin0_.ADMINLOGIN as ADMINLOGIN1_0_, admin0_.ADMINPASSWORD as ADMINPAS3_1_0_ from admin admin0_ where admin0_.ADMINID=? for update
2014-01-21 12:19:15,370 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Admin [PESSIMISTIC_READ]: select admin0_.ADMINID as ADMINID1_0_, admin0_.ADMINLOGIN as ADMINLOGIN1_0_, admin0_.ADMINPASSWORD as ADMINPAS3_1_0_ from admin admin0_ where admin0_.ADMINID=? lock in share mode
2014-01-21 12:19:15,370 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Admin [PESSIMISTIC_WRITE]: select admin0_.ADMINID as ADMINID1_0_, admin0_.ADMINLOGIN as ADMINLOGIN1_0_, admin0_.ADMINPASSWORD as ADMINPAS3_1_0_ from admin admin0_ where admin0_.ADMINID=? for update
2014-01-21 12:19:15,370 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Admin [PESSIMISTIC_FORCE_INCREMENT]: select admin0_.ADMINID as ADMINID1_0_, admin0_.ADMINLOGIN as ADMINLOGIN1_0_, admin0_.ADMINPASSWORD as ADMINPAS3_1_0_ from admin admin0_ where admin0_.ADMINID=? for update
2014-01-21 12:19:15,370 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Admin [OPTIMISTIC]: select admin0_.ADMINID as ADMINID1_0_, admin0_.ADMINLOGIN as ADMINLOGIN1_0_, admin0_.ADMINPASSWORD as ADMINPAS3_1_0_ from admin admin0_ where admin0_.ADMINID=?
2014-01-21 12:19:15,370 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Admin [OPTIMISTIC_FORCE_INCREMENT]: select admin0_.ADMINID as ADMINID1_0_, admin0_.ADMINLOGIN as ADMINLOGIN1_0_, admin0_.ADMINPASSWORD as ADMINPAS3_1_0_ from admin admin0_ where admin0_.ADMINID=?
2014-01-21 12:19:15,371 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity jpa.Admin: select admin0_.ADMINID as ADMINID1_0_, admin0_.ADMINLOGIN as ADMINLOGIN1_0_, admin0_.ADMINPASSWORD as ADMINPAS3_1_0_ from admin admin0_ where admin0_.ADMINID=?
2014-01-21 12:19:15,371 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity jpa.Admin: select admin0_.ADMINID as ADMINID1_0_, admin0_.ADMINLOGIN as ADMINLOGIN1_0_, admin0_.ADMINPASSWORD as ADMINPAS3_1_0_ from admin admin0_ where admin0_.ADMINID=?
2014-01-21 12:19:15,371 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.ReponseHisto [NONE]: select reponsehis0_.REPONSEHISTOID as REPONSEH1_7_0_, reponsehis0_.REPONSEVALEUR as REPONSEV2_7_0_, reponsehis0_.REPONSEDEBUT as REPONSED3_7_0_, reponsehis0_.REPONSEFIN as REPONSEFIN7_0_, reponsehis0_.PASSAGEID as PASSAGEID7_0_, reponsehis0_.QUESTIONID as QUESTIONID7_0_ from reponse_histo reponsehis0_ where reponsehis0_.REPONSEHISTOID=?
2014-01-21 12:19:15,371 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.ReponseHisto [READ]: select reponsehis0_.REPONSEHISTOID as REPONSEH1_7_0_, reponsehis0_.REPONSEVALEUR as REPONSEV2_7_0_, reponsehis0_.REPONSEDEBUT as REPONSED3_7_0_, reponsehis0_.REPONSEFIN as REPONSEFIN7_0_, reponsehis0_.PASSAGEID as PASSAGEID7_0_, reponsehis0_.QUESTIONID as QUESTIONID7_0_ from reponse_histo reponsehis0_ where reponsehis0_.REPONSEHISTOID=?
2014-01-21 12:19:15,371 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.ReponseHisto [UPGRADE]: select reponsehis0_.REPONSEHISTOID as REPONSEH1_7_0_, reponsehis0_.REPONSEVALEUR as REPONSEV2_7_0_, reponsehis0_.REPONSEDEBUT as REPONSED3_7_0_, reponsehis0_.REPONSEFIN as REPONSEFIN7_0_, reponsehis0_.PASSAGEID as PASSAGEID7_0_, reponsehis0_.QUESTIONID as QUESTIONID7_0_ from reponse_histo reponsehis0_ where reponsehis0_.REPONSEHISTOID=? for update
2014-01-21 12:19:15,371 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.ReponseHisto [UPGRADE_NOWAIT]: select reponsehis0_.REPONSEHISTOID as REPONSEH1_7_0_, reponsehis0_.REPONSEVALEUR as REPONSEV2_7_0_, reponsehis0_.REPONSEDEBUT as REPONSED3_7_0_, reponsehis0_.REPONSEFIN as REPONSEFIN7_0_, reponsehis0_.PASSAGEID as PASSAGEID7_0_, reponsehis0_.QUESTIONID as QUESTIONID7_0_ from reponse_histo reponsehis0_ where reponsehis0_.REPONSEHISTOID=? for update
2014-01-21 12:19:15,372 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.ReponseHisto [FORCE]: select reponsehis0_.REPONSEHISTOID as REPONSEH1_7_0_, reponsehis0_.REPONSEVALEUR as REPONSEV2_7_0_, reponsehis0_.REPONSEDEBUT as REPONSED3_7_0_, reponsehis0_.REPONSEFIN as REPONSEFIN7_0_, reponsehis0_.PASSAGEID as PASSAGEID7_0_, reponsehis0_.QUESTIONID as QUESTIONID7_0_ from reponse_histo reponsehis0_ where reponsehis0_.REPONSEHISTOID=? for update
2014-01-21 12:19:15,372 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.ReponseHisto [PESSIMISTIC_READ]: select reponsehis0_.REPONSEHISTOID as REPONSEH1_7_0_, reponsehis0_.REPONSEVALEUR as REPONSEV2_7_0_, reponsehis0_.REPONSEDEBUT as REPONSED3_7_0_, reponsehis0_.REPONSEFIN as REPONSEFIN7_0_, reponsehis0_.PASSAGEID as PASSAGEID7_0_, reponsehis0_.QUESTIONID as QUESTIONID7_0_ from reponse_histo reponsehis0_ where reponsehis0_.REPONSEHISTOID=? lock in share mode
2014-01-21 12:19:15,372 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.ReponseHisto [PESSIMISTIC_WRITE]: select reponsehis0_.REPONSEHISTOID as REPONSEH1_7_0_, reponsehis0_.REPONSEVALEUR as REPONSEV2_7_0_, reponsehis0_.REPONSEDEBUT as REPONSED3_7_0_, reponsehis0_.REPONSEFIN as REPONSEFIN7_0_, reponsehis0_.PASSAGEID as PASSAGEID7_0_, reponsehis0_.QUESTIONID as QUESTIONID7_0_ from reponse_histo reponsehis0_ where reponsehis0_.REPONSEHISTOID=? for update
2014-01-21 12:19:15,372 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.ReponseHisto [PESSIMISTIC_FORCE_INCREMENT]: select reponsehis0_.REPONSEHISTOID as REPONSEH1_7_0_, reponsehis0_.REPONSEVALEUR as REPONSEV2_7_0_, reponsehis0_.REPONSEDEBUT as REPONSED3_7_0_, reponsehis0_.REPONSEFIN as REPONSEFIN7_0_, reponsehis0_.PASSAGEID as PASSAGEID7_0_, reponsehis0_.QUESTIONID as QUESTIONID7_0_ from reponse_histo reponsehis0_ where reponsehis0_.REPONSEHISTOID=? for update
2014-01-21 12:19:15,372 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.ReponseHisto [OPTIMISTIC]: select reponsehis0_.REPONSEHISTOID as REPONSEH1_7_0_, reponsehis0_.REPONSEVALEUR as REPONSEV2_7_0_, reponsehis0_.REPONSEDEBUT as REPONSED3_7_0_, reponsehis0_.REPONSEFIN as REPONSEFIN7_0_, reponsehis0_.PASSAGEID as PASSAGEID7_0_, reponsehis0_.QUESTIONID as QUESTIONID7_0_ from reponse_histo reponsehis0_ where reponsehis0_.REPONSEHISTOID=?
2014-01-21 12:19:15,373 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.ReponseHisto [OPTIMISTIC_FORCE_INCREMENT]: select reponsehis0_.REPONSEHISTOID as REPONSEH1_7_0_, reponsehis0_.REPONSEVALEUR as REPONSEV2_7_0_, reponsehis0_.REPONSEDEBUT as REPONSED3_7_0_, reponsehis0_.REPONSEFIN as REPONSEFIN7_0_, reponsehis0_.PASSAGEID as PASSAGEID7_0_, reponsehis0_.QUESTIONID as QUESTIONID7_0_ from reponse_histo reponsehis0_ where reponsehis0_.REPONSEHISTOID=?
2014-01-21 12:19:15,373 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity jpa.ReponseHisto: select reponsehis0_.REPONSEHISTOID as REPONSEH1_7_0_, reponsehis0_.REPONSEVALEUR as REPONSEV2_7_0_, reponsehis0_.REPONSEDEBUT as REPONSED3_7_0_, reponsehis0_.REPONSEFIN as REPONSEFIN7_0_, reponsehis0_.PASSAGEID as PASSAGEID7_0_, reponsehis0_.QUESTIONID as QUESTIONID7_0_ from reponse_histo reponsehis0_ where reponsehis0_.REPONSEHISTOID=?
2014-01-21 12:19:15,373 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity jpa.ReponseHisto: select reponsehis0_.REPONSEHISTOID as REPONSEH1_7_0_, reponsehis0_.REPONSEVALEUR as REPONSEV2_7_0_, reponsehis0_.REPONSEDEBUT as REPONSED3_7_0_, reponsehis0_.REPONSEFIN as REPONSEFIN7_0_, reponsehis0_.PASSAGEID as PASSAGEID7_0_, reponsehis0_.QUESTIONID as QUESTIONID7_0_ from reponse_histo reponsehis0_ where reponsehis0_.REPONSEHISTOID=?
2014-01-21 12:19:15,373 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Passage [NONE]: select passage0_.PASSAGEID as PASSAGEID5_0_, passage0_.PASSAGE_ETAT as PASSAGE2_5_0_, passage0_.PASSAGE_DATE as PASSAGE3_5_0_, passage0_.PASSAGEDEBUT_VAL as PASSAGED4_5_0_, passage0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_0_, passage0_.CANDIDATID as CANDIDATID5_0_ from passage passage0_ where passage0_.PASSAGEID=?
2014-01-21 12:19:15,373 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Passage [READ]: select passage0_.PASSAGEID as PASSAGEID5_0_, passage0_.PASSAGE_ETAT as PASSAGE2_5_0_, passage0_.PASSAGE_DATE as PASSAGE3_5_0_, passage0_.PASSAGEDEBUT_VAL as PASSAGED4_5_0_, passage0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_0_, passage0_.CANDIDATID as CANDIDATID5_0_ from passage passage0_ where passage0_.PASSAGEID=?
2014-01-21 12:19:15,374 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Passage [UPGRADE]: select passage0_.PASSAGEID as PASSAGEID5_0_, passage0_.PASSAGE_ETAT as PASSAGE2_5_0_, passage0_.PASSAGE_DATE as PASSAGE3_5_0_, passage0_.PASSAGEDEBUT_VAL as PASSAGED4_5_0_, passage0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_0_, passage0_.CANDIDATID as CANDIDATID5_0_ from passage passage0_ where passage0_.PASSAGEID=? for update
2014-01-21 12:19:15,374 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Passage [UPGRADE_NOWAIT]: select passage0_.PASSAGEID as PASSAGEID5_0_, passage0_.PASSAGE_ETAT as PASSAGE2_5_0_, passage0_.PASSAGE_DATE as PASSAGE3_5_0_, passage0_.PASSAGEDEBUT_VAL as PASSAGED4_5_0_, passage0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_0_, passage0_.CANDIDATID as CANDIDATID5_0_ from passage passage0_ where passage0_.PASSAGEID=? for update
2014-01-21 12:19:15,374 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Passage [FORCE]: select passage0_.PASSAGEID as PASSAGEID5_0_, passage0_.PASSAGE_ETAT as PASSAGE2_5_0_, passage0_.PASSAGE_DATE as PASSAGE3_5_0_, passage0_.PASSAGEDEBUT_VAL as PASSAGED4_5_0_, passage0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_0_, passage0_.CANDIDATID as CANDIDATID5_0_ from passage passage0_ where passage0_.PASSAGEID=? for update
2014-01-21 12:19:15,374 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Passage [PESSIMISTIC_READ]: select passage0_.PASSAGEID as PASSAGEID5_0_, passage0_.PASSAGE_ETAT as PASSAGE2_5_0_, passage0_.PASSAGE_DATE as PASSAGE3_5_0_, passage0_.PASSAGEDEBUT_VAL as PASSAGED4_5_0_, passage0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_0_, passage0_.CANDIDATID as CANDIDATID5_0_ from passage passage0_ where passage0_.PASSAGEID=? lock in share mode
2014-01-21 12:19:15,374 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Passage [PESSIMISTIC_WRITE]: select passage0_.PASSAGEID as PASSAGEID5_0_, passage0_.PASSAGE_ETAT as PASSAGE2_5_0_, passage0_.PASSAGE_DATE as PASSAGE3_5_0_, passage0_.PASSAGEDEBUT_VAL as PASSAGED4_5_0_, passage0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_0_, passage0_.CANDIDATID as CANDIDATID5_0_ from passage passage0_ where passage0_.PASSAGEID=? for update
2014-01-21 12:19:15,375 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Passage [PESSIMISTIC_FORCE_INCREMENT]: select passage0_.PASSAGEID as PASSAGEID5_0_, passage0_.PASSAGE_ETAT as PASSAGE2_5_0_, passage0_.PASSAGE_DATE as PASSAGE3_5_0_, passage0_.PASSAGEDEBUT_VAL as PASSAGED4_5_0_, passage0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_0_, passage0_.CANDIDATID as CANDIDATID5_0_ from passage passage0_ where passage0_.PASSAGEID=? for update
2014-01-21 12:19:15,375 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Passage [OPTIMISTIC]: select passage0_.PASSAGEID as PASSAGEID5_0_, passage0_.PASSAGE_ETAT as PASSAGE2_5_0_, passage0_.PASSAGE_DATE as PASSAGE3_5_0_, passage0_.PASSAGEDEBUT_VAL as PASSAGED4_5_0_, passage0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_0_, passage0_.CANDIDATID as CANDIDATID5_0_ from passage passage0_ where passage0_.PASSAGEID=?
2014-01-21 12:19:15,375 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Passage [OPTIMISTIC_FORCE_INCREMENT]: select passage0_.PASSAGEID as PASSAGEID5_0_, passage0_.PASSAGE_ETAT as PASSAGE2_5_0_, passage0_.PASSAGE_DATE as PASSAGE3_5_0_, passage0_.PASSAGEDEBUT_VAL as PASSAGED4_5_0_, passage0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_0_, passage0_.CANDIDATID as CANDIDATID5_0_ from passage passage0_ where passage0_.PASSAGEID=?
2014-01-21 12:19:15,375 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity jpa.Passage: select passage0_.PASSAGEID as PASSAGEID5_0_, passage0_.PASSAGE_ETAT as PASSAGE2_5_0_, passage0_.PASSAGE_DATE as PASSAGE3_5_0_, passage0_.PASSAGEDEBUT_VAL as PASSAGED4_5_0_, passage0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_0_, passage0_.CANDIDATID as CANDIDATID5_0_ from passage passage0_ where passage0_.PASSAGEID=?
2014-01-21 12:19:15,375 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity jpa.Passage: select passage0_.PASSAGEID as PASSAGEID5_0_, passage0_.PASSAGE_ETAT as PASSAGE2_5_0_, passage0_.PASSAGE_DATE as PASSAGE3_5_0_, passage0_.PASSAGEDEBUT_VAL as PASSAGED4_5_0_, passage0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_0_, passage0_.CANDIDATID as CANDIDATID5_0_ from passage passage0_ where passage0_.PASSAGEID=?
2014-01-21 12:19:15,376 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Reponse [NONE]: select reponse0_.REPONSEID as REPONSEID8_0_, reponse0_.REPONSETEXTE as REPONSET2_8_0_, reponse0_.REPONSEDUREE as REPONSED3_8_0_, reponse0_.REPONSEMESSAGE as REPONSEM4_8_0_, reponse0_.PASSAGEID as PASSAGEID8_0_, reponse0_.QUESTIONID as QUESTIONID8_0_ from reponse reponse0_ where reponse0_.REPONSEID=?
2014-01-21 12:19:15,376 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Reponse [READ]: select reponse0_.REPONSEID as REPONSEID8_0_, reponse0_.REPONSETEXTE as REPONSET2_8_0_, reponse0_.REPONSEDUREE as REPONSED3_8_0_, reponse0_.REPONSEMESSAGE as REPONSEM4_8_0_, reponse0_.PASSAGEID as PASSAGEID8_0_, reponse0_.QUESTIONID as QUESTIONID8_0_ from reponse reponse0_ where reponse0_.REPONSEID=?
2014-01-21 12:19:15,376 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Reponse [UPGRADE]: select reponse0_.REPONSEID as REPONSEID8_0_, reponse0_.REPONSETEXTE as REPONSET2_8_0_, reponse0_.REPONSEDUREE as REPONSED3_8_0_, reponse0_.REPONSEMESSAGE as REPONSEM4_8_0_, reponse0_.PASSAGEID as PASSAGEID8_0_, reponse0_.QUESTIONID as QUESTIONID8_0_ from reponse reponse0_ where reponse0_.REPONSEID=? for update
2014-01-21 12:19:15,376 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Reponse [UPGRADE_NOWAIT]: select reponse0_.REPONSEID as REPONSEID8_0_, reponse0_.REPONSETEXTE as REPONSET2_8_0_, reponse0_.REPONSEDUREE as REPONSED3_8_0_, reponse0_.REPONSEMESSAGE as REPONSEM4_8_0_, reponse0_.PASSAGEID as PASSAGEID8_0_, reponse0_.QUESTIONID as QUESTIONID8_0_ from reponse reponse0_ where reponse0_.REPONSEID=? for update
2014-01-21 12:19:15,377 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Reponse [FORCE]: select reponse0_.REPONSEID as REPONSEID8_0_, reponse0_.REPONSETEXTE as REPONSET2_8_0_, reponse0_.REPONSEDUREE as REPONSED3_8_0_, reponse0_.REPONSEMESSAGE as REPONSEM4_8_0_, reponse0_.PASSAGEID as PASSAGEID8_0_, reponse0_.QUESTIONID as QUESTIONID8_0_ from reponse reponse0_ where reponse0_.REPONSEID=? for update
2014-01-21 12:19:15,377 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Reponse [PESSIMISTIC_READ]: select reponse0_.REPONSEID as REPONSEID8_0_, reponse0_.REPONSETEXTE as REPONSET2_8_0_, reponse0_.REPONSEDUREE as REPONSED3_8_0_, reponse0_.REPONSEMESSAGE as REPONSEM4_8_0_, reponse0_.PASSAGEID as PASSAGEID8_0_, reponse0_.QUESTIONID as QUESTIONID8_0_ from reponse reponse0_ where reponse0_.REPONSEID=? lock in share mode
2014-01-21 12:19:15,377 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Reponse [PESSIMISTIC_WRITE]: select reponse0_.REPONSEID as REPONSEID8_0_, reponse0_.REPONSETEXTE as REPONSET2_8_0_, reponse0_.REPONSEDUREE as REPONSED3_8_0_, reponse0_.REPONSEMESSAGE as REPONSEM4_8_0_, reponse0_.PASSAGEID as PASSAGEID8_0_, reponse0_.QUESTIONID as QUESTIONID8_0_ from reponse reponse0_ where reponse0_.REPONSEID=? for update
2014-01-21 12:19:15,377 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Reponse [PESSIMISTIC_FORCE_INCREMENT]: select reponse0_.REPONSEID as REPONSEID8_0_, reponse0_.REPONSETEXTE as REPONSET2_8_0_, reponse0_.REPONSEDUREE as REPONSED3_8_0_, reponse0_.REPONSEMESSAGE as REPONSEM4_8_0_, reponse0_.PASSAGEID as PASSAGEID8_0_, reponse0_.QUESTIONID as QUESTIONID8_0_ from reponse reponse0_ where reponse0_.REPONSEID=? for update
2014-01-21 12:19:15,378 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Reponse [OPTIMISTIC]: select reponse0_.REPONSEID as REPONSEID8_0_, reponse0_.REPONSETEXTE as REPONSET2_8_0_, reponse0_.REPONSEDUREE as REPONSED3_8_0_, reponse0_.REPONSEMESSAGE as REPONSEM4_8_0_, reponse0_.PASSAGEID as PASSAGEID8_0_, reponse0_.QUESTIONID as QUESTIONID8_0_ from reponse reponse0_ where reponse0_.REPONSEID=?
2014-01-21 12:19:15,378 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Reponse [OPTIMISTIC_FORCE_INCREMENT]: select reponse0_.REPONSEID as REPONSEID8_0_, reponse0_.REPONSETEXTE as REPONSET2_8_0_, reponse0_.REPONSEDUREE as REPONSED3_8_0_, reponse0_.REPONSEMESSAGE as REPONSEM4_8_0_, reponse0_.PASSAGEID as PASSAGEID8_0_, reponse0_.QUESTIONID as QUESTIONID8_0_ from reponse reponse0_ where reponse0_.REPONSEID=?
2014-01-21 12:19:15,378 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity jpa.Reponse: select reponse0_.REPONSEID as REPONSEID8_0_, reponse0_.REPONSETEXTE as REPONSET2_8_0_, reponse0_.REPONSEDUREE as REPONSED3_8_0_, reponse0_.REPONSEMESSAGE as REPONSEM4_8_0_, reponse0_.PASSAGEID as PASSAGEID8_0_, reponse0_.QUESTIONID as QUESTIONID8_0_ from reponse reponse0_ where reponse0_.REPONSEID=?
2014-01-21 12:19:15,378 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity jpa.Reponse: select reponse0_.REPONSEID as REPONSEID8_0_, reponse0_.REPONSETEXTE as REPONSET2_8_0_, reponse0_.REPONSEDUREE as REPONSED3_8_0_, reponse0_.REPONSEMESSAGE as REPONSEM4_8_0_, reponse0_.PASSAGEID as PASSAGEID8_0_, reponse0_.QUESTIONID as QUESTIONID8_0_ from reponse reponse0_ where reponse0_.REPONSEID=?
2014-01-21 12:19:15,378 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Test [NONE]: select test0_.TESTID as TESTID3_0_, test0_.TESTMATIERE as TESTMATI2_3_0_, test0_.TESTDUREE as TESTDUREE3_0_, test0_.TEST_NBQUESTION_RUB as TEST4_3_0_, test0_.TESTNATURE as TESTNATURE3_0_, test0_.TESTFORMAT as TESTFORMAT3_0_, test0_.TEST_START as TEST7_3_0_, test0_.TEST_DESCRIPTION as TEST8_3_0_, test0_.THEME as THEME3_0_, test0_.NIVEAU as NIVEAU3_0_, test0_.CATEGORIEID as CATEGOR11_3_0_ from test test0_ where test0_.TESTID=?
2014-01-21 12:19:15,379 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Test [READ]: select test0_.TESTID as TESTID3_0_, test0_.TESTMATIERE as TESTMATI2_3_0_, test0_.TESTDUREE as TESTDUREE3_0_, test0_.TEST_NBQUESTION_RUB as TEST4_3_0_, test0_.TESTNATURE as TESTNATURE3_0_, test0_.TESTFORMAT as TESTFORMAT3_0_, test0_.TEST_START as TEST7_3_0_, test0_.TEST_DESCRIPTION as TEST8_3_0_, test0_.THEME as THEME3_0_, test0_.NIVEAU as NIVEAU3_0_, test0_.CATEGORIEID as CATEGOR11_3_0_ from test test0_ where test0_.TESTID=?
2014-01-21 12:19:15,379 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Test [UPGRADE]: select test0_.TESTID as TESTID3_0_, test0_.TESTMATIERE as TESTMATI2_3_0_, test0_.TESTDUREE as TESTDUREE3_0_, test0_.TEST_NBQUESTION_RUB as TEST4_3_0_, test0_.TESTNATURE as TESTNATURE3_0_, test0_.TESTFORMAT as TESTFORMAT3_0_, test0_.TEST_START as TEST7_3_0_, test0_.TEST_DESCRIPTION as TEST8_3_0_, test0_.THEME as THEME3_0_, test0_.NIVEAU as NIVEAU3_0_, test0_.CATEGORIEID as CATEGOR11_3_0_ from test test0_ where test0_.TESTID=? for update
2014-01-21 12:19:15,379 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Test [UPGRADE_NOWAIT]: select test0_.TESTID as TESTID3_0_, test0_.TESTMATIERE as TESTMATI2_3_0_, test0_.TESTDUREE as TESTDUREE3_0_, test0_.TEST_NBQUESTION_RUB as TEST4_3_0_, test0_.TESTNATURE as TESTNATURE3_0_, test0_.TESTFORMAT as TESTFORMAT3_0_, test0_.TEST_START as TEST7_3_0_, test0_.TEST_DESCRIPTION as TEST8_3_0_, test0_.THEME as THEME3_0_, test0_.NIVEAU as NIVEAU3_0_, test0_.CATEGORIEID as CATEGOR11_3_0_ from test test0_ where test0_.TESTID=? for update
2014-01-21 12:19:15,380 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Test [FORCE]: select test0_.TESTID as TESTID3_0_, test0_.TESTMATIERE as TESTMATI2_3_0_, test0_.TESTDUREE as TESTDUREE3_0_, test0_.TEST_NBQUESTION_RUB as TEST4_3_0_, test0_.TESTNATURE as TESTNATURE3_0_, test0_.TESTFORMAT as TESTFORMAT3_0_, test0_.TEST_START as TEST7_3_0_, test0_.TEST_DESCRIPTION as TEST8_3_0_, test0_.THEME as THEME3_0_, test0_.NIVEAU as NIVEAU3_0_, test0_.CATEGORIEID as CATEGOR11_3_0_ from test test0_ where test0_.TESTID=? for update
2014-01-21 12:19:15,380 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Test [PESSIMISTIC_READ]: select test0_.TESTID as TESTID3_0_, test0_.TESTMATIERE as TESTMATI2_3_0_, test0_.TESTDUREE as TESTDUREE3_0_, test0_.TEST_NBQUESTION_RUB as TEST4_3_0_, test0_.TESTNATURE as TESTNATURE3_0_, test0_.TESTFORMAT as TESTFORMAT3_0_, test0_.TEST_START as TEST7_3_0_, test0_.TEST_DESCRIPTION as TEST8_3_0_, test0_.THEME as THEME3_0_, test0_.NIVEAU as NIVEAU3_0_, test0_.CATEGORIEID as CATEGOR11_3_0_ from test test0_ where test0_.TESTID=? lock in share mode
2014-01-21 12:19:15,381 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Test [PESSIMISTIC_WRITE]: select test0_.TESTID as TESTID3_0_, test0_.TESTMATIERE as TESTMATI2_3_0_, test0_.TESTDUREE as TESTDUREE3_0_, test0_.TEST_NBQUESTION_RUB as TEST4_3_0_, test0_.TESTNATURE as TESTNATURE3_0_, test0_.TESTFORMAT as TESTFORMAT3_0_, test0_.TEST_START as TEST7_3_0_, test0_.TEST_DESCRIPTION as TEST8_3_0_, test0_.THEME as THEME3_0_, test0_.NIVEAU as NIVEAU3_0_, test0_.CATEGORIEID as CATEGOR11_3_0_ from test test0_ where test0_.TESTID=? for update
2014-01-21 12:19:15,381 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Test [PESSIMISTIC_FORCE_INCREMENT]: select test0_.TESTID as TESTID3_0_, test0_.TESTMATIERE as TESTMATI2_3_0_, test0_.TESTDUREE as TESTDUREE3_0_, test0_.TEST_NBQUESTION_RUB as TEST4_3_0_, test0_.TESTNATURE as TESTNATURE3_0_, test0_.TESTFORMAT as TESTFORMAT3_0_, test0_.TEST_START as TEST7_3_0_, test0_.TEST_DESCRIPTION as TEST8_3_0_, test0_.THEME as THEME3_0_, test0_.NIVEAU as NIVEAU3_0_, test0_.CATEGORIEID as CATEGOR11_3_0_ from test test0_ where test0_.TESTID=? for update
2014-01-21 12:19:15,381 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Test [OPTIMISTIC]: select test0_.TESTID as TESTID3_0_, test0_.TESTMATIERE as TESTMATI2_3_0_, test0_.TESTDUREE as TESTDUREE3_0_, test0_.TEST_NBQUESTION_RUB as TEST4_3_0_, test0_.TESTNATURE as TESTNATURE3_0_, test0_.TESTFORMAT as TESTFORMAT3_0_, test0_.TEST_START as TEST7_3_0_, test0_.TEST_DESCRIPTION as TEST8_3_0_, test0_.THEME as THEME3_0_, test0_.NIVEAU as NIVEAU3_0_, test0_.CATEGORIEID as CATEGOR11_3_0_ from test test0_ where test0_.TESTID=?
2014-01-21 12:19:15,382 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Test [OPTIMISTIC_FORCE_INCREMENT]: select test0_.TESTID as TESTID3_0_, test0_.TESTMATIERE as TESTMATI2_3_0_, test0_.TESTDUREE as TESTDUREE3_0_, test0_.TEST_NBQUESTION_RUB as TEST4_3_0_, test0_.TESTNATURE as TESTNATURE3_0_, test0_.TESTFORMAT as TESTFORMAT3_0_, test0_.TEST_START as TEST7_3_0_, test0_.TEST_DESCRIPTION as TEST8_3_0_, test0_.THEME as THEME3_0_, test0_.NIVEAU as NIVEAU3_0_, test0_.CATEGORIEID as CATEGOR11_3_0_ from test test0_ where test0_.TESTID=?
2014-01-21 12:19:15,382 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity jpa.Test: select test0_.TESTID as TESTID3_0_, test0_.TESTMATIERE as TESTMATI2_3_0_, test0_.TESTDUREE as TESTDUREE3_0_, test0_.TEST_NBQUESTION_RUB as TEST4_3_0_, test0_.TESTNATURE as TESTNATURE3_0_, test0_.TESTFORMAT as TESTFORMAT3_0_, test0_.TEST_START as TEST7_3_0_, test0_.TEST_DESCRIPTION as TEST8_3_0_, test0_.THEME as THEME3_0_, test0_.NIVEAU as NIVEAU3_0_, test0_.CATEGORIEID as CATEGOR11_3_0_ from test test0_ where test0_.TESTID=?
2014-01-21 12:19:15,382 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity jpa.Test: select test0_.TESTID as TESTID3_0_, test0_.TESTMATIERE as TESTMATI2_3_0_, test0_.TESTDUREE as TESTDUREE3_0_, test0_.TEST_NBQUESTION_RUB as TEST4_3_0_, test0_.TESTNATURE as TESTNATURE3_0_, test0_.TESTFORMAT as TESTFORMAT3_0_, test0_.TEST_START as TEST7_3_0_, test0_.TEST_DESCRIPTION as TEST8_3_0_, test0_.THEME as THEME3_0_, test0_.NIVEAU as NIVEAU3_0_, test0_.CATEGORIEID as CATEGOR11_3_0_ from test test0_ where test0_.TESTID=?
2014-01-21 12:19:15,383 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Question [NONE]: select question0_.QUESTIONID as QUESTIONID9_0_, question0_.QUESTIONTEXT as QUESTION2_9_0_, question0_.RUBRIQUEID as RUBRIQUEID9_0_ from question question0_ where question0_.QUESTIONID=?
2014-01-21 12:19:15,383 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Question [READ]: select question0_.QUESTIONID as QUESTIONID9_0_, question0_.QUESTIONTEXT as QUESTION2_9_0_, question0_.RUBRIQUEID as RUBRIQUEID9_0_ from question question0_ where question0_.QUESTIONID=?
2014-01-21 12:19:15,383 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Question [UPGRADE]: select question0_.QUESTIONID as QUESTIONID9_0_, question0_.QUESTIONTEXT as QUESTION2_9_0_, question0_.RUBRIQUEID as RUBRIQUEID9_0_ from question question0_ where question0_.QUESTIONID=? for update
2014-01-21 12:19:15,383 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Question [UPGRADE_NOWAIT]: select question0_.QUESTIONID as QUESTIONID9_0_, question0_.QUESTIONTEXT as QUESTION2_9_0_, question0_.RUBRIQUEID as RUBRIQUEID9_0_ from question question0_ where question0_.QUESTIONID=? for update
2014-01-21 12:19:15,384 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Question [FORCE]: select question0_.QUESTIONID as QUESTIONID9_0_, question0_.QUESTIONTEXT as QUESTION2_9_0_, question0_.RUBRIQUEID as RUBRIQUEID9_0_ from question question0_ where question0_.QUESTIONID=? for update
2014-01-21 12:19:15,384 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Question [PESSIMISTIC_READ]: select question0_.QUESTIONID as QUESTIONID9_0_, question0_.QUESTIONTEXT as QUESTION2_9_0_, question0_.RUBRIQUEID as RUBRIQUEID9_0_ from question question0_ where question0_.QUESTIONID=? lock in share mode
2014-01-21 12:19:15,384 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Question [PESSIMISTIC_WRITE]: select question0_.QUESTIONID as QUESTIONID9_0_, question0_.QUESTIONTEXT as QUESTION2_9_0_, question0_.RUBRIQUEID as RUBRIQUEID9_0_ from question question0_ where question0_.QUESTIONID=? for update
2014-01-21 12:19:15,385 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.QUESTIONID as QUESTIONID9_0_, question0_.QUESTIONTEXT as QUESTION2_9_0_, question0_.RUBRIQUEID as RUBRIQUEID9_0_ from question question0_ where question0_.QUESTIONID=? for update
2014-01-21 12:19:15,385 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Question [OPTIMISTIC]: select question0_.QUESTIONID as QUESTIONID9_0_, question0_.QUESTIONTEXT as QUESTION2_9_0_, question0_.RUBRIQUEID as RUBRIQUEID9_0_ from question question0_ where question0_.QUESTIONID=?
2014-01-21 12:19:15,385 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity jpa.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.QUESTIONID as QUESTIONID9_0_, question0_.QUESTIONTEXT as QUESTION2_9_0_, question0_.RUBRIQUEID as RUBRIQUEID9_0_ from question question0_ where question0_.QUESTIONID=?
2014-01-21 12:19:15,385 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity jpa.Question: select question0_.QUESTIONID as QUESTIONID9_0_, question0_.QUESTIONTEXT as QUESTION2_9_0_, question0_.RUBRIQUEID as RUBRIQUEID9_0_ from question question0_ where question0_.QUESTIONID=?
2014-01-21 12:19:15,386 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity jpa.Question: select question0_.QUESTIONID as QUESTIONID9_0_, question0_.QUESTIONTEXT as QUESTION2_9_0_, question0_.RUBRIQUEID as RUBRIQUEID9_0_ from question question0_ where question0_.QUESTIONID=?
2014-01-21 12:19:15,389 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader.<init>(OneToManyLoader.java:81) - Static select for one-to-many jpa.Test.rubriqueCollection: select rubriqueco0_.TESTID as TESTID3_1_, rubriqueco0_.RUBRIQUEID as RUBRIQUEID1_, rubriqueco0_.RUBRIQUEID as RUBRIQUEID6_0_, rubriqueco0_.RUBRIQUENOM as RUBRIQUE2_6_0_, rubriqueco0_.TESTID as TESTID6_0_ from rubrique rubriqueco0_ where rubriqueco0_.TESTID=?
2014-01-21 12:19:15,389 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader.<init>(OneToManyLoader.java:81) - Static select for one-to-many jpa.Question.propositionCollection: select propositio0_.QUESTIONID as QUESTIONID9_1_, propositio0_.PROPOSITIONID as PROPOSIT1_1_, propositio0_.PROPOSITIONID as PROPOSIT1_0_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_0_, propositio0_.QUESTIONID as QUESTIONID0_0_ from proposition propositio0_ where propositio0_.QUESTIONID=?
2014-01-21 12:19:15,389 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader.<init>(OneToManyLoader.java:81) - Static select for one-to-many jpa.Passage.reponseHistoCollection: select reponsehis0_.PASSAGEID as PASSAGEID5_1_, reponsehis0_.REPONSEHISTOID as REPONSEH1_1_, reponsehis0_.REPONSEHISTOID as REPONSEH1_7_0_, reponsehis0_.REPONSEVALEUR as REPONSEV2_7_0_, reponsehis0_.REPONSEDEBUT as REPONSED3_7_0_, reponsehis0_.REPONSEFIN as REPONSEFIN7_0_, reponsehis0_.PASSAGEID as PASSAGEID7_0_, reponsehis0_.QUESTIONID as QUESTIONID7_0_ from reponse_histo reponsehis0_ where reponsehis0_.PASSAGEID=?
2014-01-21 12:19:15,389 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader.<init>(OneToManyLoader.java:81) - Static select for one-to-many jpa.Candidat.passageCollection: select passagecol0_.CANDIDATID as CANDIDATID2_1_, passagecol0_.PASSAGEID as PASSAGEID1_, passagecol0_.PASSAGEID as PASSAGEID5_0_, passagecol0_.PASSAGE_ETAT as PASSAGE2_5_0_, passagecol0_.PASSAGE_DATE as PASSAGE3_5_0_, passagecol0_.PASSAGEDEBUT_VAL as PASSAGED4_5_0_, passagecol0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_0_, passagecol0_.CANDIDATID as CANDIDATID5_0_ from passage passagecol0_ where passagecol0_.CANDIDATID=?
2014-01-21 12:19:15,389 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader.<init>(OneToManyLoader.java:81) - Static select for one-to-many jpa.Test.jointureCollection: select jointureco0_.TESTID as TESTID3_1_, jointureco0_.JOINTUREID as JOINTUREID1_, jointureco0_.JOINTUREID as JOINTUREID10_0_, jointureco0_.CHAMPVIDE as CHAMPVIDE10_0_, jointureco0_.TESTID as TESTID10_0_, jointureco0_.PASSAGEID as PASSAGEID10_0_ from jointure jointureco0_ where jointureco0_.TESTID=?
2014-01-21 12:19:15,390 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader.<init>(OneToManyLoader.java:81) - Static select for one-to-many jpa.Question.reponseCollection: select reponsecol0_.QUESTIONID as QUESTIONID9_1_, reponsecol0_.REPONSEID as REPONSEID1_, reponsecol0_.REPONSEID as REPONSEID8_0_, reponsecol0_.REPONSETEXTE as REPONSET2_8_0_, reponsecol0_.REPONSEDUREE as REPONSED3_8_0_, reponsecol0_.REPONSEMESSAGE as REPONSEM4_8_0_, reponsecol0_.PASSAGEID as PASSAGEID8_0_, reponsecol0_.QUESTIONID as QUESTIONID8_0_ from reponse reponsecol0_ where reponsecol0_.QUESTIONID=?
2014-01-21 12:19:15,390 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader.<init>(OneToManyLoader.java:81) - Static select for one-to-many jpa.Passage.reponseCollection: select reponsecol0_.PASSAGEID as PASSAGEID5_1_, reponsecol0_.REPONSEID as REPONSEID1_, reponsecol0_.REPONSEID as REPONSEID8_0_, reponsecol0_.REPONSETEXTE as REPONSET2_8_0_, reponsecol0_.REPONSEDUREE as REPONSED3_8_0_, reponsecol0_.REPONSEMESSAGE as REPONSEM4_8_0_, reponsecol0_.PASSAGEID as PASSAGEID8_0_, reponsecol0_.QUESTIONID as QUESTIONID8_0_ from reponse reponsecol0_ where reponsecol0_.PASSAGEID=?
2014-01-21 12:19:15,390 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader.<init>(OneToManyLoader.java:81) - Static select for one-to-many jpa.Question.reponseHistoCollection: select reponsehis0_.QUESTIONID as QUESTIONID9_1_, reponsehis0_.REPONSEHISTOID as REPONSEH1_1_, reponsehis0_.REPONSEHISTOID as REPONSEH1_7_0_, reponsehis0_.REPONSEVALEUR as REPONSEV2_7_0_, reponsehis0_.REPONSEDEBUT as REPONSED3_7_0_, reponsehis0_.REPONSEFIN as REPONSEFIN7_0_, reponsehis0_.PASSAGEID as PASSAGEID7_0_, reponsehis0_.QUESTIONID as QUESTIONID7_0_ from reponse_histo reponsehis0_ where reponsehis0_.QUESTIONID=?
2014-01-21 12:19:15,390 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader.<init>(OneToManyLoader.java:81) - Static select for one-to-many jpa.Categorie.testCollection: select testcollec0_.CATEGORIEID as CATEGOR11_4_1_, testcollec0_.TESTID as TESTID1_, testcollec0_.TESTID as TESTID3_0_, testcollec0_.TESTMATIERE as TESTMATI2_3_0_, testcollec0_.TESTDUREE as TESTDUREE3_0_, testcollec0_.TEST_NBQUESTION_RUB as TEST4_3_0_, testcollec0_.TESTNATURE as TESTNATURE3_0_, testcollec0_.TESTFORMAT as TESTFORMAT3_0_, testcollec0_.TEST_START as TEST7_3_0_, testcollec0_.TEST_DESCRIPTION as TEST8_3_0_, testcollec0_.THEME as THEME3_0_, testcollec0_.NIVEAU as NIVEAU3_0_, testcollec0_.CATEGORIEID as CATEGOR11_3_0_ from test testcollec0_ where testcollec0_.CATEGORIEID=?
2014-01-21 12:19:15,391 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader.<init>(OneToManyLoader.java:81) - Static select for one-to-many jpa.Passage.jointureCollection: select jointureco0_.PASSAGEID as PASSAGEID5_1_, jointureco0_.JOINTUREID as JOINTUREID1_, jointureco0_.JOINTUREID as JOINTUREID10_0_, jointureco0_.CHAMPVIDE as CHAMPVIDE10_0_, jointureco0_.TESTID as TESTID10_0_, jointureco0_.PASSAGEID as PASSAGEID10_0_ from jointure jointureco0_ where jointureco0_.PASSAGEID=?
2014-01-21 12:19:15,391 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader.<init>(OneToManyLoader.java:81) - Static select for one-to-many jpa.Rubrique.questionCollection: select questionco0_.RUBRIQUEID as RUBRIQUEID6_1_, questionco0_.QUESTIONID as QUESTIONID1_, questionco0_.QUESTIONID as QUESTIONID9_0_, questionco0_.QUESTIONTEXT as QUESTION2_9_0_, questionco0_.RUBRIQUEID as RUBRIQUEID9_0_ from question questionco0_ where questionco0_.RUBRIQUEID=?
2014-01-21 12:19:15,419 [main] DEBUG org.hibernate.impl.SessionFactoryObjectFactory.<clinit>(SessionFactoryObjectFactory.java:61) - initializing class SessionFactoryObjectFactory
2014-01-21 12:19:15,420 [main] DEBUG org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) - registered: 2a73d32e-cd61-44ea-a0f4-b4266a36b610 (unnamed)
2014-01-21 12:19:15,420 [main] INFO  org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) - Not binding factory to JNDI, no JNDI name configured
2014-01-21 12:19:15,420 [main] DEBUG org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) - instantiated session factory
2014-01-21 12:19:15,421 [main] DEBUG org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) - Checking 0 named HQL queries
2014-01-21 12:19:15,421 [main] DEBUG org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) - Checking 0 named SQL queries
2014-01-21 12:19:15,421 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'sessionFactory'
2014-01-21 12:19:15,422 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'adminDao'
2014-01-21 12:19:15,422 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'adminDao'
2014-01-21 12:19:15,422 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'adminDao' to allow for resolving potential circular references
2014-01-21 12:19:15,423 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'sessionFactory'
2014-01-21 12:19:15,425 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'adminDao'
2014-01-21 12:19:15,425 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'candidatDao'
2014-01-21 12:19:15,425 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'candidatDao'
2014-01-21 12:19:15,425 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'candidatDao' to allow for resolving potential circular references
2014-01-21 12:19:15,427 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'sessionFactory'
2014-01-21 12:19:15,427 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'candidatDao'
2014-01-21 12:19:15,427 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'testDao'
2014-01-21 12:19:15,427 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'testDao'
2014-01-21 12:19:15,427 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'testDao' to allow for resolving potential circular references
2014-01-21 12:19:15,431 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'sessionFactory'
2014-01-21 12:19:15,431 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'testDao'
2014-01-21 12:19:15,432 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'jointureDao'
2014-01-21 12:19:15,432 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'jointureDao'
2014-01-21 12:19:15,432 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'jointureDao' to allow for resolving potential circular references
2014-01-21 12:19:15,433 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'sessionFactory'
2014-01-21 12:19:15,433 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'jointureDao'
2014-01-21 12:19:15,433 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'passageDao'
2014-01-21 12:19:15,434 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'passageDao'
2014-01-21 12:19:15,434 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'passageDao' to allow for resolving potential circular references
2014-01-21 12:19:15,435 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'sessionFactory'
2014-01-21 12:19:15,435 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'passageDao'
2014-01-21 12:19:15,435 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'rubriqueDao'
2014-01-21 12:19:15,436 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'rubriqueDao'
2014-01-21 12:19:15,436 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'rubriqueDao' to allow for resolving potential circular references
2014-01-21 12:19:15,437 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'sessionFactory'
2014-01-21 12:19:15,437 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'rubriqueDao'
2014-01-21 12:19:15,437 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'questionDao'
2014-01-21 12:19:15,438 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'questionDao'
2014-01-21 12:19:15,438 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'questionDao' to allow for resolving potential circular references
2014-01-21 12:19:15,439 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'sessionFactory'
2014-01-21 12:19:15,439 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'questionDao'
2014-01-21 12:19:15,440 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'propositionDao'
2014-01-21 12:19:15,440 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'propositionDao'
2014-01-21 12:19:15,440 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'propositionDao' to allow for resolving potential circular references
2014-01-21 12:19:15,441 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'sessionFactory'
2014-01-21 12:19:15,442 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'propositionDao'
2014-01-21 12:19:15,442 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'reponseDao'
2014-01-21 12:19:15,442 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'reponseDao'
2014-01-21 12:19:15,442 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'reponseDao' to allow for resolving potential circular references
2014-01-21 12:19:15,443 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'sessionFactory'
2014-01-21 12:19:15,444 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'reponseDao'
2014-01-21 12:19:15,445 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:858) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@14e1b74]
2014-01-21 12:19:15,445 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'lifecycleProcessor'
2014-01-21 12:19:15,447 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2014-01-21 12:19:15,447 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2014-01-21 12:19:15,447 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2014-01-21 12:19:15,447 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'adminDao'
2014-01-21 12:19:15,447 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'candidatDao'
2014-01-21 12:19:15,447 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'testDao'
2014-01-21 12:19:15,447 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'passageDao'
2014-01-21 12:19:15,447 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'jointureDao'
2014-01-21 12:19:15,448 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'rubriqueDao'
2014-01-21 12:19:15,448 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'questionDao'
2014-01-21 12:19:15,448 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'propositionDao'
2014-01-21 12:19:15,448 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'reponseDao'
2014-01-21 12:19:15,476 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499554
2014-01-21 12:19:15,477 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:15,477 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:15,477 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:15,490 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:15,490 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:15,493 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:15,494 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:15,495 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:15,495 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:15,501 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,503 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.REPONSEID as REPONSEID8_0_, this_.REPONSETEXTE as REPONSET2_8_0_, this_.REPONSEDUREE as REPONSED3_8_0_, this_.REPONSEMESSAGE as REPONSEM4_8_0_, this_.PASSAGEID as PASSAGEID8_0_, this_.QUESTIONID as QUESTIONID8_0_ from reponse this_
2014-01-21 12:19:15,515 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:15,517 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#1]
2014-01-21 12:19:15,524 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#2]
2014-01-21 12:19:15,524 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#3]
2014-01-21 12:19:15,524 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#4]
2014-01-21 12:19:15,524 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#5]
2014-01-21 12:19:15,524 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#6]
2014-01-21 12:19:15,525 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#7]
2014-01-21 12:19:15,525 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#8]
2014-01-21 12:19:15,525 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#9]
2014-01-21 12:19:15,525 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#10]
2014-01-21 12:19:15,525 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#11]
2014-01-21 12:19:15,525 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#12]
2014-01-21 12:19:15,525 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#13]
2014-01-21 12:19:15,526 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#14]
2014-01-21 12:19:15,526 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#15]
2014-01-21 12:19:15,526 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#16]
2014-01-21 12:19:15,526 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#17]
2014-01-21 12:19:15,527 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#18]
2014-01-21 12:19:15,527 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#19]
2014-01-21 12:19:15,527 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#20]
2014-01-21 12:19:15,527 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#21]
2014-01-21 12:19:15,527 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:15,527 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,528 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#1]
2014-01-21 12:19:15,531 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#1]
2014-01-21 12:19:15,531 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#2]
2014-01-21 12:19:15,532 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#2]
2014-01-21 12:19:15,532 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#3]
2014-01-21 12:19:15,532 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#3]
2014-01-21 12:19:15,532 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#4]
2014-01-21 12:19:15,532 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#4]
2014-01-21 12:19:15,532 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#5]
2014-01-21 12:19:15,532 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#5]
2014-01-21 12:19:15,532 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#6]
2014-01-21 12:19:15,533 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#6]
2014-01-21 12:19:15,533 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#7]
2014-01-21 12:19:15,533 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#7]
2014-01-21 12:19:15,533 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#8]
2014-01-21 12:19:15,533 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#8]
2014-01-21 12:19:15,533 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#9]
2014-01-21 12:19:15,533 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#9]
2014-01-21 12:19:15,533 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#10]
2014-01-21 12:19:15,533 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#10]
2014-01-21 12:19:15,534 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#11]
2014-01-21 12:19:15,534 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#11]
2014-01-21 12:19:15,534 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#12]
2014-01-21 12:19:15,534 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#12]
2014-01-21 12:19:15,534 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#13]
2014-01-21 12:19:15,534 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#13]
2014-01-21 12:19:15,534 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#14]
2014-01-21 12:19:15,534 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#14]
2014-01-21 12:19:15,534 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#15]
2014-01-21 12:19:15,535 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#15]
2014-01-21 12:19:15,535 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#16]
2014-01-21 12:19:15,536 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#16]
2014-01-21 12:19:15,536 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#17]
2014-01-21 12:19:15,536 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#17]
2014-01-21 12:19:15,536 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#18]
2014-01-21 12:19:15,536 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#18]
2014-01-21 12:19:15,536 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#19]
2014-01-21 12:19:15,536 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#19]
2014-01-21 12:19:15,536 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#20]
2014-01-21 12:19:15,537 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#20]
2014-01-21 12:19:15,537 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#21]
2014-01-21 12:19:15,537 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#21]
2014-01-21 12:19:15,537 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:15,537 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:15,537 [main] INFO  org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) - closing
2014-01-21 12:19:15,538 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499555
2014-01-21 12:19:15,538 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:15,538 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:15,538 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:15,550 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:15,550 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:15,550 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:15,551 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:15,551 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:15,551 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:15,551 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,552 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.CANDIDATID as CANDIDATID2_0_, this_.CANDIDAT_CIVILITE as CANDIDAT2_2_0_, this_.CANDIDAT_NOM as CANDIDAT3_2_0_, this_.CANDIDAT_PRENOM as CANDIDAT4_2_0_, this_.CANDIDAT_MAIL as CANDIDAT5_2_0_, this_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_0_ from candidat this_
2014-01-21 12:19:15,552 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:15,553 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#1]
2014-01-21 12:19:15,558 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#2]
2014-01-21 12:19:15,558 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#3]
2014-01-21 12:19:15,558 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#4]
2014-01-21 12:19:15,558 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:15,558 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,559 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Candidat#1]
2014-01-21 12:19:15,563 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Candidat#1]
2014-01-21 12:19:15,563 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Candidat#2]
2014-01-21 12:19:15,563 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Candidat#2]
2014-01-21 12:19:15,564 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Candidat#3]
2014-01-21 12:19:15,564 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Candidat#3]
2014-01-21 12:19:15,564 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Candidat#4]
2014-01-21 12:19:15,564 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Candidat#4]
2014-01-21 12:19:15,564 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:15,564 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:15,564 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499555
2014-01-21 12:19:15,564 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:15,564 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:15,564 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:15,575 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:15,575 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:15,578 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,578 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.CANDIDATID as CANDIDATID2_0_, this_.CANDIDAT_CIVILITE as CANDIDAT2_2_0_, this_.CANDIDAT_NOM as CANDIDAT3_2_0_, this_.CANDIDAT_PRENOM as CANDIDAT4_2_0_, this_.CANDIDAT_MAIL as CANDIDAT5_2_0_, this_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_0_ from candidat this_ where this_.CANDIDATID=?
2014-01-21 12:19:15,580 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:15,580 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#1]
2014-01-21 12:19:15,581 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:15,581 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,581 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Candidat#1]
2014-01-21 12:19:15,581 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Candidat#1]
2014-01-21 12:19:15,581 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:15,585 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2158) - loading collection: [jpa.Candidat.passageCollection#1]
2014-01-21 12:19:15,585 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,586 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select passagecol0_.CANDIDATID as CANDIDATID2_1_, passagecol0_.PASSAGEID as PASSAGEID1_, passagecol0_.PASSAGEID as PASSAGEID5_0_, passagecol0_.PASSAGE_ETAT as PASSAGE2_5_0_, passagecol0_.PASSAGE_DATE as PASSAGE3_5_0_, passagecol0_.PASSAGEDEBUT_VAL as PASSAGED4_5_0_, passagecol0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_0_, passagecol0_.CANDIDATID as CANDIDATID5_0_ from passage passagecol0_ where passagecol0_.CANDIDATID=?
2014-01-21 12:19:15,587 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:15,588 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1203) - result set contains (possibly empty) collection: [jpa.Candidat.passageCollection#1]
2014-01-21 12:19:15,589 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Passage#1]
2014-01-21 12:19:15,590 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Candidat.passageCollection#1]
2014-01-21 12:19:15,590 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:15,590 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,591 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Passage#1]
2014-01-21 12:19:15,591 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Passage#1]
2014-01-21 12:19:15,591 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: jpa.Candidat.passageCollection
2014-01-21 12:19:15,591 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:275) - collection fully initialized: [jpa.Candidat.passageCollection#1]
2014-01-21 12:19:15,591 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:241) - 1 collections initialized for role: jpa.Candidat.passageCollection
2014-01-21 12:19:15,591 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:15,591 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2182) - done loading collection
2014-01-21 12:19:15,592 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2158) - loading collection: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:15,592 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,592 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select reponsecol0_.PASSAGEID as PASSAGEID5_1_, reponsecol0_.REPONSEID as REPONSEID1_, reponsecol0_.REPONSEID as REPONSEID8_0_, reponsecol0_.REPONSETEXTE as REPONSET2_8_0_, reponsecol0_.REPONSEDUREE as REPONSED3_8_0_, reponsecol0_.REPONSEMESSAGE as REPONSEM4_8_0_, reponsecol0_.PASSAGEID as PASSAGEID8_0_, reponsecol0_.QUESTIONID as QUESTIONID8_0_ from reponse reponsecol0_ where reponsecol0_.PASSAGEID=?
2014-01-21 12:19:15,594 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:15,594 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1203) - result set contains (possibly empty) collection: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:15,594 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#1]
2014-01-21 12:19:15,594 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:15,594 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#2]
2014-01-21 12:19:15,595 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:15,595 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#3]
2014-01-21 12:19:15,595 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:15,595 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#4]
2014-01-21 12:19:15,595 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:15,595 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#5]
2014-01-21 12:19:15,596 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:15,596 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#6]
2014-01-21 12:19:15,596 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:15,596 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#7]
2014-01-21 12:19:15,596 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:15,596 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#8]
2014-01-21 12:19:15,596 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:15,597 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#9]
2014-01-21 12:19:15,597 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:15,597 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#10]
2014-01-21 12:19:15,597 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:15,597 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#11]
2014-01-21 12:19:15,597 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:15,598 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#12]
2014-01-21 12:19:15,598 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:15,598 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#13]
2014-01-21 12:19:15,598 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:15,598 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#14]
2014-01-21 12:19:15,598 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:15,599 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#15]
2014-01-21 12:19:15,599 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:15,599 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#16]
2014-01-21 12:19:15,599 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:15,599 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#17]
2014-01-21 12:19:15,599 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:15,600 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#18]
2014-01-21 12:19:15,600 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:15,600 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#19]
2014-01-21 12:19:15,600 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:15,600 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#20]
2014-01-21 12:19:15,600 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:15,600 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#21]
2014-01-21 12:19:15,601 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:15,601 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:15,601 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,601 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#1]
2014-01-21 12:19:15,601 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#1]
2014-01-21 12:19:15,601 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#2]
2014-01-21 12:19:15,601 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#2]
2014-01-21 12:19:15,602 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#3]
2014-01-21 12:19:15,602 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#3]
2014-01-21 12:19:15,602 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#4]
2014-01-21 12:19:15,602 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#4]
2014-01-21 12:19:15,602 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#5]
2014-01-21 12:19:15,602 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#5]
2014-01-21 12:19:15,602 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#6]
2014-01-21 12:19:15,603 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#6]
2014-01-21 12:19:15,603 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#7]
2014-01-21 12:19:15,603 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#7]
2014-01-21 12:19:15,603 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#8]
2014-01-21 12:19:15,603 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#8]
2014-01-21 12:19:15,603 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#9]
2014-01-21 12:19:15,603 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#9]
2014-01-21 12:19:15,603 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#10]
2014-01-21 12:19:15,604 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#10]
2014-01-21 12:19:15,604 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#11]
2014-01-21 12:19:15,604 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#11]
2014-01-21 12:19:15,604 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#12]
2014-01-21 12:19:15,604 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#12]
2014-01-21 12:19:15,604 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#13]
2014-01-21 12:19:15,604 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#13]
2014-01-21 12:19:15,604 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#14]
2014-01-21 12:19:15,605 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#14]
2014-01-21 12:19:15,605 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#15]
2014-01-21 12:19:15,605 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#15]
2014-01-21 12:19:15,605 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#16]
2014-01-21 12:19:15,605 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#16]
2014-01-21 12:19:15,605 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#17]
2014-01-21 12:19:15,605 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#17]
2014-01-21 12:19:15,606 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#18]
2014-01-21 12:19:15,606 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#18]
2014-01-21 12:19:15,606 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#19]
2014-01-21 12:19:15,606 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#19]
2014-01-21 12:19:15,606 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#20]
2014-01-21 12:19:15,606 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#20]
2014-01-21 12:19:15,606 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#21]
2014-01-21 12:19:15,606 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#21]
2014-01-21 12:19:15,607 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: jpa.Passage.reponseCollection
2014-01-21 12:19:15,607 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:275) - collection fully initialized: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:15,607 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:241) - 1 collections initialized for role: jpa.Passage.reponseCollection
2014-01-21 12:19:15,607 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:15,607 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2182) - done loading collection
2014-01-21 12:19:15,610 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2158) - loading collection: [jpa.Passage.jointureCollection#1]
2014-01-21 12:19:15,610 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,610 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select jointureco0_.PASSAGEID as PASSAGEID5_1_, jointureco0_.JOINTUREID as JOINTUREID1_, jointureco0_.JOINTUREID as JOINTUREID10_0_, jointureco0_.CHAMPVIDE as CHAMPVIDE10_0_, jointureco0_.TESTID as TESTID10_0_, jointureco0_.PASSAGEID as PASSAGEID10_0_ from jointure jointureco0_ where jointureco0_.PASSAGEID=?
2014-01-21 12:19:15,612 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:15,612 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1203) - result set contains (possibly empty) collection: [jpa.Passage.jointureCollection#1]
2014-01-21 12:19:15,612 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Jointure#1]
2014-01-21 12:19:15,612 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Passage.jointureCollection#1]
2014-01-21 12:19:15,612 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:15,612 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,613 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Jointure#1]
2014-01-21 12:19:15,613 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Jointure#1]
2014-01-21 12:19:15,613 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: jpa.Passage.jointureCollection
2014-01-21 12:19:15,613 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:275) - collection fully initialized: [jpa.Passage.jointureCollection#1]
2014-01-21 12:19:15,613 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:241) - 1 collections initialized for role: jpa.Passage.jointureCollection
2014-01-21 12:19:15,613 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:15,613 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2182) - done loading collection
2014-01-21 12:19:15,614 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:15,614 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:15,615 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:15,617 [main] DEBUG org.hibernate.engine.Collections.processDereferencedCollection(Collections.java:75) - Collection dereferenced: [jpa.Candidat.passageCollection#1]
2014-01-21 12:19:15,617 [main] DEBUG org.hibernate.engine.Collections.processDereferencedCollection(Collections.java:75) - Collection dereferenced: [jpa.Passage.reponseHistoCollection#1]
2014-01-21 12:19:15,617 [main] DEBUG org.hibernate.engine.Collections.processDereferencedCollection(Collections.java:75) - Collection dereferenced: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:15,617 [main] DEBUG org.hibernate.engine.Collections.processDereferencedCollection(Collections.java:75) - Collection dereferenced: [jpa.Passage.jointureCollection#1]
2014-01-21 12:19:15,619 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 24 deletions to 24 objects
2014-01-21 12:19:15,619 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 4 removals to 4 collections
2014-01-21 12:19:15,619 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:15,619 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=grosLard@hotmail.fr, passageCollection=[jpa.Passage#1], candidatDateNaissance=1985-01-01, candidatPrenom=Samuel, candidatNom=Faber, candidatCivilite=Mr, candidatid=1}
2014-01-21 12:19:15,620 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=19, reponsemessage=0, reponsetexte=Répondue, reponseduree=0, questionid=jpa.Question#28, passageid=jpa.Passage#1}
2014-01-21 12:19:15,620 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=18, reponsemessage=0, reponsetexte=Répondue, reponseduree=0, questionid=jpa.Question#29, passageid=jpa.Passage#1}
2014-01-21 12:19:15,620 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=17, reponsemessage=0, reponsetexte=Répondue, reponseduree=0, questionid=jpa.Question#26, passageid=jpa.Passage#1}
2014-01-21 12:19:15,620 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=16, reponsemessage=0, reponsetexte=Répondue, reponseduree=0, questionid=jpa.Question#27, passageid=jpa.Passage#1}
2014-01-21 12:19:15,622 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=21, reponsemessage=0, reponsetexte=Répondue, reponseduree=0, questionid=jpa.Question#30, passageid=jpa.Passage#1}
2014-01-21 12:19:15,622 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=20, reponsemessage=0, reponsetexte=Répondue, reponseduree=0, questionid=jpa.Question#31, passageid=jpa.Passage#1}
2014-01-21 12:19:15,622 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=8, reponsemessage=0, reponsetexte=Répondue, reponseduree=0, questionid=jpa.Question#16, passageid=jpa.Passage#1}
2014-01-21 12:19:15,622 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Passage{reponseCollection=[jpa.Reponse#1, jpa.Reponse#2, jpa.Reponse#3, jpa.Reponse#4, jpa.Reponse#5, jpa.Reponse#6, jpa.Reponse#7, jpa.Reponse#8, jpa.Reponse#9, jpa.Reponse#10, jpa.Reponse#11, jpa.Reponse#12, jpa.Reponse#13, jpa.Reponse#14, jpa.Reponse#15, jpa.Reponse#17, jpa.Reponse#16, jpa.Reponse#19, jpa.Reponse#18, jpa.Reponse#21, jpa.Reponse#20], passageDate=2014-01-21, passagedebutVal=2014-01-21 12:14:27.0, passageEtat=0, passagefinVal=2014-03-11 12:14:27.0, jointureCollection=[jpa.Jointure#1], reponseHistoCollection=<uninitialized>, candidatid=jpa.Candidat#1, passageid=1}
2014-01-21 12:19:15,623 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=9, reponsemessage=0, reponsetexte=Répondue, reponseduree=0, questionid=jpa.Question#19, passageid=jpa.Passage#1}
2014-01-21 12:19:15,623 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=10, reponsemessage=0, reponsetexte=Répondue, reponseduree=0, questionid=jpa.Question#18, passageid=jpa.Passage#1}
2014-01-21 12:19:15,623 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=11, reponsemessage=0, reponsetexte=Répondue, reponseduree=0, questionid=jpa.Question#21, passageid=jpa.Passage#1}
2014-01-21 12:19:15,623 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=12, reponsemessage=0, reponsetexte=Répondue, reponseduree=0, questionid=jpa.Question#20, passageid=jpa.Passage#1}
2014-01-21 12:19:15,623 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=13, reponsemessage=0, reponsetexte=Répondue, reponseduree=0, questionid=jpa.Question#23, passageid=jpa.Passage#1}
2014-01-21 12:19:15,623 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=14, reponsemessage=0, reponsetexte=Répondue, reponseduree=0, questionid=jpa.Question#25, passageid=jpa.Passage#1}
2014-01-21 12:19:15,623 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=15, reponsemessage=0, reponsetexte=Répondue, reponseduree=0, questionid=jpa.Question#24, passageid=jpa.Passage#1}
2014-01-21 12:19:15,623 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=1, reponsemessage=0, reponsetexte=Répondue, reponseduree=0, questionid=jpa.Question#32, passageid=jpa.Passage#1}
2014-01-21 12:19:15,624 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=2, reponsemessage=0, reponsetexte=Répondue, reponseduree=0, questionid=jpa.Question#33, passageid=jpa.Passage#1}
2014-01-21 12:19:15,624 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=1, champvide=null, testid=jpa.Test#6, passageid=jpa.Passage#1}
2014-01-21 12:19:15,624 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=3, reponsemessage=0, reponsetexte=Répondue, reponseduree=0, questionid=jpa.Question#12, passageid=jpa.Passage#1}
2014-01-21 12:19:15,624 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=4, reponsemessage=0, reponsetexte=Répondue, reponseduree=0, questionid=jpa.Question#13, passageid=jpa.Passage#1}
2014-01-21 12:19:15,625 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:110) - more......
2014-01-21 12:19:15,628 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,628 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from reponse where REPONSEID=?
2014-01-21 12:19:15,629 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
2014-01-21 12:19:15,629 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from reponse where REPONSEID=?
2014-01-21 12:19:15,629 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
2014-01-21 12:19:15,629 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from reponse where REPONSEID=?
2014-01-21 12:19:15,629 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
2014-01-21 12:19:15,629 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from reponse where REPONSEID=?
2014-01-21 12:19:15,629 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
2014-01-21 12:19:15,629 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from reponse where REPONSEID=?
2014-01-21 12:19:15,630 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
2014-01-21 12:19:15,630 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from reponse where REPONSEID=?
2014-01-21 12:19:15,630 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
2014-01-21 12:19:15,630 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from reponse where REPONSEID=?
2014-01-21 12:19:15,630 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
2014-01-21 12:19:15,630 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from reponse where REPONSEID=?
2014-01-21 12:19:15,630 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
2014-01-21 12:19:15,630 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from reponse where REPONSEID=?
2014-01-21 12:19:15,630 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
2014-01-21 12:19:15,630 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from reponse where REPONSEID=?
2014-01-21 12:19:15,630 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
2014-01-21 12:19:15,631 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from reponse where REPONSEID=?
2014-01-21 12:19:15,631 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
2014-01-21 12:19:15,631 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from reponse where REPONSEID=?
2014-01-21 12:19:15,631 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
2014-01-21 12:19:15,631 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from reponse where REPONSEID=?
2014-01-21 12:19:15,631 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
2014-01-21 12:19:15,631 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from reponse where REPONSEID=?
2014-01-21 12:19:15,631 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
2014-01-21 12:19:15,631 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from reponse where REPONSEID=?
2014-01-21 12:19:15,631 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 15
2014-01-21 12:19:15,639 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
2014-01-21 12:19:15,639 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from reponse where REPONSEID=?
2014-01-21 12:19:15,639 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
2014-01-21 12:19:15,640 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from reponse where REPONSEID=?
2014-01-21 12:19:15,640 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
2014-01-21 12:19:15,640 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from reponse where REPONSEID=?
2014-01-21 12:19:15,640 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
2014-01-21 12:19:15,640 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from reponse where REPONSEID=?
2014-01-21 12:19:15,640 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
2014-01-21 12:19:15,640 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from reponse where REPONSEID=?
2014-01-21 12:19:15,640 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
2014-01-21 12:19:15,640 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from reponse where REPONSEID=?
2014-01-21 12:19:15,640 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 6
2014-01-21 12:19:15,645 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,645 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,645 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from jointure where JOINTUREID=?
2014-01-21 12:19:15,645 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:15,646 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,646 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,646 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from passage where PASSAGEID=?
2014-01-21 12:19:15,646 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:15,647 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,647 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,647 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from candidat where CANDIDATID=?
2014-01-21 12:19:15,647 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:15,648 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,650 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:15,651 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:15,651 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:15,651 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499556
2014-01-21 12:19:15,651 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:15,651 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:15,651 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:15,665 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:15,665 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:15,666 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,666 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.CANDIDATID as CANDIDATID2_0_, this_.CANDIDAT_CIVILITE as CANDIDAT2_2_0_, this_.CANDIDAT_NOM as CANDIDAT3_2_0_, this_.CANDIDAT_PRENOM as CANDIDAT4_2_0_, this_.CANDIDAT_MAIL as CANDIDAT5_2_0_, this_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_0_ from candidat this_ where this_.CANDIDATID=?
2014-01-21 12:19:15,666 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:15,667 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#2]
2014-01-21 12:19:15,667 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:15,667 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,667 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Candidat#2]
2014-01-21 12:19:15,667 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Candidat#2]
2014-01-21 12:19:15,667 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:15,667 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2158) - loading collection: [jpa.Candidat.passageCollection#2]
2014-01-21 12:19:15,668 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,668 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select passagecol0_.CANDIDATID as CANDIDATID2_1_, passagecol0_.PASSAGEID as PASSAGEID1_, passagecol0_.PASSAGEID as PASSAGEID5_0_, passagecol0_.PASSAGE_ETAT as PASSAGE2_5_0_, passagecol0_.PASSAGE_DATE as PASSAGE3_5_0_, passagecol0_.PASSAGEDEBUT_VAL as PASSAGED4_5_0_, passagecol0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_0_, passagecol0_.CANDIDATID as CANDIDATID5_0_ from passage passagecol0_ where passagecol0_.CANDIDATID=?
2014-01-21 12:19:15,668 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:15,669 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1203) - result set contains (possibly empty) collection: [jpa.Candidat.passageCollection#2]
2014-01-21 12:19:15,669 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:15,669 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,669 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: jpa.Candidat.passageCollection
2014-01-21 12:19:15,669 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:275) - collection fully initialized: [jpa.Candidat.passageCollection#2]
2014-01-21 12:19:15,669 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:241) - 1 collections initialized for role: jpa.Candidat.passageCollection
2014-01-21 12:19:15,669 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:15,669 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2182) - done loading collection
2014-01-21 12:19:15,669 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:15,669 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:15,670 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:15,670 [main] DEBUG org.hibernate.engine.Collections.processDereferencedCollection(Collections.java:75) - Collection dereferenced: [jpa.Candidat.passageCollection#2]
2014-01-21 12:19:15,670 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-21 12:19:15,670 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
2014-01-21 12:19:15,670 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:15,670 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=nazbrock.grave@hotmail.fr, passageCollection=[], candidatDateNaissance=1983-03-10, candidatPrenom=Romain, candidatNom=Crusson, candidatCivilite=Mr, candidatid=2}
2014-01-21 12:19:15,670 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,670 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from candidat where CANDIDATID=?
2014-01-21 12:19:15,670 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:15,671 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,672 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:15,672 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:15,672 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:15,672 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499556
2014-01-21 12:19:15,673 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:15,673 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:15,673 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:15,682 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:15,682 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:15,683 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,683 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.CANDIDATID as CANDIDATID2_0_, this_.CANDIDAT_CIVILITE as CANDIDAT2_2_0_, this_.CANDIDAT_NOM as CANDIDAT3_2_0_, this_.CANDIDAT_PRENOM as CANDIDAT4_2_0_, this_.CANDIDAT_MAIL as CANDIDAT5_2_0_, this_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_0_ from candidat this_ where this_.CANDIDATID=?
2014-01-21 12:19:15,684 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:15,684 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#3]
2014-01-21 12:19:15,684 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:15,684 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,684 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Candidat#3]
2014-01-21 12:19:15,684 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Candidat#3]
2014-01-21 12:19:15,684 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:15,685 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2158) - loading collection: [jpa.Candidat.passageCollection#3]
2014-01-21 12:19:15,685 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,685 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select passagecol0_.CANDIDATID as CANDIDATID2_1_, passagecol0_.PASSAGEID as PASSAGEID1_, passagecol0_.PASSAGEID as PASSAGEID5_0_, passagecol0_.PASSAGE_ETAT as PASSAGE2_5_0_, passagecol0_.PASSAGE_DATE as PASSAGE3_5_0_, passagecol0_.PASSAGEDEBUT_VAL as PASSAGED4_5_0_, passagecol0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_0_, passagecol0_.CANDIDATID as CANDIDATID5_0_ from passage passagecol0_ where passagecol0_.CANDIDATID=?
2014-01-21 12:19:15,686 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:15,686 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1203) - result set contains (possibly empty) collection: [jpa.Candidat.passageCollection#3]
2014-01-21 12:19:15,686 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:15,686 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,686 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: jpa.Candidat.passageCollection
2014-01-21 12:19:15,686 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:275) - collection fully initialized: [jpa.Candidat.passageCollection#3]
2014-01-21 12:19:15,686 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:241) - 1 collections initialized for role: jpa.Candidat.passageCollection
2014-01-21 12:19:15,686 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:15,686 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2182) - done loading collection
2014-01-21 12:19:15,686 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:15,687 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:15,687 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:15,687 [main] DEBUG org.hibernate.engine.Collections.processDereferencedCollection(Collections.java:75) - Collection dereferenced: [jpa.Candidat.passageCollection#3]
2014-01-21 12:19:15,687 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-21 12:19:15,687 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
2014-01-21 12:19:15,687 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:15,687 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=beaugosse.laclasse@hotmail.fr, passageCollection=[], candidatDateNaissance=1980-10-21, candidatPrenom=loïc, candidatNom=Crusson, candidatCivilite=Mr, candidatid=3}
2014-01-21 12:19:15,687 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,687 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from candidat where CANDIDATID=?
2014-01-21 12:19:15,688 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:15,688 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,689 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:15,690 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:15,690 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:15,690 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499556
2014-01-21 12:19:15,690 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:15,691 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:15,691 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:15,700 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:15,700 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:15,701 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,701 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.CANDIDATID as CANDIDATID2_0_, this_.CANDIDAT_CIVILITE as CANDIDAT2_2_0_, this_.CANDIDAT_NOM as CANDIDAT3_2_0_, this_.CANDIDAT_PRENOM as CANDIDAT4_2_0_, this_.CANDIDAT_MAIL as CANDIDAT5_2_0_, this_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_0_ from candidat this_ where this_.CANDIDATID=?
2014-01-21 12:19:15,702 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:15,702 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#4]
2014-01-21 12:19:15,702 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:15,702 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,702 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Candidat#4]
2014-01-21 12:19:15,702 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Candidat#4]
2014-01-21 12:19:15,702 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:15,703 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2158) - loading collection: [jpa.Candidat.passageCollection#4]
2014-01-21 12:19:15,703 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,703 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select passagecol0_.CANDIDATID as CANDIDATID2_1_, passagecol0_.PASSAGEID as PASSAGEID1_, passagecol0_.PASSAGEID as PASSAGEID5_0_, passagecol0_.PASSAGE_ETAT as PASSAGE2_5_0_, passagecol0_.PASSAGE_DATE as PASSAGE3_5_0_, passagecol0_.PASSAGEDEBUT_VAL as PASSAGED4_5_0_, passagecol0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_0_, passagecol0_.CANDIDATID as CANDIDATID5_0_ from passage passagecol0_ where passagecol0_.CANDIDATID=?
2014-01-21 12:19:15,704 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:15,704 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1203) - result set contains (possibly empty) collection: [jpa.Candidat.passageCollection#4]
2014-01-21 12:19:15,704 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:15,704 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,704 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: jpa.Candidat.passageCollection
2014-01-21 12:19:15,704 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:275) - collection fully initialized: [jpa.Candidat.passageCollection#4]
2014-01-21 12:19:15,704 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:241) - 1 collections initialized for role: jpa.Candidat.passageCollection
2014-01-21 12:19:15,704 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:15,705 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2182) - done loading collection
2014-01-21 12:19:15,705 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:15,705 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:15,705 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:15,705 [main] DEBUG org.hibernate.engine.Collections.processDereferencedCollection(Collections.java:75) - Collection dereferenced: [jpa.Candidat.passageCollection#4]
2014-01-21 12:19:15,705 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-21 12:19:15,705 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
2014-01-21 12:19:15,705 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:15,705 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=duped.freeMan@hotmail.fr, passageCollection=[], candidatDateNaissance=1983-06-07, candidatPrenom=Hervé, candidatNom=Halgand, candidatCivilite=Mr, candidatid=4}
2014-01-21 12:19:15,705 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,705 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from candidat where CANDIDATID=?
2014-01-21 12:19:15,706 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:15,706 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,707 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:15,708 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:15,708 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:15,708 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499557
2014-01-21 12:19:15,708 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:15,708 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:15,708 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:15,717 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:15,717 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:15,717 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:15,718 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:15,718 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:15,718 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:15,719 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,719 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ADMINID as ADMINID1_0_, this_.ADMINLOGIN as ADMINLOGIN1_0_, this_.ADMINPASSWORD as ADMINPAS3_1_0_ from admin this_
2014-01-21 12:19:15,720 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:15,720 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Admin#1]
2014-01-21 12:19:15,720 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Admin#2]
2014-01-21 12:19:15,720 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:15,720 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,720 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Admin#1]
2014-01-21 12:19:15,720 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Admin#1]
2014-01-21 12:19:15,720 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Admin#2]
2014-01-21 12:19:15,720 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Admin#2]
2014-01-21 12:19:15,720 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:15,721 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:15,721 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499557
2014-01-21 12:19:15,721 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:15,721 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:15,721 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:15,729 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:15,729 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:15,733 [main] DEBUG org.hibernate.id.IncrementGenerator.initializePreviousValueHolder(IncrementGenerator.java:123) - fetching initial value: select max(CANDIDATID) from candidat
2014-01-21 12:19:15,733 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,733 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select max(CANDIDATID) from candidat
2014-01-21 12:19:15,734 [main] DEBUG org.hibernate.id.IncrementGenerator.initializePreviousValueHolder(IncrementGenerator.java:136) - first free id: 1
2014-01-21 12:19:15,734 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,734 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:19:15,735 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:15,735 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:15,735 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:15,735 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:15,735 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:15,736 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:15,736 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=grosLard@hotmail.fr, passageCollection=null, candidatDateNaissance=Tue Jan 01 00:00:00 GMT-12:00 1985, candidatPrenom=Samuel, candidatNom=Faber, candidatCivilite=Mr, candidatid=1}
2014-01-21 12:19:15,745 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,745 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into candidat (CANDIDAT_CIVILITE, CANDIDAT_NOM, CANDIDAT_PRENOM, CANDIDAT_MAIL, CANDIDAT_DATE_NAISSANCE, CANDIDATID) values (?, ?, ?, ?, ?, ?)
2014-01-21 12:19:15,747 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:15,748 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,749 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:15,750 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:15,750 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:15,750 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:15,750 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:15,750 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:15,750 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:15,750 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:15,750 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=grosLard@hotmail.fr, passageCollection=null, candidatDateNaissance=Tue Jan 01 00:00:00 GMT-12:00 1985, candidatPrenom=Samuel, candidatNom=Faber, candidatCivilite=Mr, candidatid=1}
2014-01-21 12:19:15,782 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Candidat where candidatid = 1
2014-01-21 12:19:15,791 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Candidat'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'candidatid'
          \-[NUM_INT] Node: '1'

2014-01-21 12:19:15,791 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:15,813 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:19:15,823 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Candidat (no alias) -> candidat0_
2014-01-21 12:19:15,825 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:19:15,825 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : candidatid -> org.hibernate.type.IntegerType@277469
2014-01-21 12:19:15,826 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.candidatid -> candidat0_.CANDIDATID
2014-01-21 12:19:15,826 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:19:15,826 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} candidat candidat0_ ) ( where ( = ( candidat0_.CANDIDATID {synthetic-alias} candidatid ) 1 ) ) )
2014-01-21 12:19:15,829 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:19:15,832 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [candidat candidat0_]
2014-01-21 12:19:15,832 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:19:15,833 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (candidat)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'candidat0_.CANDIDATID as CANDIDATID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=candidat,tableAlias=candidat0_,origin=null,columns={,className=jpa.Candidat}}}
    |  \-[SQL_TOKEN] SqlFragment: 'candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[candidat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'candidat candidat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=candidat,tableAlias=candidat0_,origin=null,columns={,className=jpa.Candidat}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'candidat0_.CANDIDATID' {propertyName=candidatid,dereferenceType=ALL,propertyPath=candidatid,path={synthetic-alias}.candidatid,tableAlias=candidat0_,className=jpa.Candidat,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'candidatid' {originalText=candidatid}
          \-[NUM_INT] LiteralNode: '1'

2014-01-21 12:19:15,833 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:15,843 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Candidat where candidatid = 1
2014-01-21 12:19:15,843 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select candidat0_.CANDIDATID as CANDIDATID2_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_ from candidat candidat0_ where candidat0_.CANDIDATID=1
2014-01-21 12:19:15,843 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:15,847 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,848 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select candidat0_.CANDIDATID as CANDIDATID2_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_ from candidat candidat0_ where candidat0_.CANDIDATID=1
2014-01-21 12:19:15,849 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:15,849 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#1]
2014-01-21 12:19:15,850 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:15,850 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,850 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:15,850 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:15,851 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499558
2014-01-21 12:19:15,851 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:15,851 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:15,851 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:15,861 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:15,861 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:15,861 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 2, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:19:15,862 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:15,862 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:15,862 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:15,862 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:15,862 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:15,862 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:15,862 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=nazbrock.grave@hotmail.fr, passageCollection=null, candidatDateNaissance=Thu Mar 10 00:00:00 GMT-12:00 1983, candidatPrenom=Romain, candidatNom=Crusson, candidatCivilite=Mr, candidatid=2}
2014-01-21 12:19:15,862 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,863 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into candidat (CANDIDAT_CIVILITE, CANDIDAT_NOM, CANDIDAT_PRENOM, CANDIDAT_MAIL, CANDIDAT_DATE_NAISSANCE, CANDIDATID) values (?, ?, ?, ?, ?, ?)
2014-01-21 12:19:15,863 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:15,864 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,866 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:15,867 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:15,867 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:15,867 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:15,867 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:15,867 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:15,867 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:15,867 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:15,868 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=nazbrock.grave@hotmail.fr, passageCollection=null, candidatDateNaissance=Thu Mar 10 00:00:00 GMT-12:00 1983, candidatPrenom=Romain, candidatNom=Crusson, candidatCivilite=Mr, candidatid=2}
2014-01-21 12:19:15,868 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Candidat where candidatid = 2
2014-01-21 12:19:15,869 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Candidat'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'candidatid'
          \-[NUM_INT] Node: '2'

2014-01-21 12:19:15,869 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:15,870 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:19:15,870 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Candidat (no alias) -> candidat0_
2014-01-21 12:19:15,870 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:19:15,870 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : candidatid -> org.hibernate.type.IntegerType@277469
2014-01-21 12:19:15,870 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.candidatid -> candidat0_.CANDIDATID
2014-01-21 12:19:15,870 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:19:15,870 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} candidat candidat0_ ) ( where ( = ( candidat0_.CANDIDATID {synthetic-alias} candidatid ) 2 ) ) )
2014-01-21 12:19:15,870 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:19:15,871 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [candidat candidat0_]
2014-01-21 12:19:15,871 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:19:15,871 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (candidat)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'candidat0_.CANDIDATID as CANDIDATID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=candidat,tableAlias=candidat0_,origin=null,columns={,className=jpa.Candidat}}}
    |  \-[SQL_TOKEN] SqlFragment: 'candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[candidat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'candidat candidat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=candidat,tableAlias=candidat0_,origin=null,columns={,className=jpa.Candidat}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'candidat0_.CANDIDATID' {propertyName=candidatid,dereferenceType=ALL,propertyPath=candidatid,path={synthetic-alias}.candidatid,tableAlias=candidat0_,className=jpa.Candidat,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'candidatid' {originalText=candidatid}
          \-[NUM_INT] LiteralNode: '2'

2014-01-21 12:19:15,871 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:15,871 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Candidat where candidatid = 2
2014-01-21 12:19:15,871 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select candidat0_.CANDIDATID as CANDIDATID2_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_ from candidat candidat0_ where candidat0_.CANDIDATID=2
2014-01-21 12:19:15,871 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:15,872 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,872 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select candidat0_.CANDIDATID as CANDIDATID2_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_ from candidat candidat0_ where candidat0_.CANDIDATID=2
2014-01-21 12:19:15,873 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:15,873 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#2]
2014-01-21 12:19:15,873 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:15,873 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,873 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:15,873 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:15,873 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499558
2014-01-21 12:19:15,874 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:15,874 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:15,874 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:15,882 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:15,882 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:15,882 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 3, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:19:15,883 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:15,883 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:15,883 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:15,883 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:15,884 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:15,884 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:15,884 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=beaugosse.laclasse@hotmail.fr, passageCollection=null, candidatDateNaissance=Tue Oct 21 00:00:00 GMT-12:00 1980, candidatPrenom=loïc, candidatNom=Crusson, candidatCivilite=Mr, candidatid=3}
2014-01-21 12:19:15,884 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,884 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into candidat (CANDIDAT_CIVILITE, CANDIDAT_NOM, CANDIDAT_PRENOM, CANDIDAT_MAIL, CANDIDAT_DATE_NAISSANCE, CANDIDATID) values (?, ?, ?, ?, ?, ?)
2014-01-21 12:19:15,884 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:15,885 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,886 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:15,887 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:15,887 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:15,887 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:15,887 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:15,890 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:15,890 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:15,890 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:15,890 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=beaugosse.laclasse@hotmail.fr, passageCollection=null, candidatDateNaissance=Tue Oct 21 00:00:00 GMT-12:00 1980, candidatPrenom=loïc, candidatNom=Crusson, candidatCivilite=Mr, candidatid=3}
2014-01-21 12:19:15,890 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Candidat where candidatid = 3
2014-01-21 12:19:15,891 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Candidat'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'candidatid'
          \-[NUM_INT] Node: '3'

2014-01-21 12:19:15,892 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:15,892 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:19:15,892 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Candidat (no alias) -> candidat0_
2014-01-21 12:19:15,892 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:19:15,892 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : candidatid -> org.hibernate.type.IntegerType@277469
2014-01-21 12:19:15,892 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.candidatid -> candidat0_.CANDIDATID
2014-01-21 12:19:15,892 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:19:15,892 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} candidat candidat0_ ) ( where ( = ( candidat0_.CANDIDATID {synthetic-alias} candidatid ) 3 ) ) )
2014-01-21 12:19:15,892 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:19:15,893 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [candidat candidat0_]
2014-01-21 12:19:15,893 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:19:15,893 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (candidat)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'candidat0_.CANDIDATID as CANDIDATID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=candidat,tableAlias=candidat0_,origin=null,columns={,className=jpa.Candidat}}}
    |  \-[SQL_TOKEN] SqlFragment: 'candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[candidat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'candidat candidat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=candidat,tableAlias=candidat0_,origin=null,columns={,className=jpa.Candidat}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'candidat0_.CANDIDATID' {propertyName=candidatid,dereferenceType=ALL,propertyPath=candidatid,path={synthetic-alias}.candidatid,tableAlias=candidat0_,className=jpa.Candidat,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'candidatid' {originalText=candidatid}
          \-[NUM_INT] LiteralNode: '3'

2014-01-21 12:19:15,893 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:15,893 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Candidat where candidatid = 3
2014-01-21 12:19:15,893 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select candidat0_.CANDIDATID as CANDIDATID2_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_ from candidat candidat0_ where candidat0_.CANDIDATID=3
2014-01-21 12:19:15,893 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:15,894 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,894 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select candidat0_.CANDIDATID as CANDIDATID2_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_ from candidat candidat0_ where candidat0_.CANDIDATID=3
2014-01-21 12:19:15,895 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:15,895 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#3]
2014-01-21 12:19:15,895 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:15,895 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,895 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:15,895 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:15,895 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499558
2014-01-21 12:19:15,895 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:15,896 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:15,896 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:15,904 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:15,904 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:15,904 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 4, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:19:15,905 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:15,905 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:15,905 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:15,905 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:15,905 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:15,905 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:15,905 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=duped.freeMan@hotmail.fr, passageCollection=null, candidatDateNaissance=Tue Jun 07 00:00:00 GMT-12:00 1983, candidatPrenom=Hervé, candidatNom=Halgand, candidatCivilite=Mr, candidatid=4}
2014-01-21 12:19:15,905 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,906 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into candidat (CANDIDAT_CIVILITE, CANDIDAT_NOM, CANDIDAT_PRENOM, CANDIDAT_MAIL, CANDIDAT_DATE_NAISSANCE, CANDIDATID) values (?, ?, ?, ?, ?, ?)
2014-01-21 12:19:15,906 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:15,907 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,908 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:15,908 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:15,908 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:15,909 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:15,909 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:15,909 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:15,909 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:15,909 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:15,909 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=duped.freeMan@hotmail.fr, passageCollection=null, candidatDateNaissance=Tue Jun 07 00:00:00 GMT-12:00 1983, candidatPrenom=Hervé, candidatNom=Halgand, candidatCivilite=Mr, candidatid=4}
2014-01-21 12:19:15,909 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Candidat where candidatid = 4
2014-01-21 12:19:15,910 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Candidat'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'candidatid'
          \-[NUM_INT] Node: '4'

2014-01-21 12:19:15,910 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:15,910 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:19:15,910 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Candidat (no alias) -> candidat0_
2014-01-21 12:19:15,911 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:19:15,911 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : candidatid -> org.hibernate.type.IntegerType@277469
2014-01-21 12:19:15,911 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.candidatid -> candidat0_.CANDIDATID
2014-01-21 12:19:15,911 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:19:15,911 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} candidat candidat0_ ) ( where ( = ( candidat0_.CANDIDATID {synthetic-alias} candidatid ) 4 ) ) )
2014-01-21 12:19:15,912 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:19:15,912 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [candidat candidat0_]
2014-01-21 12:19:15,912 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:19:15,912 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (candidat)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'candidat0_.CANDIDATID as CANDIDATID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=candidat,tableAlias=candidat0_,origin=null,columns={,className=jpa.Candidat}}}
    |  \-[SQL_TOKEN] SqlFragment: 'candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[candidat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'candidat candidat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=candidat,tableAlias=candidat0_,origin=null,columns={,className=jpa.Candidat}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'candidat0_.CANDIDATID' {propertyName=candidatid,dereferenceType=ALL,propertyPath=candidatid,path={synthetic-alias}.candidatid,tableAlias=candidat0_,className=jpa.Candidat,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'candidatid' {originalText=candidatid}
          \-[NUM_INT] LiteralNode: '4'

2014-01-21 12:19:15,912 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:15,912 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Candidat where candidatid = 4
2014-01-21 12:19:15,912 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select candidat0_.CANDIDATID as CANDIDATID2_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_ from candidat candidat0_ where candidat0_.CANDIDATID=4
2014-01-21 12:19:15,912 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:15,913 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,913 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select candidat0_.CANDIDATID as CANDIDATID2_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_ from candidat candidat0_ where candidat0_.CANDIDATID=4
2014-01-21 12:19:15,914 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:15,914 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#4]
2014-01-21 12:19:15,914 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:15,914 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,914 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:15,914 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:15,915 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499559
2014-01-21 12:19:15,915 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:15,915 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:15,915 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:15,923 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:15,923 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:15,924 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:15,925 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:15,925 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:15,925 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:15,925 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,926 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.CANDIDATID as CANDIDATID2_0_, this_.CANDIDAT_CIVILITE as CANDIDAT2_2_0_, this_.CANDIDAT_NOM as CANDIDAT3_2_0_, this_.CANDIDAT_PRENOM as CANDIDAT4_2_0_, this_.CANDIDAT_MAIL as CANDIDAT5_2_0_, this_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_0_ from candidat this_
2014-01-21 12:19:15,926 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:15,926 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#1]
2014-01-21 12:19:15,927 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#2]
2014-01-21 12:19:15,927 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#3]
2014-01-21 12:19:15,927 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#4]
2014-01-21 12:19:15,927 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:15,927 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,928 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Candidat#1]
2014-01-21 12:19:15,928 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Candidat#1]
2014-01-21 12:19:15,928 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Candidat#2]
2014-01-21 12:19:15,928 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Candidat#2]
2014-01-21 12:19:15,928 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Candidat#3]
2014-01-21 12:19:15,928 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Candidat#3]
2014-01-21 12:19:15,928 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Candidat#4]
2014-01-21 12:19:15,928 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Candidat#4]
2014-01-21 12:19:15,928 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:15,928 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:15,929 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499559
2014-01-21 12:19:15,929 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:15,929 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:15,929 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:15,937 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:15,937 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:15,938 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:15,938 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:15,939 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:15,939 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:15,939 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,939 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.TESTID as TESTID3_0_, this_.TESTMATIERE as TESTMATI2_3_0_, this_.TESTDUREE as TESTDUREE3_0_, this_.TEST_NBQUESTION_RUB as TEST4_3_0_, this_.TESTNATURE as TESTNATURE3_0_, this_.TESTFORMAT as TESTFORMAT3_0_, this_.TEST_START as TEST7_3_0_, this_.TEST_DESCRIPTION as TEST8_3_0_, this_.THEME as THEME3_0_, this_.NIVEAU as NIVEAU3_0_, this_.CATEGORIEID as CATEGOR11_3_0_ from test this_
2014-01-21 12:19:15,941 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:15,941 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#1]
2014-01-21 12:19:15,942 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#2]
2014-01-21 12:19:15,942 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#3]
2014-01-21 12:19:15,942 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#4]
2014-01-21 12:19:15,943 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#5]
2014-01-21 12:19:15,943 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#6]
2014-01-21 12:19:15,943 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:15,943 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,943 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#1]
2014-01-21 12:19:15,943 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#1]
2014-01-21 12:19:15,943 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#2]
2014-01-21 12:19:15,944 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#2]
2014-01-21 12:19:15,944 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#3]
2014-01-21 12:19:15,944 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#3]
2014-01-21 12:19:15,944 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#4]
2014-01-21 12:19:15,944 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#4]
2014-01-21 12:19:15,944 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#5]
2014-01-21 12:19:15,944 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#5]
2014-01-21 12:19:15,944 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#6]
2014-01-21 12:19:15,944 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#6]
2014-01-21 12:19:15,944 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:15,945 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:15,945 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499559
2014-01-21 12:19:15,945 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:15,945 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:15,945 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:15,953 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:15,953 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:15,954 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Test where testid = 1
2014-01-21 12:19:15,955 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Test'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'testid'
          \-[NUM_INT] Node: '1'

2014-01-21 12:19:15,955 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:15,955 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:19:15,955 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Test (no alias) -> test0_
2014-01-21 12:19:15,955 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:19:15,955 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : testid -> org.hibernate.type.IntegerType@277469
2014-01-21 12:19:15,955 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.testid -> test0_.TESTID
2014-01-21 12:19:15,955 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:19:15,956 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} test test0_ ) ( where ( = ( test0_.TESTID {synthetic-alias} testid ) 1 ) ) )
2014-01-21 12:19:15,956 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:19:15,956 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [test test0_]
2014-01-21 12:19:15,956 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:19:15,956 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (test)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'test0_.TESTID as TESTID3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=test,tableAlias=test0_,origin=null,columns={,className=jpa.Test}}}
    |  \-[SQL_TOKEN] SqlFragment: 'test0_.TESTMATIERE as TESTMATI2_3_, test0_.TESTDUREE as TESTDUREE3_, test0_.TEST_NBQUESTION_RUB as TEST4_3_, test0_.TESTNATURE as TESTNATURE3_, test0_.TESTFORMAT as TESTFORMAT3_, test0_.TEST_START as TEST7_3_, test0_.TEST_DESCRIPTION as TEST8_3_, test0_.THEME as THEME3_, test0_.NIVEAU as NIVEAU3_, test0_.CATEGORIEID as CATEGOR11_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[test0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'test test0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=test,tableAlias=test0_,origin=null,columns={,className=jpa.Test}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'test0_.TESTID' {propertyName=testid,dereferenceType=ALL,propertyPath=testid,path={synthetic-alias}.testid,tableAlias=test0_,className=jpa.Test,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'testid' {originalText=testid}
          \-[NUM_INT] LiteralNode: '1'

2014-01-21 12:19:15,956 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:15,956 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Test where testid = 1
2014-01-21 12:19:15,956 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select test0_.TESTID as TESTID3_, test0_.TESTMATIERE as TESTMATI2_3_, test0_.TESTDUREE as TESTDUREE3_, test0_.TEST_NBQUESTION_RUB as TEST4_3_, test0_.TESTNATURE as TESTNATURE3_, test0_.TESTFORMAT as TESTFORMAT3_, test0_.TEST_START as TEST7_3_, test0_.TEST_DESCRIPTION as TEST8_3_, test0_.THEME as THEME3_, test0_.NIVEAU as NIVEAU3_, test0_.CATEGORIEID as CATEGOR11_3_ from test test0_ where test0_.TESTID=1
2014-01-21 12:19:15,956 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:15,957 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,957 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select test0_.TESTID as TESTID3_, test0_.TESTMATIERE as TESTMATI2_3_, test0_.TESTDUREE as TESTDUREE3_, test0_.TEST_NBQUESTION_RUB as TEST4_3_, test0_.TESTNATURE as TESTNATURE3_, test0_.TESTFORMAT as TESTFORMAT3_, test0_.TEST_START as TEST7_3_, test0_.TEST_DESCRIPTION as TEST8_3_, test0_.THEME as THEME3_, test0_.NIVEAU as NIVEAU3_, test0_.CATEGORIEID as CATEGOR11_3_ from test test0_ where test0_.TESTID=1
2014-01-21 12:19:15,958 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:15,958 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#1]
2014-01-21 12:19:15,959 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:15,959 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,959 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#1]
2014-01-21 12:19:15,959 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#1]
2014-01-21 12:19:15,959 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:15,959 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:15,959 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:15,959 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:15,959 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.rubriqueCollection#1], was: [jpa.Test.rubriqueCollection#1] (uninitialized)
2014-01-21 12:19:15,959 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.jointureCollection#1], was: [jpa.Test.jointureCollection#1] (uninitialized)
2014-01-21 12:19:15,960 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:15,960 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2014-01-21 12:19:15,960 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:15,960 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Test{rubriqueCollection=<uninitialized>, testmatiere=Développement PHP, testformat=PHP, theme=Boucles en PHP, jointureCollection=<uninitialized>, testnature=THEM, testid=1, testDescription=Les boucles permettent d'effectuer un certain nombre de fois les mêmes opérations, par exemple afficher une suite de nombres que l'on incrémentera à chaque tour de boucle. 
Vous allez pouvoir répéter autant d'instructions que vous souhaitez et vous arrêter lorsque vous l'aurez décidé.
Ce test vérifiera les compétences du candidat sur ces notions élémentaires.
, categorieid=jpa.Categorie#1, testStart=Instructions début, niveau=1, testNbquestionRub=10, testduree=20}
2014-01-21 12:19:15,960 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:15,961 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:15,961 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:15,961 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499559
2014-01-21 12:19:15,961 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:15,961 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:15,961 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:15,970 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:15,970 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:15,971 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,971 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select test0_.TESTID as TESTID3_, test0_.TESTMATIERE as TESTMATI2_3_, test0_.TESTDUREE as TESTDUREE3_, test0_.TEST_NBQUESTION_RUB as TEST4_3_, test0_.TESTNATURE as TESTNATURE3_, test0_.TESTFORMAT as TESTFORMAT3_, test0_.TEST_START as TEST7_3_, test0_.TEST_DESCRIPTION as TEST8_3_, test0_.THEME as THEME3_, test0_.NIVEAU as NIVEAU3_, test0_.CATEGORIEID as CATEGOR11_3_ from test test0_ where test0_.TESTID=1
2014-01-21 12:19:15,972 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:15,972 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#1]
2014-01-21 12:19:15,973 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:15,973 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,973 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#1]
2014-01-21 12:19:15,973 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#1]
2014-01-21 12:19:15,973 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:15,973 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:15,973 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:15,973 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:15,973 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.rubriqueCollection#1], was: [jpa.Test.rubriqueCollection#1] (uninitialized)
2014-01-21 12:19:15,973 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.jointureCollection#1], was: [jpa.Test.jointureCollection#1] (uninitialized)
2014-01-21 12:19:15,973 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:15,973 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2014-01-21 12:19:15,974 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:15,974 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Test{rubriqueCollection=<uninitialized>, testmatiere=Développement PHP, testformat=PHP, theme=Boucles en PHP, jointureCollection=<uninitialized>, testnature=THEM, testid=1, testDescription=Les boucles permettent d'effectuer un certain nombre de fois les mêmes opérations, par exemple afficher une suite de nombres que l'on incrémentera à chaque tour de boucle. 
Vous allez pouvoir répéter autant d'instructions que vous souhaitez et vous arrêter lorsque vous l'aurez décidé.
Ce test vérifiera les compétences du candidat sur ces notions élémentaires.
, categorieid=jpa.Categorie#1, testStart=Instructions début, niveau=1, testNbquestionRub=10, testduree=20}
2014-01-21 12:19:15,974 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:15,975 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:15,975 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:15,975 [main] DEBUG org.hibernate.impl.SessionImpl.immediateLoad(SessionImpl.java:1022) - initializing proxy: [jpa.Categorie#1]
2014-01-21 12:19:15,975 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2022) - loading entity: [jpa.Categorie#1]
2014-01-21 12:19:15,975 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,975 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select categorie0_.CATEGORIEID as CATEGORI1_4_0_, categorie0_.CATEGORIELIBELLE as CATEGORI2_4_0_ from categorie categorie0_ where categorie0_.CATEGORIEID=?
2014-01-21 12:19:15,976 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:15,976 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Categorie#1]
2014-01-21 12:19:15,977 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:15,977 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,977 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Categorie#1]
2014-01-21 12:19:15,977 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Categorie#1]
2014-01-21 12:19:15,977 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:15,977 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2050) - done entity load
2014-01-21 12:19:15,977 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499559
2014-01-21 12:19:15,977 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:15,977 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:15,977 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:15,986 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:15,986 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:15,987 [main] DEBUG org.hibernate.id.IncrementGenerator.initializePreviousValueHolder(IncrementGenerator.java:123) - fetching initial value: select max(JOINTUREID) from jointure
2014-01-21 12:19:15,987 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,987 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select max(JOINTUREID) from jointure
2014-01-21 12:19:15,988 [main] DEBUG org.hibernate.id.IncrementGenerator.initializePreviousValueHolder(IncrementGenerator.java:136) - first free id: 1
2014-01-21 12:19:15,988 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,988 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:19:15,988 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:15,988 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:15,988 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:15,988 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:15,988 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:15,988 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=1, champvide=null, testid=jpa.Test#1, passageid=null}
2014-01-21 12:19:15,989 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,989 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into jointure (CHAMPVIDE, TESTID, PASSAGEID, JOINTUREID) values (?, ?, ?, ?)
2014-01-21 12:19:15,990 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:15,990 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,991 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:15,991 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:15,991 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:15,991 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:15,991 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:15,991 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:15,991 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=1, champvide=null, testid=jpa.Test#1, passageid=null}
2014-01-21 12:19:15,992 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:15,993 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:15,993 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:15,993 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Jointure where jointureid = 1
2014-01-21 12:19:15,994 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Jointure'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'jointureid'
          \-[NUM_INT] Node: '1'

2014-01-21 12:19:15,994 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:15,994 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:19:15,994 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Jointure (no alias) -> jointure0_
2014-01-21 12:19:15,995 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:19:15,995 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : jointureid -> org.hibernate.type.IntegerType@277469
2014-01-21 12:19:15,995 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.jointureid -> jointure0_.JOINTUREID
2014-01-21 12:19:15,995 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:19:15,995 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} jointure jointure0_ ) ( where ( = ( jointure0_.JOINTUREID {synthetic-alias} jointureid ) 1 ) ) )
2014-01-21 12:19:15,995 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:19:15,995 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [jointure jointure0_]
2014-01-21 12:19:15,995 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:19:15,996 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (jointure)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'jointure0_.JOINTUREID as JOINTUREID10_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=jointure,tableAlias=jointure0_,origin=null,columns={,className=jpa.Jointure}}}
    |  \-[SQL_TOKEN] SqlFragment: 'jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[jointure0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'jointure jointure0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=jointure,tableAlias=jointure0_,origin=null,columns={,className=jpa.Jointure}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'jointure0_.JOINTUREID' {propertyName=jointureid,dereferenceType=ALL,propertyPath=jointureid,path={synthetic-alias}.jointureid,tableAlias=jointure0_,className=jpa.Jointure,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'jointureid' {originalText=jointureid}
          \-[NUM_INT] LiteralNode: '1'

2014-01-21 12:19:15,996 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:15,996 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Jointure where jointureid = 1
2014-01-21 12:19:15,996 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select jointure0_.JOINTUREID as JOINTUREID10_, jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_ from jointure jointure0_ where jointure0_.JOINTUREID=1
2014-01-21 12:19:15,996 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:15,996 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:15,996 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select jointure0_.JOINTUREID as JOINTUREID10_, jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_ from jointure jointure0_ where jointure0_.JOINTUREID=1
2014-01-21 12:19:15,997 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:15,997 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Jointure#1]
2014-01-21 12:19:15,997 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:15,998 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:15,998 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:15,998 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:15,998 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499559
2014-01-21 12:19:15,998 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:15,998 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:15,998 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,007 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,007 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,008 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,008 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.JOINTUREID as JOINTUREID10_0_, this_.CHAMPVIDE as CHAMPVIDE10_0_, this_.TESTID as TESTID10_0_, this_.PASSAGEID as PASSAGEID10_0_ from jointure this_ where this_.JOINTUREID=?
2014-01-21 12:19:16,009 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,009 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Jointure#1]
2014-01-21 12:19:16,009 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,009 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,009 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Jointure#1]
2014-01-21 12:19:16,009 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Jointure#1]
2014-01-21 12:19:16,009 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,009 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,009 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,009 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,010 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-21 12:19:16,010 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,010 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,010 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=1, champvide=null, testid=jpa.Test#1, passageid=null}
2014-01-21 12:19:16,012 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,013 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from jointure where JOINTUREID=?
2014-01-21 12:19:16,013 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:16,014 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,016 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,016 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,016 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,017 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499560
2014-01-21 12:19:16,017 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,017 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,017 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,025 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,025 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,026 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,026 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select candidat0_.CANDIDATID as CANDIDATID2_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_ from candidat candidat0_ where candidat0_.CANDIDATID=1
2014-01-21 12:19:16,027 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,027 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#1]
2014-01-21 12:19:16,027 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,027 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,027 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Candidat#1]
2014-01-21 12:19:16,027 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Candidat#1]
2014-01-21 12:19:16,027 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,027 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,027 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,028 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,028 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Candidat.passageCollection#1], was: [jpa.Candidat.passageCollection#1] (uninitialized)
2014-01-21 12:19:16,028 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,028 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2014-01-21 12:19:16,028 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,028 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=grosLard@hotmail.fr, passageCollection=<uninitialized>, candidatDateNaissance=1985-01-01, candidatPrenom=Samuel, candidatNom=Faber, candidatCivilite=Mr, candidatid=1}
2014-01-21 12:19:16,029 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,029 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,029 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,029 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499560
2014-01-21 12:19:16,029 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,029 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,030 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,037 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,037 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,037 [main] DEBUG org.hibernate.id.IncrementGenerator.initializePreviousValueHolder(IncrementGenerator.java:123) - fetching initial value: select max(PASSAGEID) from passage
2014-01-21 12:19:16,038 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,038 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select max(PASSAGEID) from passage
2014-01-21 12:19:16,038 [main] DEBUG org.hibernate.id.IncrementGenerator.initializePreviousValueHolder(IncrementGenerator.java:136) - first free id: 1
2014-01-21 12:19:16,039 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,039 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:19:16,039 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,039 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,039 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,039 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,039 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,039 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Passage{reponseCollection=null, passageDate=null, passagedebutVal=null, passageEtat=null, passagefinVal=null, jointureCollection=null, reponseHistoCollection=null, candidatid=jpa.Candidat#1, passageid=1}
2014-01-21 12:19:16,041 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,041 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into passage (PASSAGE_ETAT, PASSAGE_DATE, PASSAGEDEBUT_VAL, PASSAGEFIN_VAL, CANDIDATID, PASSAGEID) values (?, ?, ?, ?, ?, ?)
2014-01-21 12:19:16,041 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:16,042 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,042 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,042 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,042 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,043 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,043 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,043 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,043 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Passage{reponseCollection=null, passageDate=null, passagedebutVal=null, passageEtat=null, passagefinVal=null, jointureCollection=null, reponseHistoCollection=null, candidatid=jpa.Candidat#1, passageid=1}
2014-01-21 12:19:16,044 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,045 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,045 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,045 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Passage where passageid = 1
2014-01-21 12:19:16,046 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Passage'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'passageid'
          \-[NUM_INT] Node: '1'

2014-01-21 12:19:16,046 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,046 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:19:16,046 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Passage (no alias) -> passage0_
2014-01-21 12:19:16,046 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:19:16,046 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : passageid -> org.hibernate.type.IntegerType@277469
2014-01-21 12:19:16,046 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.passageid -> passage0_.PASSAGEID
2014-01-21 12:19:16,046 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:19:16,047 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} passage passage0_ ) ( where ( = ( passage0_.PASSAGEID {synthetic-alias} passageid ) 1 ) ) )
2014-01-21 12:19:16,047 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:19:16,047 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [passage passage0_]
2014-01-21 12:19:16,047 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:19:16,047 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (passage)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'passage0_.PASSAGEID as PASSAGEID5_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=passage,tableAlias=passage0_,origin=null,columns={,className=jpa.Passage}}}
    |  \-[SQL_TOKEN] SqlFragment: 'passage0_.PASSAGE_ETAT as PASSAGE2_5_, passage0_.PASSAGE_DATE as PASSAGE3_5_, passage0_.PASSAGEDEBUT_VAL as PASSAGED4_5_, passage0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_, passage0_.CANDIDATID as CANDIDATID5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[passage0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'passage passage0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=passage,tableAlias=passage0_,origin=null,columns={,className=jpa.Passage}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'passage0_.PASSAGEID' {propertyName=passageid,dereferenceType=ALL,propertyPath=passageid,path={synthetic-alias}.passageid,tableAlias=passage0_,className=jpa.Passage,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'passageid' {originalText=passageid}
          \-[NUM_INT] LiteralNode: '1'

2014-01-21 12:19:16,047 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,047 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Passage where passageid = 1
2014-01-21 12:19:16,047 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select passage0_.PASSAGEID as PASSAGEID5_, passage0_.PASSAGE_ETAT as PASSAGE2_5_, passage0_.PASSAGE_DATE as PASSAGE3_5_, passage0_.PASSAGEDEBUT_VAL as PASSAGED4_5_, passage0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_, passage0_.CANDIDATID as CANDIDATID5_ from passage passage0_ where passage0_.PASSAGEID=1
2014-01-21 12:19:16,047 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,048 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,048 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select passage0_.PASSAGEID as PASSAGEID5_, passage0_.PASSAGE_ETAT as PASSAGE2_5_, passage0_.PASSAGE_DATE as PASSAGE3_5_, passage0_.PASSAGEDEBUT_VAL as PASSAGED4_5_, passage0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_, passage0_.CANDIDATID as CANDIDATID5_ from passage passage0_ where passage0_.PASSAGEID=1
2014-01-21 12:19:16,048 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,049 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Passage#1]
2014-01-21 12:19:16,049 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,049 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,049 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,049 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,049 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499560
2014-01-21 12:19:16,049 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,049 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,049 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,057 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,057 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,057 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,058 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,059 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,059 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,059 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,059 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.TESTID as TESTID3_0_, this_.TESTMATIERE as TESTMATI2_3_0_, this_.TESTDUREE as TESTDUREE3_0_, this_.TEST_NBQUESTION_RUB as TEST4_3_0_, this_.TESTNATURE as TESTNATURE3_0_, this_.TESTFORMAT as TESTFORMAT3_0_, this_.TEST_START as TEST7_3_0_, this_.TEST_DESCRIPTION as TEST8_3_0_, this_.THEME as THEME3_0_, this_.NIVEAU as NIVEAU3_0_, this_.CATEGORIEID as CATEGOR11_3_0_ from test this_
2014-01-21 12:19:16,060 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,060 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#1]
2014-01-21 12:19:16,060 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#2]
2014-01-21 12:19:16,060 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#3]
2014-01-21 12:19:16,061 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#4]
2014-01-21 12:19:16,061 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#5]
2014-01-21 12:19:16,061 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#6]
2014-01-21 12:19:16,061 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,061 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,061 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#1]
2014-01-21 12:19:16,061 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#1]
2014-01-21 12:19:16,062 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#2]
2014-01-21 12:19:16,062 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#2]
2014-01-21 12:19:16,062 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#3]
2014-01-21 12:19:16,062 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#3]
2014-01-21 12:19:16,062 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#4]
2014-01-21 12:19:16,062 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#4]
2014-01-21 12:19:16,062 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#5]
2014-01-21 12:19:16,062 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#5]
2014-01-21 12:19:16,062 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#6]
2014-01-21 12:19:16,062 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#6]
2014-01-21 12:19:16,062 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,063 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,063 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499560
2014-01-21 12:19:16,063 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,063 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,063 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,071 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,071 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,072 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 2, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:19:16,072 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,072 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,072 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,073 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,073 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,073 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=2, champvide=null, testid=jpa.Test#1, passageid=jpa.Passage#1}
2014-01-21 12:19:16,073 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,073 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into jointure (CHAMPVIDE, TESTID, PASSAGEID, JOINTUREID) values (?, ?, ?, ?)
2014-01-21 12:19:16,073 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:16,074 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,074 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,074 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,074 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,074 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,074 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,074 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,074 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=2, champvide=null, testid=jpa.Test#1, passageid=jpa.Passage#1}
2014-01-21 12:19:16,075 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,076 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,076 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,076 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Jointure where jointureid = 2
2014-01-21 12:19:16,077 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Jointure'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'jointureid'
          \-[NUM_INT] Node: '2'

2014-01-21 12:19:16,077 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,077 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:19:16,077 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Jointure (no alias) -> jointure0_
2014-01-21 12:19:16,078 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:19:16,078 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : jointureid -> org.hibernate.type.IntegerType@277469
2014-01-21 12:19:16,078 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.jointureid -> jointure0_.JOINTUREID
2014-01-21 12:19:16,078 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:19:16,078 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} jointure jointure0_ ) ( where ( = ( jointure0_.JOINTUREID {synthetic-alias} jointureid ) 2 ) ) )
2014-01-21 12:19:16,078 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:19:16,079 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [jointure jointure0_]
2014-01-21 12:19:16,079 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:19:16,079 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (jointure)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'jointure0_.JOINTUREID as JOINTUREID10_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=jointure,tableAlias=jointure0_,origin=null,columns={,className=jpa.Jointure}}}
    |  \-[SQL_TOKEN] SqlFragment: 'jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[jointure0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'jointure jointure0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=jointure,tableAlias=jointure0_,origin=null,columns={,className=jpa.Jointure}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'jointure0_.JOINTUREID' {propertyName=jointureid,dereferenceType=ALL,propertyPath=jointureid,path={synthetic-alias}.jointureid,tableAlias=jointure0_,className=jpa.Jointure,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'jointureid' {originalText=jointureid}
          \-[NUM_INT] LiteralNode: '2'

2014-01-21 12:19:16,079 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,079 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Jointure where jointureid = 2
2014-01-21 12:19:16,079 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select jointure0_.JOINTUREID as JOINTUREID10_, jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_ from jointure jointure0_ where jointure0_.JOINTUREID=2
2014-01-21 12:19:16,079 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,079 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,079 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select jointure0_.JOINTUREID as JOINTUREID10_, jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_ from jointure jointure0_ where jointure0_.JOINTUREID=2
2014-01-21 12:19:16,080 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,080 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Jointure#2]
2014-01-21 12:19:16,081 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,081 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,081 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,081 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,081 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499560
2014-01-21 12:19:16,081 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,081 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,081 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,089 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,089 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,089 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 3, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:19:16,090 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,090 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,090 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,090 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,090 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,090 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=3, champvide=null, testid=jpa.Test#2, passageid=jpa.Passage#1}
2014-01-21 12:19:16,090 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,090 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into jointure (CHAMPVIDE, TESTID, PASSAGEID, JOINTUREID) values (?, ?, ?, ?)
2014-01-21 12:19:16,091 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:16,091 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,092 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,092 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,092 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,092 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,092 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,092 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,092 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=3, champvide=null, testid=jpa.Test#2, passageid=jpa.Passage#1}
2014-01-21 12:19:16,093 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,094 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,094 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,094 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Jointure where jointureid = 3
2014-01-21 12:19:16,095 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Jointure'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'jointureid'
          \-[NUM_INT] Node: '3'

2014-01-21 12:19:16,095 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,095 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:19:16,095 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Jointure (no alias) -> jointure0_
2014-01-21 12:19:16,095 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:19:16,096 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : jointureid -> org.hibernate.type.IntegerType@277469
2014-01-21 12:19:16,096 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.jointureid -> jointure0_.JOINTUREID
2014-01-21 12:19:16,096 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:19:16,096 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} jointure jointure0_ ) ( where ( = ( jointure0_.JOINTUREID {synthetic-alias} jointureid ) 3 ) ) )
2014-01-21 12:19:16,096 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:19:16,096 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [jointure jointure0_]
2014-01-21 12:19:16,096 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:19:16,096 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (jointure)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'jointure0_.JOINTUREID as JOINTUREID10_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=jointure,tableAlias=jointure0_,origin=null,columns={,className=jpa.Jointure}}}
    |  \-[SQL_TOKEN] SqlFragment: 'jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[jointure0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'jointure jointure0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=jointure,tableAlias=jointure0_,origin=null,columns={,className=jpa.Jointure}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'jointure0_.JOINTUREID' {propertyName=jointureid,dereferenceType=ALL,propertyPath=jointureid,path={synthetic-alias}.jointureid,tableAlias=jointure0_,className=jpa.Jointure,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'jointureid' {originalText=jointureid}
          \-[NUM_INT] LiteralNode: '3'

2014-01-21 12:19:16,096 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,097 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Jointure where jointureid = 3
2014-01-21 12:19:16,097 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select jointure0_.JOINTUREID as JOINTUREID10_, jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_ from jointure jointure0_ where jointure0_.JOINTUREID=3
2014-01-21 12:19:16,097 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,097 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,097 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select jointure0_.JOINTUREID as JOINTUREID10_, jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_ from jointure jointure0_ where jointure0_.JOINTUREID=3
2014-01-21 12:19:16,098 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,098 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Jointure#3]
2014-01-21 12:19:16,098 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,098 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,098 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,098 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,098 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499560
2014-01-21 12:19:16,098 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,099 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,099 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,106 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,107 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,107 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 4, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:19:16,107 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,107 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,108 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,108 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,108 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,108 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=4, champvide=null, testid=jpa.Test#3, passageid=jpa.Passage#1}
2014-01-21 12:19:16,108 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,108 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into jointure (CHAMPVIDE, TESTID, PASSAGEID, JOINTUREID) values (?, ?, ?, ?)
2014-01-21 12:19:16,108 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:16,109 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,109 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,109 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,109 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,109 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,109 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,109 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,109 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=4, champvide=null, testid=jpa.Test#3, passageid=jpa.Passage#1}
2014-01-21 12:19:16,110 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,111 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,111 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,111 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Jointure where jointureid = 4
2014-01-21 12:19:16,112 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Jointure'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'jointureid'
          \-[NUM_INT] Node: '4'

2014-01-21 12:19:16,112 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,112 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:19:16,112 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Jointure (no alias) -> jointure0_
2014-01-21 12:19:16,113 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:19:16,113 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : jointureid -> org.hibernate.type.IntegerType@277469
2014-01-21 12:19:16,113 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.jointureid -> jointure0_.JOINTUREID
2014-01-21 12:19:16,113 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:19:16,113 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} jointure jointure0_ ) ( where ( = ( jointure0_.JOINTUREID {synthetic-alias} jointureid ) 4 ) ) )
2014-01-21 12:19:16,113 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:19:16,113 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [jointure jointure0_]
2014-01-21 12:19:16,113 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:19:16,113 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (jointure)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'jointure0_.JOINTUREID as JOINTUREID10_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=jointure,tableAlias=jointure0_,origin=null,columns={,className=jpa.Jointure}}}
    |  \-[SQL_TOKEN] SqlFragment: 'jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[jointure0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'jointure jointure0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=jointure,tableAlias=jointure0_,origin=null,columns={,className=jpa.Jointure}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'jointure0_.JOINTUREID' {propertyName=jointureid,dereferenceType=ALL,propertyPath=jointureid,path={synthetic-alias}.jointureid,tableAlias=jointure0_,className=jpa.Jointure,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'jointureid' {originalText=jointureid}
          \-[NUM_INT] LiteralNode: '4'

2014-01-21 12:19:16,114 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,114 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Jointure where jointureid = 4
2014-01-21 12:19:16,114 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select jointure0_.JOINTUREID as JOINTUREID10_, jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_ from jointure jointure0_ where jointure0_.JOINTUREID=4
2014-01-21 12:19:16,114 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,114 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,114 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select jointure0_.JOINTUREID as JOINTUREID10_, jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_ from jointure jointure0_ where jointure0_.JOINTUREID=4
2014-01-21 12:19:16,115 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,115 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Jointure#4]
2014-01-21 12:19:16,115 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,115 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,115 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,115 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,116 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499561
2014-01-21 12:19:16,116 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,116 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,116 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,124 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,124 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,125 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 5, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:19:16,125 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,125 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,125 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,125 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,126 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,126 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=5, champvide=null, testid=jpa.Test#4, passageid=jpa.Passage#1}
2014-01-21 12:19:16,126 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,126 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into jointure (CHAMPVIDE, TESTID, PASSAGEID, JOINTUREID) values (?, ?, ?, ?)
2014-01-21 12:19:16,127 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:16,128 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,128 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,128 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,128 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,128 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,128 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,128 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,128 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=5, champvide=null, testid=jpa.Test#4, passageid=jpa.Passage#1}
2014-01-21 12:19:16,130 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,131 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,131 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,131 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Jointure where jointureid = 5
2014-01-21 12:19:16,132 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Jointure'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'jointureid'
          \-[NUM_INT] Node: '5'

2014-01-21 12:19:16,132 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,132 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:19:16,132 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Jointure (no alias) -> jointure0_
2014-01-21 12:19:16,133 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:19:16,133 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : jointureid -> org.hibernate.type.IntegerType@277469
2014-01-21 12:19:16,133 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.jointureid -> jointure0_.JOINTUREID
2014-01-21 12:19:16,133 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:19:16,133 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} jointure jointure0_ ) ( where ( = ( jointure0_.JOINTUREID {synthetic-alias} jointureid ) 5 ) ) )
2014-01-21 12:19:16,136 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:19:16,136 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [jointure jointure0_]
2014-01-21 12:19:16,136 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:19:16,136 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (jointure)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'jointure0_.JOINTUREID as JOINTUREID10_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=jointure,tableAlias=jointure0_,origin=null,columns={,className=jpa.Jointure}}}
    |  \-[SQL_TOKEN] SqlFragment: 'jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[jointure0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'jointure jointure0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=jointure,tableAlias=jointure0_,origin=null,columns={,className=jpa.Jointure}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'jointure0_.JOINTUREID' {propertyName=jointureid,dereferenceType=ALL,propertyPath=jointureid,path={synthetic-alias}.jointureid,tableAlias=jointure0_,className=jpa.Jointure,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'jointureid' {originalText=jointureid}
          \-[NUM_INT] LiteralNode: '5'

2014-01-21 12:19:16,137 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,137 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Jointure where jointureid = 5
2014-01-21 12:19:16,137 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select jointure0_.JOINTUREID as JOINTUREID10_, jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_ from jointure jointure0_ where jointure0_.JOINTUREID=5
2014-01-21 12:19:16,137 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,137 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,137 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select jointure0_.JOINTUREID as JOINTUREID10_, jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_ from jointure jointure0_ where jointure0_.JOINTUREID=5
2014-01-21 12:19:16,138 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,139 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Jointure#5]
2014-01-21 12:19:16,139 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,139 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,139 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,139 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,139 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499561
2014-01-21 12:19:16,139 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,139 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,139 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,146 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,146 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,147 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 6, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:19:16,147 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,147 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,147 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,147 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,148 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,148 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=6, champvide=null, testid=jpa.Test#5, passageid=jpa.Passage#1}
2014-01-21 12:19:16,148 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,148 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into jointure (CHAMPVIDE, TESTID, PASSAGEID, JOINTUREID) values (?, ?, ?, ?)
2014-01-21 12:19:16,148 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:16,149 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,149 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,149 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,149 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,149 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,149 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,149 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,149 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=6, champvide=null, testid=jpa.Test#5, passageid=jpa.Passage#1}
2014-01-21 12:19:16,150 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,151 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,151 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,151 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Jointure where jointureid = 6
2014-01-21 12:19:16,152 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Jointure'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'jointureid'
          \-[NUM_INT] Node: '6'

2014-01-21 12:19:16,152 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,152 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:19:16,152 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Jointure (no alias) -> jointure0_
2014-01-21 12:19:16,152 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:19:16,152 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : jointureid -> org.hibernate.type.IntegerType@277469
2014-01-21 12:19:16,153 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.jointureid -> jointure0_.JOINTUREID
2014-01-21 12:19:16,153 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:19:16,153 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} jointure jointure0_ ) ( where ( = ( jointure0_.JOINTUREID {synthetic-alias} jointureid ) 6 ) ) )
2014-01-21 12:19:16,153 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:19:16,153 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [jointure jointure0_]
2014-01-21 12:19:16,153 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:19:16,153 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (jointure)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'jointure0_.JOINTUREID as JOINTUREID10_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=jointure,tableAlias=jointure0_,origin=null,columns={,className=jpa.Jointure}}}
    |  \-[SQL_TOKEN] SqlFragment: 'jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[jointure0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'jointure jointure0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=jointure,tableAlias=jointure0_,origin=null,columns={,className=jpa.Jointure}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'jointure0_.JOINTUREID' {propertyName=jointureid,dereferenceType=ALL,propertyPath=jointureid,path={synthetic-alias}.jointureid,tableAlias=jointure0_,className=jpa.Jointure,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'jointureid' {originalText=jointureid}
          \-[NUM_INT] LiteralNode: '6'

2014-01-21 12:19:16,153 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,153 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Jointure where jointureid = 6
2014-01-21 12:19:16,154 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select jointure0_.JOINTUREID as JOINTUREID10_, jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_ from jointure jointure0_ where jointure0_.JOINTUREID=6
2014-01-21 12:19:16,154 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,154 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,154 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select jointure0_.JOINTUREID as JOINTUREID10_, jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_ from jointure jointure0_ where jointure0_.JOINTUREID=6
2014-01-21 12:19:16,155 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,155 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Jointure#6]
2014-01-21 12:19:16,155 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,155 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,155 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,155 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,155 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499561
2014-01-21 12:19:16,155 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,155 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,155 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,163 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,163 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,164 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 7, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:19:16,164 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,164 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,164 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,164 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,164 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,164 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=7, champvide=null, testid=jpa.Test#6, passageid=jpa.Passage#1}
2014-01-21 12:19:16,164 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,165 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into jointure (CHAMPVIDE, TESTID, PASSAGEID, JOINTUREID) values (?, ?, ?, ?)
2014-01-21 12:19:16,165 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:16,165 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,165 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,166 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,166 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,166 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,166 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,166 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,166 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=7, champvide=null, testid=jpa.Test#6, passageid=jpa.Passage#1}
2014-01-21 12:19:16,167 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,168 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,168 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,168 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Jointure where jointureid = 7
2014-01-21 12:19:16,169 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Jointure'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'jointureid'
          \-[NUM_INT] Node: '7'

2014-01-21 12:19:16,169 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,169 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:19:16,169 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Jointure (no alias) -> jointure0_
2014-01-21 12:19:16,169 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:19:16,169 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : jointureid -> org.hibernate.type.IntegerType@277469
2014-01-21 12:19:16,169 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.jointureid -> jointure0_.JOINTUREID
2014-01-21 12:19:16,169 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:19:16,169 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} jointure jointure0_ ) ( where ( = ( jointure0_.JOINTUREID {synthetic-alias} jointureid ) 7 ) ) )
2014-01-21 12:19:16,170 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:19:16,170 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [jointure jointure0_]
2014-01-21 12:19:16,170 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:19:16,170 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (jointure)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'jointure0_.JOINTUREID as JOINTUREID10_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=jointure,tableAlias=jointure0_,origin=null,columns={,className=jpa.Jointure}}}
    |  \-[SQL_TOKEN] SqlFragment: 'jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[jointure0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'jointure jointure0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=jointure,tableAlias=jointure0_,origin=null,columns={,className=jpa.Jointure}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'jointure0_.JOINTUREID' {propertyName=jointureid,dereferenceType=ALL,propertyPath=jointureid,path={synthetic-alias}.jointureid,tableAlias=jointure0_,className=jpa.Jointure,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'jointureid' {originalText=jointureid}
          \-[NUM_INT] LiteralNode: '7'

2014-01-21 12:19:16,170 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,170 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Jointure where jointureid = 7
2014-01-21 12:19:16,170 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select jointure0_.JOINTUREID as JOINTUREID10_, jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_ from jointure jointure0_ where jointure0_.JOINTUREID=7
2014-01-21 12:19:16,170 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,171 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,171 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select jointure0_.JOINTUREID as JOINTUREID10_, jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_ from jointure jointure0_ where jointure0_.JOINTUREID=7
2014-01-21 12:19:16,171 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,172 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Jointure#7]
2014-01-21 12:19:16,172 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,172 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,172 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,172 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,172 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499561
2014-01-21 12:19:16,172 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,172 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,172 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,180 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,180 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,182 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,182 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,183 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Passage.jointureCollection#1], was: [<unreferenced>] (initialized)
2014-01-21 12:19:16,183 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,183 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 1 (re)creations, 0 updates, 3 removals to 1 collections
2014-01-21 12:19:16,183 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,183 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Passage{reponseCollection=null, passageDate=null, passagedebutVal=null, passageEtat=null, passagefinVal=null, jointureCollection=[jpa.Jointure#2, jpa.Jointure#3, jpa.Jointure#4, jpa.Jointure#5, jpa.Jointure#6, jpa.Jointure#7], reponseHistoCollection=null, candidatid=jpa.Candidat#1, passageid=1}
2014-01-21 12:19:16,184 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,184 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update passage set PASSAGE_ETAT=?, PASSAGE_DATE=?, PASSAGEDEBUT_VAL=?, PASSAGEFIN_VAL=?, CANDIDATID=? where PASSAGEID=?
2014-01-21 12:19:16,184 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:16,185 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,185 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,185 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,185 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Passage.jointureCollection#1], was: [jpa.Passage.jointureCollection#1] (initialized)
2014-01-21 12:19:16,186 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,186 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2014-01-21 12:19:16,186 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,186 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Passage{reponseCollection=null, passageDate=null, passagedebutVal=null, passageEtat=null, passagefinVal=null, jointureCollection=[jpa.Jointure#2, jpa.Jointure#3, jpa.Jointure#4, jpa.Jointure#5, jpa.Jointure#6, jpa.Jointure#7], reponseHistoCollection=null, candidatid=jpa.Candidat#1, passageid=1}
2014-01-21 12:19:16,186 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,186 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select passage0_.PASSAGEID as PASSAGEID5_, passage0_.PASSAGE_ETAT as PASSAGE2_5_, passage0_.PASSAGE_DATE as PASSAGE3_5_, passage0_.PASSAGEDEBUT_VAL as PASSAGED4_5_, passage0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_, passage0_.CANDIDATID as CANDIDATID5_ from passage passage0_ where passage0_.PASSAGEID=1
2014-01-21 12:19:16,187 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,187 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Passage#1]
2014-01-21 12:19:16,187 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,187 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,187 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,187 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,187 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,187 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,188 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Passage.jointureCollection#1], was: [jpa.Passage.jointureCollection#1] (initialized)
2014-01-21 12:19:16,188 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,188 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2014-01-21 12:19:16,188 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,188 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Passage{reponseCollection=null, passageDate=null, passagedebutVal=null, passageEtat=null, passagefinVal=null, jointureCollection=[jpa.Jointure#2, jpa.Jointure#3, jpa.Jointure#4, jpa.Jointure#5, jpa.Jointure#6, jpa.Jointure#7], reponseHistoCollection=null, candidatid=jpa.Candidat#1, passageid=1}
2014-01-21 12:19:16,189 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,189 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,190 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,190 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499561
2014-01-21 12:19:16,190 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,190 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,190 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,197 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,197 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,198 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,198 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,199 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,199 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,199 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,199 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PASSAGEID as PASSAGEID5_0_, this_.PASSAGE_ETAT as PASSAGE2_5_0_, this_.PASSAGE_DATE as PASSAGE3_5_0_, this_.PASSAGEDEBUT_VAL as PASSAGED4_5_0_, this_.PASSAGEFIN_VAL as PASSAGEFIN5_5_0_, this_.CANDIDATID as CANDIDATID5_0_ from passage this_
2014-01-21 12:19:16,200 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,200 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Passage#1]
2014-01-21 12:19:16,200 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,200 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,200 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Passage#1]
2014-01-21 12:19:16,200 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Passage#1]
2014-01-21 12:19:16,201 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,201 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,201 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499562
2014-01-21 12:19:16,201 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,201 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,201 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,210 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,210 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,211 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,211 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PASSAGEID as PASSAGEID5_0_, this_.PASSAGE_ETAT as PASSAGE2_5_0_, this_.PASSAGE_DATE as PASSAGE3_5_0_, this_.PASSAGEDEBUT_VAL as PASSAGED4_5_0_, this_.PASSAGEFIN_VAL as PASSAGEFIN5_5_0_, this_.CANDIDATID as CANDIDATID5_0_ from passage this_ where this_.PASSAGEID=?
2014-01-21 12:19:16,212 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,212 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Passage#1]
2014-01-21 12:19:16,212 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,212 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,212 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Passage#1]
2014-01-21 12:19:16,212 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Passage#1]
2014-01-21 12:19:16,212 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,213 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2158) - loading collection: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:16,213 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,213 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select reponsecol0_.PASSAGEID as PASSAGEID5_1_, reponsecol0_.REPONSEID as REPONSEID1_, reponsecol0_.REPONSEID as REPONSEID8_0_, reponsecol0_.REPONSETEXTE as REPONSET2_8_0_, reponsecol0_.REPONSEDUREE as REPONSED3_8_0_, reponsecol0_.REPONSEMESSAGE as REPONSEM4_8_0_, reponsecol0_.PASSAGEID as PASSAGEID8_0_, reponsecol0_.QUESTIONID as QUESTIONID8_0_ from reponse reponsecol0_ where reponsecol0_.PASSAGEID=?
2014-01-21 12:19:16,214 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,214 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1203) - result set contains (possibly empty) collection: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:16,214 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,214 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,214 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: jpa.Passage.reponseCollection
2014-01-21 12:19:16,214 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:275) - collection fully initialized: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:16,214 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:241) - 1 collections initialized for role: jpa.Passage.reponseCollection
2014-01-21 12:19:16,214 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,214 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2182) - done loading collection
2014-01-21 12:19:16,215 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2158) - loading collection: [jpa.Passage.jointureCollection#1]
2014-01-21 12:19:16,215 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,215 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select jointureco0_.PASSAGEID as PASSAGEID5_1_, jointureco0_.JOINTUREID as JOINTUREID1_, jointureco0_.JOINTUREID as JOINTUREID10_0_, jointureco0_.CHAMPVIDE as CHAMPVIDE10_0_, jointureco0_.TESTID as TESTID10_0_, jointureco0_.PASSAGEID as PASSAGEID10_0_ from jointure jointureco0_ where jointureco0_.PASSAGEID=?
2014-01-21 12:19:16,215 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,216 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1203) - result set contains (possibly empty) collection: [jpa.Passage.jointureCollection#1]
2014-01-21 12:19:16,216 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Jointure#2]
2014-01-21 12:19:16,216 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Passage.jointureCollection#1]
2014-01-21 12:19:16,216 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Jointure#3]
2014-01-21 12:19:16,216 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Passage.jointureCollection#1]
2014-01-21 12:19:16,216 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Jointure#4]
2014-01-21 12:19:16,216 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Passage.jointureCollection#1]
2014-01-21 12:19:16,216 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Jointure#5]
2014-01-21 12:19:16,217 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Passage.jointureCollection#1]
2014-01-21 12:19:16,217 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Jointure#6]
2014-01-21 12:19:16,217 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Passage.jointureCollection#1]
2014-01-21 12:19:16,217 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Jointure#7]
2014-01-21 12:19:16,217 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Passage.jointureCollection#1]
2014-01-21 12:19:16,217 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,217 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,217 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Jointure#2]
2014-01-21 12:19:16,218 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Jointure#2]
2014-01-21 12:19:16,218 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Jointure#3]
2014-01-21 12:19:16,218 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Jointure#3]
2014-01-21 12:19:16,218 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Jointure#4]
2014-01-21 12:19:16,218 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Jointure#4]
2014-01-21 12:19:16,218 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Jointure#5]
2014-01-21 12:19:16,218 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Jointure#5]
2014-01-21 12:19:16,218 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Jointure#6]
2014-01-21 12:19:16,218 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Jointure#6]
2014-01-21 12:19:16,219 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Jointure#7]
2014-01-21 12:19:16,219 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Jointure#7]
2014-01-21 12:19:16,219 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: jpa.Passage.jointureCollection
2014-01-21 12:19:16,219 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:275) - collection fully initialized: [jpa.Passage.jointureCollection#1]
2014-01-21 12:19:16,219 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:241) - 1 collections initialized for role: jpa.Passage.jointureCollection
2014-01-21 12:19:16,219 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,219 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2182) - done loading collection
2014-01-21 12:19:16,219 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,219 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,220 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,220 [main] DEBUG org.hibernate.engine.Collections.processDereferencedCollection(Collections.java:75) - Collection dereferenced: [jpa.Passage.reponseHistoCollection#1]
2014-01-21 12:19:16,220 [main] DEBUG org.hibernate.engine.Collections.processDereferencedCollection(Collections.java:75) - Collection dereferenced: [jpa.Passage.reponseCollection#1]
2014-01-21 12:19:16,220 [main] DEBUG org.hibernate.engine.Collections.processDereferencedCollection(Collections.java:75) - Collection dereferenced: [jpa.Passage.jointureCollection#1]
2014-01-21 12:19:16,220 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 7 deletions to 7 objects
2014-01-21 12:19:16,220 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 3 removals to 3 collections
2014-01-21 12:19:16,220 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,220 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=5, champvide=null, testid=jpa.Test#4, passageid=jpa.Passage#1}
2014-01-21 12:19:16,220 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=4, champvide=null, testid=jpa.Test#3, passageid=jpa.Passage#1}
2014-01-21 12:19:16,220 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Passage{reponseCollection=[], passageDate=null, passagedebutVal=null, passageEtat=null, passagefinVal=null, jointureCollection=[jpa.Jointure#2, jpa.Jointure#3, jpa.Jointure#4, jpa.Jointure#5, jpa.Jointure#6, jpa.Jointure#7], reponseHistoCollection=<uninitialized>, candidatid=jpa.Candidat#1, passageid=1}
2014-01-21 12:19:16,220 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=3, champvide=null, testid=jpa.Test#2, passageid=jpa.Passage#1}
2014-01-21 12:19:16,221 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=2, champvide=null, testid=jpa.Test#1, passageid=jpa.Passage#1}
2014-01-21 12:19:16,221 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=7, champvide=null, testid=jpa.Test#6, passageid=jpa.Passage#1}
2014-01-21 12:19:16,221 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=6, champvide=null, testid=jpa.Test#5, passageid=jpa.Passage#1}
2014-01-21 12:19:16,221 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,221 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from jointure where JOINTUREID=?
2014-01-21 12:19:16,221 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
2014-01-21 12:19:16,221 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from jointure where JOINTUREID=?
2014-01-21 12:19:16,221 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
2014-01-21 12:19:16,221 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from jointure where JOINTUREID=?
2014-01-21 12:19:16,221 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
2014-01-21 12:19:16,221 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from jointure where JOINTUREID=?
2014-01-21 12:19:16,221 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
2014-01-21 12:19:16,222 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from jointure where JOINTUREID=?
2014-01-21 12:19:16,222 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
2014-01-21 12:19:16,222 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from jointure where JOINTUREID=?
2014-01-21 12:19:16,222 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 6
2014-01-21 12:19:16,225 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,225 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,225 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from passage where PASSAGEID=?
2014-01-21 12:19:16,225 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:16,226 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,227 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,228 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,228 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,228 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499562
2014-01-21 12:19:16,228 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,228 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,228 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,235 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,236 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,236 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,237 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,237 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,237 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,237 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,237 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.JOINTUREID as JOINTUREID10_0_, this_.CHAMPVIDE as CHAMPVIDE10_0_, this_.TESTID as TESTID10_0_, this_.PASSAGEID as PASSAGEID10_0_ from jointure this_
2014-01-21 12:19:16,238 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,238 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,238 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,238 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,238 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,239 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499562
2014-01-21 12:19:16,239 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,239 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,239 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,247 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,247 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,247 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,248 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select test0_.TESTID as TESTID3_, test0_.TESTMATIERE as TESTMATI2_3_, test0_.TESTDUREE as TESTDUREE3_, test0_.TEST_NBQUESTION_RUB as TEST4_3_, test0_.TESTNATURE as TESTNATURE3_, test0_.TESTFORMAT as TESTFORMAT3_, test0_.TEST_START as TEST7_3_, test0_.TEST_DESCRIPTION as TEST8_3_, test0_.THEME as THEME3_, test0_.NIVEAU as NIVEAU3_, test0_.CATEGORIEID as CATEGOR11_3_ from test test0_ where test0_.TESTID=1
2014-01-21 12:19:16,248 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,249 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#1]
2014-01-21 12:19:16,249 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,249 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,249 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#1]
2014-01-21 12:19:16,249 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#1]
2014-01-21 12:19:16,249 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,249 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,250 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,250 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,250 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.rubriqueCollection#1], was: [jpa.Test.rubriqueCollection#1] (uninitialized)
2014-01-21 12:19:16,250 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.jointureCollection#1], was: [jpa.Test.jointureCollection#1] (uninitialized)
2014-01-21 12:19:16,250 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,250 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2014-01-21 12:19:16,250 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,250 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Test{rubriqueCollection=<uninitialized>, testmatiere=Développement PHP, testformat=PHP, theme=Boucles en PHP, jointureCollection=<uninitialized>, testnature=THEM, testid=1, testDescription=Les boucles permettent d'effectuer un certain nombre de fois les mêmes opérations, par exemple afficher une suite de nombres que l'on incrémentera à chaque tour de boucle. 
Vous allez pouvoir répéter autant d'instructions que vous souhaitez et vous arrêter lorsque vous l'aurez décidé.
Ce test vérifiera les compétences du candidat sur ces notions élémentaires.
, categorieid=jpa.Categorie#1, testStart=Instructions début, niveau=1, testNbquestionRub=10, testduree=20}
2014-01-21 12:19:16,251 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,251 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,251 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,252 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499562
2014-01-21 12:19:16,252 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,252 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,252 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,259 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,259 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,260 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: select r from jpa.Rubrique r where r.testid =:test 
2014-01-21 12:19:16,261 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Rubrique'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'testid'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'test'

2014-01-21 12:19:16,261 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,262 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:19:16,262 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Rubrique (r) -> rubrique0_
2014-01-21 12:19:16,262 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  r -> rubrique0_.RUBRIQUEID
2014-01-21 12:19:16,262 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  r -> rubrique0_.RUBRIQUEID
2014-01-21 12:19:16,262 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : testid -> org.hibernate.type.ManyToOneType(jpa.Test)
2014-01-21 12:19:16,262 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.dereferenceEntityIdentifier(DotNode.java:570) - dereferenceShortcut() : property testid in jpa.Rubrique does not require a join.
2014-01-21 12:19:16,262 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.setPropertyNameAndPath(DotNode.java:599) - terminal propertyPath = [testid]
2014-01-21 12:19:16,262 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  r.testid -> rubrique0_.TESTID
2014-01-21 12:19:16,266 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:19:16,267 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( {select clause} rubrique0_.RUBRIQUEID ) ( FromClause{level=1} rubrique rubrique0_ ) ( where ( = ( rubrique0_.TESTID rubrique0_.RUBRIQUEID testid ) ? ) ) )
2014-01-21 12:19:16,267 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [rubrique rubrique0_]
2014-01-21 12:19:16,267 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:19:16,267 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (rubrique)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'rubrique0_.RUBRIQUEID as RUBRIQUEID6_' {alias=r, className=jpa.Rubrique, tableAlias=rubrique0_}
    |  \-[SQL_TOKEN] SqlFragment: 'rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_, rubrique0_.TESTID as TESTID6_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[rubrique0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'rubrique rubrique0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=rubrique,tableAlias=rubrique0_,origin=null,columns={,className=jpa.Rubrique}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'rubrique0_.TESTID' {propertyName=testid,dereferenceType=0,propertyPath=testid,path=r.testid,tableAlias=rubrique0_,className=jpa.Rubrique,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: 'rubrique0_.RUBRIQUEID' {alias=r, className=jpa.Rubrique, tableAlias=rubrique0_}
          |  \-[IDENT] IdentNode: 'testid' {originalText=testid}
          \-[NAMED_PARAM] ParameterNode: '?' {name=test, expectedType=org.hibernate.type.ManyToOneType(jpa.Test)}

2014-01-21 12:19:16,268 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,268 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: select r from jpa.Rubrique r where r.testid =:test 
2014-01-21 12:19:16,268 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select rubrique0_.RUBRIQUEID as RUBRIQUEID6_, rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_, rubrique0_.TESTID as TESTID6_ from rubrique rubrique0_ where rubrique0_.TESTID=?
2014-01-21 12:19:16,268 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,269 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,269 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select rubrique0_.RUBRIQUEID as RUBRIQUEID6_, rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_, rubrique0_.TESTID as TESTID6_ from rubrique rubrique0_ where rubrique0_.TESTID=?
2014-01-21 12:19:16,271 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,271 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#1]
2014-01-21 12:19:16,271 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#2]
2014-01-21 12:19:16,271 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,271 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,271 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#1]
2014-01-21 12:19:16,271 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#1]
2014-01-21 12:19:16,271 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#2]
2014-01-21 12:19:16,271 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#2]
2014-01-21 12:19:16,272 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,272 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,272 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,272 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,272 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#1], was: [jpa.Rubrique.questionCollection#1] (uninitialized)
2014-01-21 12:19:16,272 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#2], was: [jpa.Rubrique.questionCollection#2] (uninitialized)
2014-01-21 12:19:16,272 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2014-01-21 12:19:16,272 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2014-01-21 12:19:16,272 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,272 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=2, testid=jpa.Test#1, rubriquenom=Boucles PHP - Niveau 2}
2014-01-21 12:19:16,272 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=1, testid=jpa.Test#1, rubriquenom=Boucles PHP - Niveau 1}
2014-01-21 12:19:16,273 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,274 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,274 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,274 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499562
2014-01-21 12:19:16,274 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,274 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,274 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,282 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,282 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,283 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,283 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select test0_.TESTID as TESTID3_, test0_.TESTMATIERE as TESTMATI2_3_, test0_.TESTDUREE as TESTDUREE3_, test0_.TEST_NBQUESTION_RUB as TEST4_3_, test0_.TESTNATURE as TESTNATURE3_, test0_.TESTFORMAT as TESTFORMAT3_, test0_.TEST_START as TEST7_3_, test0_.TEST_DESCRIPTION as TEST8_3_, test0_.THEME as THEME3_, test0_.NIVEAU as NIVEAU3_, test0_.CATEGORIEID as CATEGOR11_3_ from test test0_ where test0_.TESTID=1
2014-01-21 12:19:16,284 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,284 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#1]
2014-01-21 12:19:16,284 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,284 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,284 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#1]
2014-01-21 12:19:16,286 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#1]
2014-01-21 12:19:16,286 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,286 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,286 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,286 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,287 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.rubriqueCollection#1], was: [jpa.Test.rubriqueCollection#1] (uninitialized)
2014-01-21 12:19:16,287 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.jointureCollection#1], was: [jpa.Test.jointureCollection#1] (uninitialized)
2014-01-21 12:19:16,287 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,287 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2014-01-21 12:19:16,287 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,287 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Test{rubriqueCollection=<uninitialized>, testmatiere=Développement PHP, testformat=PHP, theme=Boucles en PHP, jointureCollection=<uninitialized>, testnature=THEM, testid=1, testDescription=Les boucles permettent d'effectuer un certain nombre de fois les mêmes opérations, par exemple afficher une suite de nombres que l'on incrémentera à chaque tour de boucle. 
Vous allez pouvoir répéter autant d'instructions que vous souhaitez et vous arrêter lorsque vous l'aurez décidé.
Ce test vérifiera les compétences du candidat sur ces notions élémentaires.
, categorieid=jpa.Categorie#1, testStart=Instructions début, niveau=1, testNbquestionRub=10, testduree=20}
2014-01-21 12:19:16,288 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,288 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,288 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,288 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499562
2014-01-21 12:19:16,288 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,289 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,289 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,297 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,297 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,297 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,297 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select rubrique0_.RUBRIQUEID as RUBRIQUEID6_, rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_, rubrique0_.TESTID as TESTID6_ from rubrique rubrique0_ where rubrique0_.TESTID=?
2014-01-21 12:19:16,298 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,298 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#1]
2014-01-21 12:19:16,299 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#2]
2014-01-21 12:19:16,299 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,299 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,299 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#1]
2014-01-21 12:19:16,299 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#1]
2014-01-21 12:19:16,299 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#2]
2014-01-21 12:19:16,299 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#2]
2014-01-21 12:19:16,299 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,299 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,299 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,299 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,300 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#1], was: [jpa.Rubrique.questionCollection#1] (uninitialized)
2014-01-21 12:19:16,300 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#2], was: [jpa.Rubrique.questionCollection#2] (uninitialized)
2014-01-21 12:19:16,300 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2014-01-21 12:19:16,300 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2014-01-21 12:19:16,300 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,300 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=2, testid=jpa.Test#1, rubriquenom=Boucles PHP - Niveau 2}
2014-01-21 12:19:16,300 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=1, testid=jpa.Test#1, rubriquenom=Boucles PHP - Niveau 1}
2014-01-21 12:19:16,301 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,301 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,301 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,302 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499563
2014-01-21 12:19:16,302 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,302 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,302 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,309 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,309 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,310 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: select q from jpa.Question q where q.rubriqueid =:rubrique 
2014-01-21 12:19:16,311 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Question'
    |  |     \-[ALIAS] Node: 'q'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'q'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'q'
          |  \-[IDENT] Node: 'rubriqueid'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'rubrique'

2014-01-21 12:19:16,311 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,312 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:19:16,312 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Question (q) -> question0_
2014-01-21 12:19:16,312 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  q -> question0_.QUESTIONID
2014-01-21 12:19:16,312 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  q -> question0_.QUESTIONID
2014-01-21 12:19:16,312 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : rubriqueid -> org.hibernate.type.ManyToOneType(jpa.Rubrique)
2014-01-21 12:19:16,312 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.dereferenceEntityIdentifier(DotNode.java:570) - dereferenceShortcut() : property rubriqueid in jpa.Question does not require a join.
2014-01-21 12:19:16,312 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.setPropertyNameAndPath(DotNode.java:599) - terminal propertyPath = [rubriqueid]
2014-01-21 12:19:16,312 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  q.rubriqueid -> question0_.RUBRIQUEID
2014-01-21 12:19:16,312 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:19:16,313 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( {select clause} question0_.QUESTIONID ) ( FromClause{level=1} question question0_ ) ( where ( = ( question0_.RUBRIQUEID question0_.QUESTIONID rubriqueid ) ? ) ) )
2014-01-21 12:19:16,313 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [question question0_]
2014-01-21 12:19:16,313 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:19:16,313 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (question)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'question0_.QUESTIONID as QUESTIONID9_' {alias=q, className=jpa.Question, tableAlias=question0_}
    |  \-[SQL_TOKEN] SqlFragment: 'question0_.QUESTIONTEXT as QUESTION2_9_, question0_.RUBRIQUEID as RUBRIQUEID9_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[q], fromElementByTableAlias=[question0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'question question0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=q,role=null,tableName=question,tableAlias=question0_,origin=null,columns={,className=jpa.Question}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'question0_.RUBRIQUEID' {propertyName=rubriqueid,dereferenceType=0,propertyPath=rubriqueid,path=q.rubriqueid,tableAlias=question0_,className=jpa.Question,classAlias=q}
          |  +-[ALIAS_REF] IdentNode: 'question0_.QUESTIONID' {alias=q, className=jpa.Question, tableAlias=question0_}
          |  \-[IDENT] IdentNode: 'rubriqueid' {originalText=rubriqueid}
          \-[NAMED_PARAM] ParameterNode: '?' {name=rubrique, expectedType=org.hibernate.type.ManyToOneType(jpa.Rubrique)}

2014-01-21 12:19:16,313 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,313 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: select q from jpa.Question q where q.rubriqueid =:rubrique 
2014-01-21 12:19:16,313 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONTEXT as QUESTION2_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-01-21 12:19:16,313 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,313 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,314 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONTEXT as QUESTION2_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-01-21 12:19:16,315 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,315 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#1]
2014-01-21 12:19:16,315 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#2]
2014-01-21 12:19:16,315 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#3]
2014-01-21 12:19:16,315 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#4]
2014-01-21 12:19:16,315 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#5]
2014-01-21 12:19:16,315 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,315 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,316 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#1]
2014-01-21 12:19:16,316 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#1]
2014-01-21 12:19:16,316 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#2]
2014-01-21 12:19:16,316 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#2]
2014-01-21 12:19:16,316 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#3]
2014-01-21 12:19:16,316 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#3]
2014-01-21 12:19:16,316 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#4]
2014-01-21 12:19:16,316 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#4]
2014-01-21 12:19:16,316 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#5]
2014-01-21 12:19:16,317 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#5]
2014-01-21 12:19:16,317 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,317 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,317 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,317 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,317 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#1], was: [jpa.Question.propositionCollection#1] (uninitialized)
2014-01-21 12:19:16,317 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#1], was: [jpa.Question.reponseHistoCollection#1] (uninitialized)
2014-01-21 12:19:16,317 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#1], was: [jpa.Question.reponseCollection#1] (uninitialized)
2014-01-21 12:19:16,317 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#2], was: [jpa.Question.propositionCollection#2] (uninitialized)
2014-01-21 12:19:16,317 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#2], was: [jpa.Question.reponseHistoCollection#2] (uninitialized)
2014-01-21 12:19:16,317 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#2], was: [jpa.Question.reponseCollection#2] (uninitialized)
2014-01-21 12:19:16,317 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#3], was: [jpa.Question.propositionCollection#3] (uninitialized)
2014-01-21 12:19:16,318 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#3], was: [jpa.Question.reponseHistoCollection#3] (uninitialized)
2014-01-21 12:19:16,318 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#3], was: [jpa.Question.reponseCollection#3] (uninitialized)
2014-01-21 12:19:16,318 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#4], was: [jpa.Question.propositionCollection#4] (uninitialized)
2014-01-21 12:19:16,318 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#4], was: [jpa.Question.reponseHistoCollection#4] (uninitialized)
2014-01-21 12:19:16,318 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#4], was: [jpa.Question.reponseCollection#4] (uninitialized)
2014-01-21 12:19:16,318 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#5], was: [jpa.Question.propositionCollection#5] (uninitialized)
2014-01-21 12:19:16,318 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#5], was: [jpa.Question.reponseHistoCollection#5] (uninitialized)
2014-01-21 12:19:16,318 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#5], was: [jpa.Question.reponseCollection#5] (uninitialized)
2014-01-21 12:19:16,318 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
2014-01-21 12:19:16,318 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 15 collections
2014-01-21 12:19:16,318 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,319 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=5}
2014-01-21 12:19:16,319 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=4}
2014-01-21 12:19:16,319 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=A l'aide d'une boucle foreach, affichez le contenu du tableau., questionid=3}
2014-01-21 12:19:16,319 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=2}
2014-01-21 12:19:16,319 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=1}
2014-01-21 12:19:16,320 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,320 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,320 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,321 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499563
2014-01-21 12:19:16,321 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,321 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,321 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,328 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,328 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,329 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,329 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONTEXT as QUESTION2_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-01-21 12:19:16,330 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,330 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#6]
2014-01-21 12:19:16,330 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#7]
2014-01-21 12:19:16,330 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#8]
2014-01-21 12:19:16,330 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#9]
2014-01-21 12:19:16,331 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#10]
2014-01-21 12:19:16,331 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#11]
2014-01-21 12:19:16,331 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,331 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,331 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#6]
2014-01-21 12:19:16,331 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#6]
2014-01-21 12:19:16,331 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#7]
2014-01-21 12:19:16,331 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#7]
2014-01-21 12:19:16,331 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#8]
2014-01-21 12:19:16,331 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#8]
2014-01-21 12:19:16,332 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#9]
2014-01-21 12:19:16,332 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#9]
2014-01-21 12:19:16,332 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#10]
2014-01-21 12:19:16,332 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#10]
2014-01-21 12:19:16,332 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#11]
2014-01-21 12:19:16,332 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#11]
2014-01-21 12:19:16,332 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,332 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,332 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,332 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,332 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#6], was: [jpa.Question.propositionCollection#6] (uninitialized)
2014-01-21 12:19:16,333 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#6], was: [jpa.Question.reponseHistoCollection#6] (uninitialized)
2014-01-21 12:19:16,333 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#6], was: [jpa.Question.reponseCollection#6] (uninitialized)
2014-01-21 12:19:16,333 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#7], was: [jpa.Question.propositionCollection#7] (uninitialized)
2014-01-21 12:19:16,333 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#7], was: [jpa.Question.reponseHistoCollection#7] (uninitialized)
2014-01-21 12:19:16,333 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#7], was: [jpa.Question.reponseCollection#7] (uninitialized)
2014-01-21 12:19:16,333 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#8], was: [jpa.Question.propositionCollection#8] (uninitialized)
2014-01-21 12:19:16,333 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#8], was: [jpa.Question.reponseHistoCollection#8] (uninitialized)
2014-01-21 12:19:16,333 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#8], was: [jpa.Question.reponseCollection#8] (uninitialized)
2014-01-21 12:19:16,333 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#9], was: [jpa.Question.propositionCollection#9] (uninitialized)
2014-01-21 12:19:16,333 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#9], was: [jpa.Question.reponseHistoCollection#9] (uninitialized)
2014-01-21 12:19:16,333 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#9], was: [jpa.Question.reponseCollection#9] (uninitialized)
2014-01-21 12:19:16,334 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#10], was: [jpa.Question.propositionCollection#10] (uninitialized)
2014-01-21 12:19:16,334 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#10], was: [jpa.Question.reponseHistoCollection#10] (uninitialized)
2014-01-21 12:19:16,334 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#10], was: [jpa.Question.reponseCollection#10] (uninitialized)
2014-01-21 12:19:16,335 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#11], was: [jpa.Question.propositionCollection#11] (uninitialized)
2014-01-21 12:19:16,335 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#11], was: [jpa.Question.reponseHistoCollection#11] (uninitialized)
2014-01-21 12:19:16,335 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#11], was: [jpa.Question.reponseCollection#11] (uninitialized)
2014-01-21 12:19:16,335 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
2014-01-21 12:19:16,335 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 18 collections
2014-01-21 12:19:16,335 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,335 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=10}
2014-01-21 12:19:16,335 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Boucles foreach imbriquées. Soit le tableau array. A l’aide des boucles foreach affichez le résultat ci-dessous., questionid=11}
2014-01-21 12:19:16,335 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Boucle imbriquées, affichez la table de multiplication du chiffre 12.Codez l'algorithme ci-dessous., questionid=9}
2014-01-21 12:19:16,335 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Soit le tableau fruits : codez le reste de l’algorithme., questionid=8}
2014-01-21 12:19:16,335 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=7}
2014-01-21 12:19:16,335 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Affichez toutes les valeurs du tableau avec la boucle foreach (K + V)., questionid=6}
2014-01-21 12:19:16,336 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,337 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,337 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,337 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499563
2014-01-21 12:19:16,337 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,337 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,337 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,345 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,345 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,346 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,346 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select test0_.TESTID as TESTID3_, test0_.TESTMATIERE as TESTMATI2_3_, test0_.TESTDUREE as TESTDUREE3_, test0_.TEST_NBQUESTION_RUB as TEST4_3_, test0_.TESTNATURE as TESTNATURE3_, test0_.TESTFORMAT as TESTFORMAT3_, test0_.TEST_START as TEST7_3_, test0_.TEST_DESCRIPTION as TEST8_3_, test0_.THEME as THEME3_, test0_.NIVEAU as NIVEAU3_, test0_.CATEGORIEID as CATEGOR11_3_ from test test0_ where test0_.TESTID=1
2014-01-21 12:19:16,347 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,347 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#1]
2014-01-21 12:19:16,347 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,347 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,347 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#1]
2014-01-21 12:19:16,348 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#1]
2014-01-21 12:19:16,348 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,348 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,348 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,348 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,348 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.rubriqueCollection#1], was: [jpa.Test.rubriqueCollection#1] (uninitialized)
2014-01-21 12:19:16,348 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.jointureCollection#1], was: [jpa.Test.jointureCollection#1] (uninitialized)
2014-01-21 12:19:16,348 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,348 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2014-01-21 12:19:16,348 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,348 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Test{rubriqueCollection=<uninitialized>, testmatiere=Développement PHP, testformat=PHP, theme=Boucles en PHP, jointureCollection=<uninitialized>, testnature=THEM, testid=1, testDescription=Les boucles permettent d'effectuer un certain nombre de fois les mêmes opérations, par exemple afficher une suite de nombres que l'on incrémentera à chaque tour de boucle. 
Vous allez pouvoir répéter autant d'instructions que vous souhaitez et vous arrêter lorsque vous l'aurez décidé.
Ce test vérifiera les compétences du candidat sur ces notions élémentaires.
, categorieid=jpa.Categorie#1, testStart=Instructions début, niveau=1, testNbquestionRub=10, testduree=20}
2014-01-21 12:19:16,349 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,350 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,350 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,350 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499563
2014-01-21 12:19:16,350 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,350 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,350 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,358 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,358 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,358 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,359 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select rubrique0_.RUBRIQUEID as RUBRIQUEID6_, rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_, rubrique0_.TESTID as TESTID6_ from rubrique rubrique0_ where rubrique0_.TESTID=?
2014-01-21 12:19:16,359 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,360 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#1]
2014-01-21 12:19:16,360 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#2]
2014-01-21 12:19:16,360 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,360 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,360 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#1]
2014-01-21 12:19:16,360 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#1]
2014-01-21 12:19:16,360 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#2]
2014-01-21 12:19:16,360 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#2]
2014-01-21 12:19:16,360 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,360 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,361 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,361 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,361 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#1], was: [jpa.Rubrique.questionCollection#1] (uninitialized)
2014-01-21 12:19:16,361 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#2], was: [jpa.Rubrique.questionCollection#2] (uninitialized)
2014-01-21 12:19:16,361 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2014-01-21 12:19:16,361 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2014-01-21 12:19:16,361 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,361 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=2, testid=jpa.Test#1, rubriquenom=Boucles PHP - Niveau 2}
2014-01-21 12:19:16,361 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=1, testid=jpa.Test#1, rubriquenom=Boucles PHP - Niveau 1}
2014-01-21 12:19:16,362 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,363 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,363 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,363 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499563
2014-01-21 12:19:16,363 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,363 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,363 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,371 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,371 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,372 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,372 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONTEXT as QUESTION2_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-01-21 12:19:16,373 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,373 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#1]
2014-01-21 12:19:16,373 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#2]
2014-01-21 12:19:16,373 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#3]
2014-01-21 12:19:16,373 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#4]
2014-01-21 12:19:16,374 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#5]
2014-01-21 12:19:16,374 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,374 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,374 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#1]
2014-01-21 12:19:16,374 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#1]
2014-01-21 12:19:16,374 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#2]
2014-01-21 12:19:16,374 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#2]
2014-01-21 12:19:16,375 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#3]
2014-01-21 12:19:16,375 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#3]
2014-01-21 12:19:16,375 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#4]
2014-01-21 12:19:16,375 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#4]
2014-01-21 12:19:16,375 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#5]
2014-01-21 12:19:16,376 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#5]
2014-01-21 12:19:16,376 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,376 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,376 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,376 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,376 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#1], was: [jpa.Question.propositionCollection#1] (uninitialized)
2014-01-21 12:19:16,376 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#1], was: [jpa.Question.reponseHistoCollection#1] (uninitialized)
2014-01-21 12:19:16,376 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#1], was: [jpa.Question.reponseCollection#1] (uninitialized)
2014-01-21 12:19:16,376 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#2], was: [jpa.Question.propositionCollection#2] (uninitialized)
2014-01-21 12:19:16,376 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#2], was: [jpa.Question.reponseHistoCollection#2] (uninitialized)
2014-01-21 12:19:16,377 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#2], was: [jpa.Question.reponseCollection#2] (uninitialized)
2014-01-21 12:19:16,377 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#3], was: [jpa.Question.propositionCollection#3] (uninitialized)
2014-01-21 12:19:16,377 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#3], was: [jpa.Question.reponseHistoCollection#3] (uninitialized)
2014-01-21 12:19:16,377 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#3], was: [jpa.Question.reponseCollection#3] (uninitialized)
2014-01-21 12:19:16,377 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#4], was: [jpa.Question.propositionCollection#4] (uninitialized)
2014-01-21 12:19:16,377 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#4], was: [jpa.Question.reponseHistoCollection#4] (uninitialized)
2014-01-21 12:19:16,377 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#4], was: [jpa.Question.reponseCollection#4] (uninitialized)
2014-01-21 12:19:16,377 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#5], was: [jpa.Question.propositionCollection#5] (uninitialized)
2014-01-21 12:19:16,377 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#5], was: [jpa.Question.reponseHistoCollection#5] (uninitialized)
2014-01-21 12:19:16,377 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#5], was: [jpa.Question.reponseCollection#5] (uninitialized)
2014-01-21 12:19:16,377 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
2014-01-21 12:19:16,377 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 15 collections
2014-01-21 12:19:16,378 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,378 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=5}
2014-01-21 12:19:16,378 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=4}
2014-01-21 12:19:16,378 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=A l'aide d'une boucle foreach, affichez le contenu du tableau., questionid=3}
2014-01-21 12:19:16,378 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=2}
2014-01-21 12:19:16,378 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=1}
2014-01-21 12:19:16,379 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,379 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,379 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,380 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499563
2014-01-21 12:19:16,380 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,380 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,380 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,387 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,387 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,388 [main] DEBUG org.hibernate.id.IncrementGenerator.initializePreviousValueHolder(IncrementGenerator.java:123) - fetching initial value: select max(PROPOSITIONID) from proposition
2014-01-21 12:19:16,388 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,388 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select max(PROPOSITIONID) from proposition
2014-01-21 12:19:16,389 [main] DEBUG org.hibernate.id.IncrementGenerator.initializePreviousValueHolder(IncrementGenerator.java:136) - first free id: 116
2014-01-21 12:19:16,389 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,389 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 116, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:19:16,389 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,389 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,389 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,390 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,390 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,390 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,390 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=116, questionid=jpa.Question#1}
2014-01-21 12:19:16,391 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,391 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-21 12:19:16,395 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:16,397 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,400 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,400 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,400 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,401 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,401 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,401 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,401 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,401 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,401 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=116, questionid=jpa.Question#1}
2014-01-21 12:19:16,401 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 116
2014-01-21 12:19:16,402 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '116'

2014-01-21 12:19:16,402 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,402 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:19:16,403 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-01-21 12:19:16,403 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:19:16,403 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@277469
2014-01-21 12:19:16,403 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-01-21 12:19:16,403 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:19:16,403 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 116 ) ) )
2014-01-21 12:19:16,404 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:19:16,404 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-01-21 12:19:16,404 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:19:16,404 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '116'

2014-01-21 12:19:16,404 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,404 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 116
2014-01-21 12:19:16,405 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=116
2014-01-21 12:19:16,405 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,405 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,405 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=116
2014-01-21 12:19:16,406 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,406 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#116]
2014-01-21 12:19:16,406 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,406 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,406 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,406 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,406 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499564
2014-01-21 12:19:16,406 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,406 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,407 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,414 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,414 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,415 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,415 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-01-21 12:19:16,416 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,416 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#116]
2014-01-21 12:19:16,416 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,416 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,417 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#116]
2014-01-21 12:19:16,417 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#116]
2014-01-21 12:19:16,417 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,417 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,417 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,417 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,417 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-21 12:19:16,417 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,417 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,417 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=116, questionid=jpa.Question#1}
2014-01-21 12:19:16,417 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,417 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-01-21 12:19:16,418 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:16,418 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,419 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,420 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,420 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,420 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499564
2014-01-21 12:19:16,420 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,420 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,420 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,428 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,428 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,428 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 117, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:19:16,429 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,429 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,429 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,429 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,429 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,429 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,429 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=117, questionid=jpa.Question#2}
2014-01-21 12:19:16,429 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,429 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-21 12:19:16,429 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:16,430 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,431 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,432 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,432 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,432 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,432 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,432 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,432 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,432 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,432 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=117, questionid=jpa.Question#2}
2014-01-21 12:19:16,432 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 117
2014-01-21 12:19:16,433 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '117'

2014-01-21 12:19:16,433 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,433 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:19:16,433 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-01-21 12:19:16,434 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:19:16,434 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@277469
2014-01-21 12:19:16,434 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-01-21 12:19:16,434 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:19:16,434 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 117 ) ) )
2014-01-21 12:19:16,434 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:19:16,434 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-01-21 12:19:16,434 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:19:16,435 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '117'

2014-01-21 12:19:16,435 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,435 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 117
2014-01-21 12:19:16,435 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=117
2014-01-21 12:19:16,435 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,435 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,435 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=117
2014-01-21 12:19:16,436 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,436 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#117]
2014-01-21 12:19:16,436 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,436 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,436 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,436 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,436 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499564
2014-01-21 12:19:16,437 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,437 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,437 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,444 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,444 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,445 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,445 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-01-21 12:19:16,446 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,446 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#117]
2014-01-21 12:19:16,446 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,446 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,446 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#117]
2014-01-21 12:19:16,446 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#117]
2014-01-21 12:19:16,446 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,446 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,446 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,447 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,447 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-21 12:19:16,447 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,447 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,447 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=117, questionid=jpa.Question#2}
2014-01-21 12:19:16,447 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,447 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-01-21 12:19:16,447 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:16,448 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,449 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,449 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,449 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,449 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499564
2014-01-21 12:19:16,449 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,449 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,450 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,457 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,457 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,458 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 118, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:19:16,458 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,458 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,458 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,458 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,458 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,458 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,459 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=118, questionid=jpa.Question#3}
2014-01-21 12:19:16,459 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,459 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-21 12:19:16,459 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:16,460 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,461 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,462 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,462 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,462 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,462 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,462 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,463 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,463 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,463 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=118, questionid=jpa.Question#3}
2014-01-21 12:19:16,463 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 118
2014-01-21 12:19:16,464 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '118'

2014-01-21 12:19:16,464 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,464 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:19:16,464 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-01-21 12:19:16,464 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:19:16,464 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@277469
2014-01-21 12:19:16,464 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-01-21 12:19:16,465 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:19:16,465 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 118 ) ) )
2014-01-21 12:19:16,465 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:19:16,465 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-01-21 12:19:16,465 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:19:16,465 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '118'

2014-01-21 12:19:16,465 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,466 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 118
2014-01-21 12:19:16,466 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=118
2014-01-21 12:19:16,466 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,466 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,466 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=118
2014-01-21 12:19:16,467 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,467 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#118]
2014-01-21 12:19:16,467 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,467 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,467 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,467 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,468 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499564
2014-01-21 12:19:16,468 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,468 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,468 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,475 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,476 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,476 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,476 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-01-21 12:19:16,477 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,477 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#118]
2014-01-21 12:19:16,477 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,478 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,478 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#118]
2014-01-21 12:19:16,478 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#118]
2014-01-21 12:19:16,478 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,478 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,478 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,478 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,478 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-21 12:19:16,478 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,478 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,478 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=118, questionid=jpa.Question#3}
2014-01-21 12:19:16,478 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,479 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-01-21 12:19:16,479 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:16,479 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,480 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,481 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,481 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,481 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499564
2014-01-21 12:19:16,481 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,481 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,481 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,489 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,489 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,489 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 119, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:19:16,490 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,490 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,490 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,490 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,490 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,490 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,490 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=119, questionid=jpa.Question#4}
2014-01-21 12:19:16,490 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,490 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-21 12:19:16,491 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:16,491 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,492 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,493 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,493 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,493 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,493 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,493 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,493 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,493 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,493 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=119, questionid=jpa.Question#4}
2014-01-21 12:19:16,494 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 119
2014-01-21 12:19:16,494 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '119'

2014-01-21 12:19:16,494 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,494 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:19:16,495 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-01-21 12:19:16,495 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:19:16,495 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@277469
2014-01-21 12:19:16,495 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-01-21 12:19:16,495 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:19:16,495 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 119 ) ) )
2014-01-21 12:19:16,495 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:19:16,495 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-01-21 12:19:16,496 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:19:16,496 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '119'

2014-01-21 12:19:16,496 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,496 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 119
2014-01-21 12:19:16,496 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=119
2014-01-21 12:19:16,496 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,496 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,496 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=119
2014-01-21 12:19:16,497 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,497 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#119]
2014-01-21 12:19:16,498 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,498 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,498 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,498 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,498 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499564
2014-01-21 12:19:16,498 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,498 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,498 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,506 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,506 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,507 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,507 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-01-21 12:19:16,508 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,508 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#119]
2014-01-21 12:19:16,508 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,508 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,509 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#119]
2014-01-21 12:19:16,509 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#119]
2014-01-21 12:19:16,509 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,509 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,509 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,509 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,509 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-21 12:19:16,509 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,509 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,509 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=119, questionid=jpa.Question#4}
2014-01-21 12:19:16,509 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,509 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-01-21 12:19:16,510 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:16,510 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,511 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,512 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,512 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,512 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499565
2014-01-21 12:19:16,512 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,512 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,512 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,521 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,521 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,521 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 120, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:19:16,522 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,522 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,522 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,522 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,522 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,558 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,558 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=120, questionid=jpa.Question#5}
2014-01-21 12:19:16,558 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,558 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-21 12:19:16,559 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:16,560 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,562 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,563 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,563 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,563 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,563 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,564 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,564 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,564 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,564 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=120, questionid=jpa.Question#5}
2014-01-21 12:19:16,564 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 120
2014-01-21 12:19:16,565 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '120'

2014-01-21 12:19:16,565 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,565 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-21 12:19:16,565 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-01-21 12:19:16,565 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-21 12:19:16,565 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@277469
2014-01-21 12:19:16,565 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-01-21 12:19:16,565 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-21 12:19:16,566 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 120 ) ) )
2014-01-21 12:19:16,566 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-21 12:19:16,566 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-01-21 12:19:16,566 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-21 12:19:16,566 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '120'

2014-01-21 12:19:16,566 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,566 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 120
2014-01-21 12:19:16,566 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=120
2014-01-21 12:19:16,566 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-21 12:19:16,567 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,567 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=120
2014-01-21 12:19:16,568 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,568 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#120]
2014-01-21 12:19:16,568 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,568 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,568 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,569 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,569 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499565
2014-01-21 12:19:16,569 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,569 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,569 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,577 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,577 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,578 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,578 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-01-21 12:19:16,579 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,579 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#120]
2014-01-21 12:19:16,579 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,579 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,579 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#120]
2014-01-21 12:19:16,580 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#120]
2014-01-21 12:19:16,580 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,580 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,580 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,580 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,580 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-21 12:19:16,580 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,580 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,580 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=120, questionid=jpa.Question#5}
2014-01-21 12:19:16,580 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,580 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-01-21 12:19:16,580 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:16,581 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,582 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,583 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,583 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,583 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499565
2014-01-21 12:19:16,583 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,583 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,583 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,590 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,591 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,591 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,591 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONTEXT as QUESTION2_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-01-21 12:19:16,592 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-21 12:19:16,592 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#6]
2014-01-21 12:19:16,592 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#7]
2014-01-21 12:19:16,593 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#8]
2014-01-21 12:19:16,593 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#9]
2014-01-21 12:19:16,593 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#10]
2014-01-21 12:19:16,593 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#11]
2014-01-21 12:19:16,593 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-21 12:19:16,593 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,593 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#6]
2014-01-21 12:19:16,593 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#6]
2014-01-21 12:19:16,593 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#7]
2014-01-21 12:19:16,593 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#7]
2014-01-21 12:19:16,594 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#8]
2014-01-21 12:19:16,594 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#8]
2014-01-21 12:19:16,594 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#9]
2014-01-21 12:19:16,594 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#9]
2014-01-21 12:19:16,594 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#10]
2014-01-21 12:19:16,594 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#10]
2014-01-21 12:19:16,594 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#11]
2014-01-21 12:19:16,594 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#11]
2014-01-21 12:19:16,594 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-21 12:19:16,594 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,594 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,594 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,595 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#6], was: [jpa.Question.propositionCollection#6] (uninitialized)
2014-01-21 12:19:16,595 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#6], was: [jpa.Question.reponseHistoCollection#6] (uninitialized)
2014-01-21 12:19:16,595 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#6], was: [jpa.Question.reponseCollection#6] (uninitialized)
2014-01-21 12:19:16,595 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#7], was: [jpa.Question.propositionCollection#7] (uninitialized)
2014-01-21 12:19:16,595 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#7], was: [jpa.Question.reponseHistoCollection#7] (uninitialized)
2014-01-21 12:19:16,595 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#7], was: [jpa.Question.reponseCollection#7] (uninitialized)
2014-01-21 12:19:16,595 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#8], was: [jpa.Question.propositionCollection#8] (uninitialized)
2014-01-21 12:19:16,595 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#8], was: [jpa.Question.reponseHistoCollection#8] (uninitialized)
2014-01-21 12:19:16,595 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#8], was: [jpa.Question.reponseCollection#8] (uninitialized)
2014-01-21 12:19:16,595 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#9], was: [jpa.Question.propositionCollection#9] (uninitialized)
2014-01-21 12:19:16,595 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#9], was: [jpa.Question.reponseHistoCollection#9] (uninitialized)
2014-01-21 12:19:16,595 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#9], was: [jpa.Question.reponseCollection#9] (uninitialized)
2014-01-21 12:19:16,596 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#10], was: [jpa.Question.propositionCollection#10] (uninitialized)
2014-01-21 12:19:16,596 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#10], was: [jpa.Question.reponseHistoCollection#10] (uninitialized)
2014-01-21 12:19:16,596 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#10], was: [jpa.Question.reponseCollection#10] (uninitialized)
2014-01-21 12:19:16,596 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#11], was: [jpa.Question.propositionCollection#11] (uninitialized)
2014-01-21 12:19:16,596 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#11], was: [jpa.Question.reponseHistoCollection#11] (uninitialized)
2014-01-21 12:19:16,596 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#11], was: [jpa.Question.reponseCollection#11] (uninitialized)
2014-01-21 12:19:16,596 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
2014-01-21 12:19:16,596 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 18 collections
2014-01-21 12:19:16,596 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,596 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=10}
2014-01-21 12:19:16,596 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Boucles foreach imbriquées. Soit le tableau array. A l’aide des boucles foreach affichez le résultat ci-dessous., questionid=11}
2014-01-21 12:19:16,596 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Boucle imbriquées, affichez la table de multiplication du chiffre 12.Codez l'algorithme ci-dessous., questionid=9}
2014-01-21 12:19:16,596 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Soit le tableau fruits : codez le reste de l’algorithme., questionid=8}
2014-01-21 12:19:16,597 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=7}
2014-01-21 12:19:16,597 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Affichez toutes les valeurs du tableau avec la boucle foreach (K + V)., questionid=6}
2014-01-21 12:19:16,597 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,598 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,598 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,598 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13903499565
2014-01-21 12:19:16,598 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-21 12:19:16,598 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-21 12:19:16,598 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-21 12:19:16,606 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-21 12:19:16,607 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-21 12:19:16,607 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 121, using strategy: org.hibernate.id.IncrementGenerator
2014-01-21 12:19:16,607 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-21 12:19:16,607 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,608 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-21 12:19:16,608 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-21 12:19:16,608 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-21 12:19:16,608 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-21 12:19:16,608 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=121, questionid=jpa.Question#6}
2014-01-21 12:19:16,608 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-21 12:19:16,608 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-21 12:19:16,608 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-21 12:19:16,609 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-21 12:19:16,610 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-21 12:19:16,610 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-21 12:19:16,611 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-21 12:19:16,611 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-21 12:19:16,611 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
