2014-01-19 15:21:20,358 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#10], was: [jpa.Question.propositionCollection#10] (uninitialized)
2014-01-19 15:21:20,358 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#10], was: [jpa.Question.reponseHistoCollection#10] (uninitialized)
2014-01-19 15:21:20,358 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#10], was: [jpa.Question.reponseCollection#10] (uninitialized)
2014-01-19 15:21:20,358 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#11], was: [jpa.Question.propositionCollection#11] (uninitialized)
2014-01-19 15:21:20,358 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#11], was: [jpa.Question.reponseHistoCollection#11] (uninitialized)
2014-01-19 15:21:20,358 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#11], was: [jpa.Question.reponseCollection#11] (uninitialized)
2014-01-19 15:21:20,358 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
2014-01-19 15:21:20,359 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 18 collections
2014-01-19 15:21:20,359 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,359 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=10}
2014-01-19 15:21:20,359 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Boucles foreach imbriquées. Soit le tableau array. A l’aide des boucles foreach affichez le résultat ci-dessous., questionid=11}
2014-01-19 15:21:20,359 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Boucle imbriquées, affichez la table de multiplication du chiffre 12.Codez l'algorithme ci-dessous., questionid=9}
2014-01-19 15:21:20,359 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Soit le tableau fruits : codez le reste de l’algorithme., questionid=8}
2014-01-19 15:21:20,359 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=7}
2014-01-19 15:21:20,359 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Affichez toutes les valeurs du tableau avec la boucle foreach (K + V)., questionid=6}
2014-01-19 15:21:20,361 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,361 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,361 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,362 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880803
2014-01-19 15:21:20,362 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,362 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,362 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,372 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,372 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,373 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,373 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select test0_.TESTID as TESTID3_, test0_.TESTMATIERE as TESTMATI2_3_, test0_.TESTDUREE as TESTDUREE3_, test0_.TEST_NBQUESTION_RUB as TEST4_3_, test0_.TESTNATURE as TESTNATURE3_, test0_.TESTFORMAT as TESTFORMAT3_, test0_.TEST_START as TEST7_3_, test0_.TEST_DESCRIPTION as TEST8_3_, test0_.THEME as THEME3_, test0_.NIVEAU as NIVEAU3_, test0_.CATEGORIEID as CATEGOR11_3_ from test test0_ where test0_.TESTID=1
2014-01-19 15:21:20,374 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,374 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#1]
2014-01-19 15:21:20,375 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,375 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,375 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#1]
2014-01-19 15:21:20,375 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#1]
2014-01-19 15:21:20,375 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,375 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,375 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,375 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,375 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.rubriqueCollection#1], was: [jpa.Test.rubriqueCollection#1] (uninitialized)
2014-01-19 15:21:20,375 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.jointureCollection#1], was: [jpa.Test.jointureCollection#1] (uninitialized)
2014-01-19 15:21:20,375 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-19 15:21:20,376 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2014-01-19 15:21:20,376 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,376 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Test{rubriqueCollection=<uninitialized>, testmatiere=Développement PHP, testformat=PHP, theme=Boucles en PHP, jointureCollection=<uninitialized>, testnature=THEM, testid=1, testDescription=Les boucles permettent d'effectuer un certain nombre de fois les mêmes opérations, par exemple afficher une suite de nombres que l'on incrémentera à chaque tour de boucle. 
Vous allez pouvoir répéter autant d'instructions que vous souhaitez et vous arrêter lorsque vous l'aurez décidé.
Ce test vérifiera les compétences du candidat sur ces notions élémentaires.
, categorieid=jpa.Categorie#1, testStart=Instructions début, niveau=1, testNbquestionRub=10, testduree=20}
2014-01-19 15:21:20,377 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,377 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,378 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,378 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880803
2014-01-19 15:21:20,378 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,378 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,378 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,389 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,389 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,390 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,390 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select rubrique0_.RUBRIQUEID as RUBRIQUEID6_, rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_, rubrique0_.TESTID as TESTID6_ from rubrique rubrique0_ where rubrique0_.TESTID=?
2014-01-19 15:21:20,391 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,391 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#1]
2014-01-19 15:21:20,391 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#2]
2014-01-19 15:21:20,391 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,391 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,391 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#1]
2014-01-19 15:21:20,392 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#1]
2014-01-19 15:21:20,392 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#2]
2014-01-19 15:21:20,392 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#2]
2014-01-19 15:21:20,392 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,392 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,392 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,392 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,392 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#1], was: [jpa.Rubrique.questionCollection#1] (uninitialized)
2014-01-19 15:21:20,392 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#2], was: [jpa.Rubrique.questionCollection#2] (uninitialized)
2014-01-19 15:21:20,392 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2014-01-19 15:21:20,392 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2014-01-19 15:21:20,393 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,393 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=2, testid=jpa.Test#1, rubriquenom=Boucles PHP - Niveau 2}
2014-01-19 15:21:20,393 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=1, testid=jpa.Test#1, rubriquenom=Boucles PHP - Niveau 1}
2014-01-19 15:21:20,394 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,394 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,394 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,394 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880803
2014-01-19 15:21:20,394 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,395 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,395 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,407 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,407 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,408 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,408 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONTEXT as QUESTION2_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-01-19 15:21:20,410 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,410 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#1]
2014-01-19 15:21:20,410 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#2]
2014-01-19 15:21:20,410 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#3]
2014-01-19 15:21:20,411 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#4]
2014-01-19 15:21:20,411 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#5]
2014-01-19 15:21:20,411 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,411 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,411 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#1]
2014-01-19 15:21:20,411 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#1]
2014-01-19 15:21:20,411 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#2]
2014-01-19 15:21:20,411 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#2]
2014-01-19 15:21:20,411 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#3]
2014-01-19 15:21:20,412 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#3]
2014-01-19 15:21:20,412 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#4]
2014-01-19 15:21:20,412 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#4]
2014-01-19 15:21:20,412 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#5]
2014-01-19 15:21:20,412 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#5]
2014-01-19 15:21:20,412 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,412 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,412 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,412 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,412 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#1], was: [jpa.Question.propositionCollection#1] (uninitialized)
2014-01-19 15:21:20,412 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#1], was: [jpa.Question.reponseHistoCollection#1] (uninitialized)
2014-01-19 15:21:20,413 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#1], was: [jpa.Question.reponseCollection#1] (uninitialized)
2014-01-19 15:21:20,413 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#2], was: [jpa.Question.propositionCollection#2] (uninitialized)
2014-01-19 15:21:20,413 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#2], was: [jpa.Question.reponseHistoCollection#2] (uninitialized)
2014-01-19 15:21:20,413 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#2], was: [jpa.Question.reponseCollection#2] (uninitialized)
2014-01-19 15:21:20,413 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#3], was: [jpa.Question.propositionCollection#3] (uninitialized)
2014-01-19 15:21:20,413 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#3], was: [jpa.Question.reponseHistoCollection#3] (uninitialized)
2014-01-19 15:21:20,413 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#3], was: [jpa.Question.reponseCollection#3] (uninitialized)
2014-01-19 15:21:20,413 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#4], was: [jpa.Question.propositionCollection#4] (uninitialized)
2014-01-19 15:21:20,413 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#4], was: [jpa.Question.reponseHistoCollection#4] (uninitialized)
2014-01-19 15:21:20,414 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#4], was: [jpa.Question.reponseCollection#4] (uninitialized)
2014-01-19 15:21:20,414 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#5], was: [jpa.Question.propositionCollection#5] (uninitialized)
2014-01-19 15:21:20,414 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#5], was: [jpa.Question.reponseHistoCollection#5] (uninitialized)
2014-01-19 15:21:20,414 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#5], was: [jpa.Question.reponseCollection#5] (uninitialized)
2014-01-19 15:21:20,414 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
2014-01-19 15:21:20,414 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 15 collections
2014-01-19 15:21:20,414 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,414 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=5}
2014-01-19 15:21:20,414 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=4}
2014-01-19 15:21:20,414 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=A l'aide d'une boucle foreach, affichez le contenu du tableau., questionid=3}
2014-01-19 15:21:20,415 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=2}
2014-01-19 15:21:20,415 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=1}
2014-01-19 15:21:20,416 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,418 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,418 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,418 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880804
2014-01-19 15:21:20,418 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,418 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,418 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,428 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,429 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,429 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 127, using strategy: org.hibernate.id.IncrementGenerator
2014-01-19 15:21:20,429 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,430 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,430 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,430 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-19 15:21:20,430 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,430 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,430 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=127, questionid=jpa.Question#1}
2014-01-19 15:21:20,430 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,431 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-19 15:21:20,431 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-19 15:21:20,432 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,434 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,435 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,435 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,435 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,435 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,435 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-19 15:21:20,435 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,435 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,435 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=127, questionid=jpa.Question#1}
2014-01-19 15:21:20,436 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 127
2014-01-19 15:21:20,436 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '127'

2014-01-19 15:21:20,436 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,436 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-19 15:21:20,437 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-01-19 15:21:20,437 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-19 15:21:20,437 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@277469
2014-01-19 15:21:20,437 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-01-19 15:21:20,437 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-19 15:21:20,437 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 127 ) ) )
2014-01-19 15:21:20,437 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-19 15:21:20,437 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-01-19 15:21:20,438 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-19 15:21:20,438 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '127'

2014-01-19 15:21:20,438 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,438 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 127
2014-01-19 15:21:20,438 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=127
2014-01-19 15:21:20,438 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,438 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,438 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=127
2014-01-19 15:21:20,440 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,440 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#127]
2014-01-19 15:21:20,440 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,440 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,440 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,440 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,440 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880804
2014-01-19 15:21:20,441 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,441 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,441 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,449 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,450 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,450 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,451 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-01-19 15:21:20,451 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,452 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#127]
2014-01-19 15:21:20,452 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,452 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,452 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#127]
2014-01-19 15:21:20,452 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#127]
2014-01-19 15:21:20,452 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,452 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,452 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,452 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,452 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-19 15:21:20,452 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,452 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,453 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=127, questionid=jpa.Question#1}
2014-01-19 15:21:20,453 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,453 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-01-19 15:21:20,453 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-19 15:21:20,454 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,455 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,455 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,455 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,455 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880804
2014-01-19 15:21:20,455 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,455 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,455 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,462 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,462 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,463 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 128, using strategy: org.hibernate.id.IncrementGenerator
2014-01-19 15:21:20,463 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,463 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,463 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,464 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-19 15:21:20,464 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,464 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,464 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=128, questionid=jpa.Question#2}
2014-01-19 15:21:20,464 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,464 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-19 15:21:20,465 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-19 15:21:20,466 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,467 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,467 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,467 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,467 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,467 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,468 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-19 15:21:20,468 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,468 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,468 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=128, questionid=jpa.Question#2}
2014-01-19 15:21:20,468 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 128
2014-01-19 15:21:20,469 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '128'

2014-01-19 15:21:20,469 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,469 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-19 15:21:20,469 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-01-19 15:21:20,469 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-19 15:21:20,469 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@277469
2014-01-19 15:21:20,469 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-01-19 15:21:20,469 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-19 15:21:20,469 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 128 ) ) )
2014-01-19 15:21:20,470 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-19 15:21:20,470 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-01-19 15:21:20,470 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-19 15:21:20,470 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '128'

2014-01-19 15:21:20,470 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,470 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 128
2014-01-19 15:21:20,470 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=128
2014-01-19 15:21:20,470 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,470 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,471 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=128
2014-01-19 15:21:20,472 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,472 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#128]
2014-01-19 15:21:20,472 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,472 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,472 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,472 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,472 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880804
2014-01-19 15:21:20,472 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,473 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,473 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,480 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,480 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,481 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,481 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-01-19 15:21:20,482 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,482 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#128]
2014-01-19 15:21:20,482 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,482 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,482 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#128]
2014-01-19 15:21:20,483 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#128]
2014-01-19 15:21:20,483 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,483 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,483 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,483 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,483 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-19 15:21:20,483 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,483 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,483 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=128, questionid=jpa.Question#2}
2014-01-19 15:21:20,483 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,483 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-01-19 15:21:20,483 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-19 15:21:20,484 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,485 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,486 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,486 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,486 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880804
2014-01-19 15:21:20,486 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,486 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,486 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,493 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,493 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,494 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 129, using strategy: org.hibernate.id.IncrementGenerator
2014-01-19 15:21:20,494 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,494 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,494 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,494 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-19 15:21:20,494 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,494 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,494 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=129, questionid=jpa.Question#3}
2014-01-19 15:21:20,494 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,494 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-19 15:21:20,495 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-19 15:21:20,495 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,496 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,497 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,497 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,497 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,497 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,497 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-19 15:21:20,497 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,497 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,497 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=129, questionid=jpa.Question#3}
2014-01-19 15:21:20,497 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 129
2014-01-19 15:21:20,498 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '129'

2014-01-19 15:21:20,498 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,498 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-19 15:21:20,498 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-01-19 15:21:20,499 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-19 15:21:20,499 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@277469
2014-01-19 15:21:20,499 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-01-19 15:21:20,499 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-19 15:21:20,499 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 129 ) ) )
2014-01-19 15:21:20,499 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-19 15:21:20,499 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-01-19 15:21:20,499 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-19 15:21:20,500 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '129'

2014-01-19 15:21:20,500 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,500 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 129
2014-01-19 15:21:20,500 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=129
2014-01-19 15:21:20,500 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,500 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,500 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=129
2014-01-19 15:21:20,501 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,503 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#129]
2014-01-19 15:21:20,504 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,504 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,504 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,505 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,505 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880805
2014-01-19 15:21:20,505 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,505 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,505 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,514 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,514 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,515 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,515 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-01-19 15:21:20,516 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,516 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#129]
2014-01-19 15:21:20,516 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,517 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,517 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#129]
2014-01-19 15:21:20,517 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#129]
2014-01-19 15:21:20,517 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,517 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,517 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,517 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,517 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-19 15:21:20,517 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,518 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,518 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=129, questionid=jpa.Question#3}
2014-01-19 15:21:20,518 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,518 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-01-19 15:21:20,518 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-19 15:21:20,519 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,520 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,520 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,520 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,521 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880805
2014-01-19 15:21:20,521 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,521 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,521 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,529 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,529 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,530 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 130, using strategy: org.hibernate.id.IncrementGenerator
2014-01-19 15:21:20,530 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,530 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,530 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,530 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-19 15:21:20,530 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,530 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,530 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=130, questionid=jpa.Question#4}
2014-01-19 15:21:20,530 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,530 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-19 15:21:20,531 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-19 15:21:20,531 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,532 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,533 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,533 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,533 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,533 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,533 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-19 15:21:20,533 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,533 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,534 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=130, questionid=jpa.Question#4}
2014-01-19 15:21:20,534 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 130
2014-01-19 15:21:20,534 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '130'

2014-01-19 15:21:20,535 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,535 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-19 15:21:20,535 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-01-19 15:21:20,535 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-19 15:21:20,535 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@277469
2014-01-19 15:21:20,535 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-01-19 15:21:20,535 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-19 15:21:20,535 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 130 ) ) )
2014-01-19 15:21:20,535 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-19 15:21:20,535 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-01-19 15:21:20,536 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-19 15:21:20,536 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '130'

2014-01-19 15:21:20,536 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,536 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 130
2014-01-19 15:21:20,536 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=130
2014-01-19 15:21:20,536 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,536 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,536 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=130
2014-01-19 15:21:20,537 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,538 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#130]
2014-01-19 15:21:20,538 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,538 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,538 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,538 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,538 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880805
2014-01-19 15:21:20,538 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,538 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,538 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,545 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,545 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,546 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,546 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-01-19 15:21:20,546 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,547 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#130]
2014-01-19 15:21:20,547 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,547 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,547 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#130]
2014-01-19 15:21:20,547 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#130]
2014-01-19 15:21:20,547 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,547 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,547 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,547 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,547 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-19 15:21:20,547 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,547 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,548 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=130, questionid=jpa.Question#4}
2014-01-19 15:21:20,548 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,548 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-01-19 15:21:20,548 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-19 15:21:20,549 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,550 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,550 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,550 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,550 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880805
2014-01-19 15:21:20,551 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,551 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,551 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,558 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,558 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,558 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 131, using strategy: org.hibernate.id.IncrementGenerator
2014-01-19 15:21:20,558 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,558 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,559 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,559 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-19 15:21:20,559 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,559 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,559 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=131, questionid=jpa.Question#5}
2014-01-19 15:21:20,559 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,559 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-19 15:21:20,559 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-19 15:21:20,560 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,561 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,561 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,561 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,562 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,562 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,562 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-19 15:21:20,562 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,562 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,562 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=131, questionid=jpa.Question#5}
2014-01-19 15:21:20,562 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 131
2014-01-19 15:21:20,563 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '131'

2014-01-19 15:21:20,563 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,563 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-19 15:21:20,563 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-01-19 15:21:20,563 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-19 15:21:20,563 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@277469
2014-01-19 15:21:20,563 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-01-19 15:21:20,563 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-19 15:21:20,564 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 131 ) ) )
2014-01-19 15:21:20,564 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-19 15:21:20,564 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-01-19 15:21:20,564 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-19 15:21:20,564 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '131'

2014-01-19 15:21:20,564 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,564 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 131
2014-01-19 15:21:20,564 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=131
2014-01-19 15:21:20,564 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,565 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,565 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=131
2014-01-19 15:21:20,566 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,566 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#131]
2014-01-19 15:21:20,566 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,566 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,566 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,566 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,566 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880805
2014-01-19 15:21:20,566 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,566 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,567 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,574 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,574 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,575 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,575 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-01-19 15:21:20,576 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,576 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#131]
2014-01-19 15:21:20,576 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,576 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,576 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#131]
2014-01-19 15:21:20,576 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#131]
2014-01-19 15:21:20,576 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,576 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,576 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,577 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,577 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-19 15:21:20,577 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,577 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,577 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=131, questionid=jpa.Question#5}
2014-01-19 15:21:20,577 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,577 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-01-19 15:21:20,577 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-19 15:21:20,578 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,579 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,580 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,580 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,580 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880805
2014-01-19 15:21:20,580 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,580 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,580 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,588 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,588 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,589 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,589 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONTEXT as QUESTION2_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-01-19 15:21:20,590 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,590 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#6]
2014-01-19 15:21:20,590 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#7]
2014-01-19 15:21:20,590 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#8]
2014-01-19 15:21:20,590 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#9]
2014-01-19 15:21:20,590 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#10]
2014-01-19 15:21:20,591 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#11]
2014-01-19 15:21:20,591 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,591 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,591 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#6]
2014-01-19 15:21:20,591 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#6]
2014-01-19 15:21:20,591 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#7]
2014-01-19 15:21:20,591 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#7]
2014-01-19 15:21:20,591 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#8]
2014-01-19 15:21:20,591 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#8]
2014-01-19 15:21:20,591 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#9]
2014-01-19 15:21:20,592 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#9]
2014-01-19 15:21:20,592 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#10]
2014-01-19 15:21:20,592 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#10]
2014-01-19 15:21:20,592 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#11]
2014-01-19 15:21:20,592 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#11]
2014-01-19 15:21:20,592 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,592 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,592 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,592 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,592 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#6], was: [jpa.Question.propositionCollection#6] (uninitialized)
2014-01-19 15:21:20,592 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#6], was: [jpa.Question.reponseHistoCollection#6] (uninitialized)
2014-01-19 15:21:20,592 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#6], was: [jpa.Question.reponseCollection#6] (uninitialized)
2014-01-19 15:21:20,593 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#7], was: [jpa.Question.propositionCollection#7] (uninitialized)
2014-01-19 15:21:20,593 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#7], was: [jpa.Question.reponseHistoCollection#7] (uninitialized)
2014-01-19 15:21:20,593 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#7], was: [jpa.Question.reponseCollection#7] (uninitialized)
2014-01-19 15:21:20,593 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#8], was: [jpa.Question.propositionCollection#8] (uninitialized)
2014-01-19 15:21:20,593 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#8], was: [jpa.Question.reponseHistoCollection#8] (uninitialized)
2014-01-19 15:21:20,593 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#8], was: [jpa.Question.reponseCollection#8] (uninitialized)
2014-01-19 15:21:20,593 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#9], was: [jpa.Question.propositionCollection#9] (uninitialized)
2014-01-19 15:21:20,593 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#9], was: [jpa.Question.reponseHistoCollection#9] (uninitialized)
2014-01-19 15:21:20,593 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#9], was: [jpa.Question.reponseCollection#9] (uninitialized)
2014-01-19 15:21:20,593 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#10], was: [jpa.Question.propositionCollection#10] (uninitialized)
2014-01-19 15:21:20,593 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#10], was: [jpa.Question.reponseHistoCollection#10] (uninitialized)
2014-01-19 15:21:20,593 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#10], was: [jpa.Question.reponseCollection#10] (uninitialized)
2014-01-19 15:21:20,593 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#11], was: [jpa.Question.propositionCollection#11] (uninitialized)
2014-01-19 15:21:20,594 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#11], was: [jpa.Question.reponseHistoCollection#11] (uninitialized)
2014-01-19 15:21:20,594 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#11], was: [jpa.Question.reponseCollection#11] (uninitialized)
2014-01-19 15:21:20,594 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
2014-01-19 15:21:20,594 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 18 collections
2014-01-19 15:21:20,594 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,594 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=10}
2014-01-19 15:21:20,594 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Boucles foreach imbriquées. Soit le tableau array. A l’aide des boucles foreach affichez le résultat ci-dessous., questionid=11}
2014-01-19 15:21:20,594 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Boucle imbriquées, affichez la table de multiplication du chiffre 12.Codez l'algorithme ci-dessous., questionid=9}
2014-01-19 15:21:20,594 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Soit le tableau fruits : codez le reste de l’algorithme., questionid=8}
2014-01-19 15:21:20,594 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=7}
2014-01-19 15:21:20,594 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Affichez toutes les valeurs du tableau avec la boucle foreach (K + V)., questionid=6}
2014-01-19 15:21:20,595 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,596 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,596 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,596 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880805
2014-01-19 15:21:20,596 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,596 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,596 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,604 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,604 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,604 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 132, using strategy: org.hibernate.id.IncrementGenerator
2014-01-19 15:21:20,604 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,604 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,604 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,605 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-19 15:21:20,605 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,605 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,605 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=132, questionid=jpa.Question#6}
2014-01-19 15:21:20,605 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,605 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-19 15:21:20,605 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-19 15:21:20,606 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,607 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,607 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,608 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,608 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,608 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,608 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-19 15:21:20,608 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,608 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,608 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=132, questionid=jpa.Question#6}
2014-01-19 15:21:20,609 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 132
2014-01-19 15:21:20,610 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '132'

2014-01-19 15:21:20,610 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,610 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-19 15:21:20,610 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-01-19 15:21:20,610 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-19 15:21:20,610 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@277469
2014-01-19 15:21:20,610 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-01-19 15:21:20,610 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-19 15:21:20,610 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 132 ) ) )
2014-01-19 15:21:20,611 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-19 15:21:20,611 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-01-19 15:21:20,611 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-19 15:21:20,611 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '132'

2014-01-19 15:21:20,611 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,611 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 132
2014-01-19 15:21:20,611 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=132
2014-01-19 15:21:20,611 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,611 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,612 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=132
2014-01-19 15:21:20,613 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,613 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#132]
2014-01-19 15:21:20,613 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,613 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,613 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,613 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,613 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880806
2014-01-19 15:21:20,613 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,613 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,613 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,621 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,622 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,623 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,623 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-01-19 15:21:20,624 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,624 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#132]
2014-01-19 15:21:20,624 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,625 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,625 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#132]
2014-01-19 15:21:20,625 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#132]
2014-01-19 15:21:20,625 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,625 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,625 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,625 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,625 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-19 15:21:20,626 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,626 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,626 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=132, questionid=jpa.Question#6}
2014-01-19 15:21:20,626 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,626 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-01-19 15:21:20,626 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-19 15:21:20,628 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,629 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,631 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,631 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,631 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880806
2014-01-19 15:21:20,631 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,631 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,631 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,639 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,639 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,640 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 133, using strategy: org.hibernate.id.IncrementGenerator
2014-01-19 15:21:20,640 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,640 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,640 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,640 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-19 15:21:20,641 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,641 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,641 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=133, questionid=jpa.Question#7}
2014-01-19 15:21:20,641 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,641 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-19 15:21:20,641 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-19 15:21:20,642 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,643 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,644 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,644 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,644 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,644 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,644 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-19 15:21:20,644 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,644 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,644 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=133, questionid=jpa.Question#7}
2014-01-19 15:21:20,644 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 133
2014-01-19 15:21:20,645 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '133'

2014-01-19 15:21:20,645 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,645 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-19 15:21:20,645 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-01-19 15:21:20,645 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-19 15:21:20,646 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@277469
2014-01-19 15:21:20,646 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-01-19 15:21:20,646 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-19 15:21:20,646 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 133 ) ) )
2014-01-19 15:21:20,646 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-19 15:21:20,646 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-01-19 15:21:20,646 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-19 15:21:20,696 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '133'

2014-01-19 15:21:20,696 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,696 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 133
2014-01-19 15:21:20,696 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=133
2014-01-19 15:21:20,696 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,697 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,697 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=133
2014-01-19 15:21:20,699 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,699 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#133]
2014-01-19 15:21:20,700 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,700 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,700 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,700 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,700 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880807
2014-01-19 15:21:20,700 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,700 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,700 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,712 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,712 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,713 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,713 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-01-19 15:21:20,714 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,714 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#133]
2014-01-19 15:21:20,714 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,714 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,715 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#133]
2014-01-19 15:21:20,715 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#133]
2014-01-19 15:21:20,715 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,715 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,715 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,715 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,715 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-19 15:21:20,715 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,715 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,715 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=133, questionid=jpa.Question#7}
2014-01-19 15:21:20,715 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,715 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-01-19 15:21:20,716 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-19 15:21:20,716 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,718 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,718 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,718 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,719 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880807
2014-01-19 15:21:20,719 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,719 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,719 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,726 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,726 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,727 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 134, using strategy: org.hibernate.id.IncrementGenerator
2014-01-19 15:21:20,727 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,727 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,727 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,727 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-19 15:21:20,728 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,728 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,728 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=134, questionid=jpa.Question#8}
2014-01-19 15:21:20,728 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,728 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-19 15:21:20,728 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-19 15:21:20,729 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,730 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,730 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,730 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,731 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,731 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,731 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-19 15:21:20,731 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,731 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,731 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=134, questionid=jpa.Question#8}
2014-01-19 15:21:20,731 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 134
2014-01-19 15:21:20,732 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '134'

2014-01-19 15:21:20,732 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,732 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-19 15:21:20,732 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-01-19 15:21:20,732 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-19 15:21:20,732 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@277469
2014-01-19 15:21:20,732 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-01-19 15:21:20,733 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-19 15:21:20,733 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 134 ) ) )
2014-01-19 15:21:20,733 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-19 15:21:20,733 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-01-19 15:21:20,733 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-19 15:21:20,733 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '134'

2014-01-19 15:21:20,733 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,733 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 134
2014-01-19 15:21:20,733 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=134
2014-01-19 15:21:20,733 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,734 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,734 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=134
2014-01-19 15:21:20,735 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,735 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#134]
2014-01-19 15:21:20,736 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,736 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,736 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,736 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,736 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880807
2014-01-19 15:21:20,736 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,736 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,736 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,745 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,745 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,746 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,746 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-01-19 15:21:20,747 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,747 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#134]
2014-01-19 15:21:20,747 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,747 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,747 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#134]
2014-01-19 15:21:20,747 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#134]
2014-01-19 15:21:20,747 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,748 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,748 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,748 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,748 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-19 15:21:20,748 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,748 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,748 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=134, questionid=jpa.Question#8}
2014-01-19 15:21:20,748 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,748 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-01-19 15:21:20,748 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-19 15:21:20,750 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,751 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,751 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,751 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,751 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880807
2014-01-19 15:21:20,751 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,751 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,751 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,758 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,758 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,759 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 135, using strategy: org.hibernate.id.IncrementGenerator
2014-01-19 15:21:20,759 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,759 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,759 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,759 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-19 15:21:20,759 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,759 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,760 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=135, questionid=jpa.Question#9}
2014-01-19 15:21:20,760 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,760 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-19 15:21:20,760 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-19 15:21:20,761 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,762 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,762 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,762 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,762 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,762 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,763 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-19 15:21:20,763 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,763 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,763 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=135, questionid=jpa.Question#9}
2014-01-19 15:21:20,763 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 135
2014-01-19 15:21:20,764 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '135'

2014-01-19 15:21:20,764 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,764 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-19 15:21:20,764 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-01-19 15:21:20,764 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-19 15:21:20,764 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@277469
2014-01-19 15:21:20,764 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-01-19 15:21:20,764 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-19 15:21:20,764 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 135 ) ) )
2014-01-19 15:21:20,764 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-19 15:21:20,765 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-01-19 15:21:20,765 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-19 15:21:20,765 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '135'

2014-01-19 15:21:20,765 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,765 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 135
2014-01-19 15:21:20,765 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=135
2014-01-19 15:21:20,765 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,765 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,765 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=135
2014-01-19 15:21:20,767 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,767 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#135]
2014-01-19 15:21:20,767 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,767 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,767 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,767 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,767 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880807
2014-01-19 15:21:20,767 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,767 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,768 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,776 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,776 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,777 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,777 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-01-19 15:21:20,778 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,778 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#135]
2014-01-19 15:21:20,779 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,779 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,779 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#135]
2014-01-19 15:21:20,779 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#135]
2014-01-19 15:21:20,779 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,779 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,779 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,779 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,779 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-19 15:21:20,779 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,779 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,779 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=135, questionid=jpa.Question#9}
2014-01-19 15:21:20,780 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,780 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-01-19 15:21:20,780 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-19 15:21:20,781 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,782 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,783 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,783 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,783 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880807
2014-01-19 15:21:20,783 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,783 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,784 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,792 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,792 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,793 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 136, using strategy: org.hibernate.id.IncrementGenerator
2014-01-19 15:21:20,793 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,793 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,793 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,793 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-19 15:21:20,793 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,793 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,794 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=136, questionid=jpa.Question#10}
2014-01-19 15:21:20,794 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,794 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-19 15:21:20,794 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-19 15:21:20,795 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,796 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,796 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,797 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,797 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,797 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,797 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-19 15:21:20,797 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,797 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,797 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=136, questionid=jpa.Question#10}
2014-01-19 15:21:20,797 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 136
2014-01-19 15:21:20,798 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '136'

2014-01-19 15:21:20,798 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,798 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-19 15:21:20,798 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-01-19 15:21:20,798 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-19 15:21:20,798 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@277469
2014-01-19 15:21:20,799 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-01-19 15:21:20,799 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-19 15:21:20,799 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 136 ) ) )
2014-01-19 15:21:20,799 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-19 15:21:20,799 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-01-19 15:21:20,799 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-19 15:21:20,799 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '136'

2014-01-19 15:21:20,799 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,799 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 136
2014-01-19 15:21:20,799 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=136
2014-01-19 15:21:20,800 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,800 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,800 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=136
2014-01-19 15:21:20,801 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,801 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#136]
2014-01-19 15:21:20,802 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,802 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,802 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,802 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,802 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880808
2014-01-19 15:21:20,802 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,802 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,802 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,809 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,810 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,810 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,810 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-01-19 15:21:20,811 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,811 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#136]
2014-01-19 15:21:20,812 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,812 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,812 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#136]
2014-01-19 15:21:20,812 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#136]
2014-01-19 15:21:20,812 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,812 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,812 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,812 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,812 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-19 15:21:20,812 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,812 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,812 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=136, questionid=jpa.Question#10}
2014-01-19 15:21:20,813 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,813 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-01-19 15:21:20,813 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-19 15:21:20,814 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,815 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,816 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,816 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,816 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880808
2014-01-19 15:21:20,816 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,816 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,816 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,823 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,824 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,824 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 137, using strategy: org.hibernate.id.IncrementGenerator
2014-01-19 15:21:20,824 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,824 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,824 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,825 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-01-19 15:21:20,825 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,825 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,825 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=137, questionid=jpa.Question#11}
2014-01-19 15:21:20,825 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,825 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-01-19 15:21:20,825 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-19 15:21:20,826 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,827 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,828 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,828 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,828 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,828 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,828 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-19 15:21:20,828 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,828 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,828 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=137, questionid=jpa.Question#11}
2014-01-19 15:21:20,828 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 137
2014-01-19 15:21:20,829 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '137'

2014-01-19 15:21:20,829 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,829 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-01-19 15:21:20,829 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-01-19 15:21:20,829 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-01-19 15:21:20,830 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@277469
2014-01-19 15:21:20,830 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-01-19 15:21:20,830 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-01-19 15:21:20,830 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 137 ) ) )
2014-01-19 15:21:20,830 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-01-19 15:21:20,830 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-01-19 15:21:20,830 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-01-19 15:21:20,830 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '137'

2014-01-19 15:21:20,830 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,831 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 137
2014-01-19 15:21:20,831 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=137
2014-01-19 15:21:20,831 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-01-19 15:21:20,831 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,831 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=137
2014-01-19 15:21:20,832 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,833 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#137]
2014-01-19 15:21:20,833 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,833 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,833 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,833 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,833 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880808
2014-01-19 15:21:20,833 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,833 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,833 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,841 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,842 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,842 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,842 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-01-19 15:21:20,843 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,843 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#137]
2014-01-19 15:21:20,844 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,844 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,844 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#137]
2014-01-19 15:21:20,844 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#137]
2014-01-19 15:21:20,844 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,844 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,844 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,844 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,844 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-01-19 15:21:20,844 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,844 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,844 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=137, questionid=jpa.Question#11}
2014-01-19 15:21:20,844 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,845 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-01-19 15:21:20,845 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-01-19 15:21:20,846 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,847 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,847 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,847 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,848 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880808
2014-01-19 15:21:20,848 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,848 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,848 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,856 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,856 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,856 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,856 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select test0_.TESTID as TESTID3_, test0_.TESTMATIERE as TESTMATI2_3_, test0_.TESTDUREE as TESTDUREE3_, test0_.TEST_NBQUESTION_RUB as TEST4_3_, test0_.TESTNATURE as TESTNATURE3_, test0_.TESTFORMAT as TESTFORMAT3_, test0_.TEST_START as TEST7_3_, test0_.TEST_DESCRIPTION as TEST8_3_, test0_.THEME as THEME3_, test0_.NIVEAU as NIVEAU3_, test0_.CATEGORIEID as CATEGOR11_3_ from test test0_ where test0_.TESTID=1
2014-01-19 15:21:20,857 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,857 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#1]
2014-01-19 15:21:20,858 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,858 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,858 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#1]
2014-01-19 15:21:20,858 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#1]
2014-01-19 15:21:20,858 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,858 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,859 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,859 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,859 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.rubriqueCollection#1], was: [jpa.Test.rubriqueCollection#1] (uninitialized)
2014-01-19 15:21:20,859 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.jointureCollection#1], was: [jpa.Test.jointureCollection#1] (uninitialized)
2014-01-19 15:21:20,859 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-19 15:21:20,859 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2014-01-19 15:21:20,859 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,859 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Test{rubriqueCollection=<uninitialized>, testmatiere=Développement PHP, testformat=PHP, theme=Boucles en PHP, jointureCollection=<uninitialized>, testnature=THEM, testid=1, testDescription=Les boucles permettent d'effectuer un certain nombre de fois les mêmes opérations, par exemple afficher une suite de nombres que l'on incrémentera à chaque tour de boucle. 
Vous allez pouvoir répéter autant d'instructions que vous souhaitez et vous arrêter lorsque vous l'aurez décidé.
Ce test vérifiera les compétences du candidat sur ces notions élémentaires.
, categorieid=jpa.Categorie#1, testStart=Instructions début, niveau=1, testNbquestionRub=10, testduree=20}
2014-01-19 15:21:20,860 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,861 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,861 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,861 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880808
2014-01-19 15:21:20,861 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,861 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,861 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,868 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,868 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,869 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,869 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ cross join question question1_ cross join rubrique rubrique2_ where propositio0_.QUESTIONID=question1_.QUESTIONID and question1_.RUBRIQUEID=rubrique2_.RUBRIQUEID and rubrique2_.TESTID=?
2014-01-19 15:21:20,870 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,870 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#1]
2014-01-19 15:21:20,870 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#2]
2014-01-19 15:21:20,870 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#3]
2014-01-19 15:21:20,870 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#4]
2014-01-19 15:21:20,870 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#5]
2014-01-19 15:21:20,871 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#6]
2014-01-19 15:21:20,871 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#7]
2014-01-19 15:21:20,871 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#8]
2014-01-19 15:21:20,871 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#9]
2014-01-19 15:21:20,871 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#10]
2014-01-19 15:21:20,871 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#11]
2014-01-19 15:21:20,871 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,871 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,871 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#1]
2014-01-19 15:21:20,872 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#1]
2014-01-19 15:21:20,872 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#2]
2014-01-19 15:21:20,872 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#2]
2014-01-19 15:21:20,872 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#3]
2014-01-19 15:21:20,872 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#3]
2014-01-19 15:21:20,872 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#4]
2014-01-19 15:21:20,872 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#4]
2014-01-19 15:21:20,872 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#5]
2014-01-19 15:21:20,872 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#5]
2014-01-19 15:21:20,872 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#6]
2014-01-19 15:21:20,872 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#6]
2014-01-19 15:21:20,872 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#7]
2014-01-19 15:21:20,872 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#7]
2014-01-19 15:21:20,872 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#8]
2014-01-19 15:21:20,873 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#8]
2014-01-19 15:21:20,873 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#9]
2014-01-19 15:21:20,873 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#9]
2014-01-19 15:21:20,873 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#10]
2014-01-19 15:21:20,873 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#10]
2014-01-19 15:21:20,873 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#11]
2014-01-19 15:21:20,873 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#11]
2014-01-19 15:21:20,873 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,873 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,873 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,873 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,874 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 11 objects
2014-01-19 15:21:20,876 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,876 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,876 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 1, propositionvrai=1, propositionid=1, questionid=jpa.Question#1}
2014-01-19 15:21:20,877 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 3, propositionvrai=1, propositionid=3, questionid=jpa.Question#3}
2014-01-19 15:21:20,877 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 2, propositionvrai=1, propositionid=2, questionid=jpa.Question#2}
2014-01-19 15:21:20,877 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 9, propositionvrai=1, propositionid=9, questionid=jpa.Question#9}
2014-01-19 15:21:20,877 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 5, propositionvrai=1, propositionid=5, questionid=jpa.Question#5}
2014-01-19 15:21:20,877 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 8, propositionvrai=1, propositionid=8, questionid=jpa.Question#8}
2014-01-19 15:21:20,878 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 4, propositionvrai=1, propositionid=4, questionid=jpa.Question#4}
2014-01-19 15:21:20,878 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 11, propositionvrai=1, propositionid=11, questionid=jpa.Question#11}
2014-01-19 15:21:20,878 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 7, propositionvrai=1, propositionid=7, questionid=jpa.Question#7}
2014-01-19 15:21:20,878 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 10, propositionvrai=1, propositionid=10, questionid=jpa.Question#10}
2014-01-19 15:21:20,878 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 6, propositionvrai=1, propositionid=6, questionid=jpa.Question#6}
2014-01-19 15:21:20,879 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,880 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,880 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,880 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880808
2014-01-19 15:21:20,881 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,881 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,881 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,889 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,889 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,890 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,890 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,891 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,891 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,891 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,891 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.TESTID as TESTID3_0_, this_.TESTMATIERE as TESTMATI2_3_0_, this_.TESTDUREE as TESTDUREE3_0_, this_.TEST_NBQUESTION_RUB as TEST4_3_0_, this_.TESTNATURE as TESTNATURE3_0_, this_.TESTFORMAT as TESTFORMAT3_0_, this_.TEST_START as TEST7_3_0_, this_.TEST_DESCRIPTION as TEST8_3_0_, this_.THEME as THEME3_0_, this_.NIVEAU as NIVEAU3_0_, this_.CATEGORIEID as CATEGOR11_3_0_ from test this_
2014-01-19 15:21:20,892 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,892 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#1]
2014-01-19 15:21:20,893 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#2]
2014-01-19 15:21:20,893 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#3]
2014-01-19 15:21:20,893 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#4]
2014-01-19 15:21:20,893 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#5]
2014-01-19 15:21:20,893 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#6]
2014-01-19 15:21:20,893 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,893 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,893 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#1]
2014-01-19 15:21:20,893 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#1]
2014-01-19 15:21:20,894 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#2]
2014-01-19 15:21:20,894 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#2]
2014-01-19 15:21:20,894 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#3]
2014-01-19 15:21:20,894 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#3]
2014-01-19 15:21:20,894 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#4]
2014-01-19 15:21:20,894 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#4]
2014-01-19 15:21:20,894 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#5]
2014-01-19 15:21:20,894 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#5]
2014-01-19 15:21:20,894 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#6]
2014-01-19 15:21:20,894 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#6]
2014-01-19 15:21:20,894 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,894 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,895 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880808
2014-01-19 15:21:20,895 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,895 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,895 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,902 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,903 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,903 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,903 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONTEXT as QUESTION2_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.QUESTIONID=16
2014-01-19 15:21:20,904 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,904 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#16]
2014-01-19 15:21:20,904 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,904 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,904 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#16]
2014-01-19 15:21:20,905 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#16]
2014-01-19 15:21:20,905 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,905 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,905 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,905 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,905 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#16], was: [jpa.Question.propositionCollection#16] (uninitialized)
2014-01-19 15:21:20,905 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#16], was: [jpa.Question.reponseHistoCollection#16] (uninitialized)
2014-01-19 15:21:20,905 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#16], was: [jpa.Question.reponseCollection#16] (uninitialized)
2014-01-19 15:21:20,905 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-19 15:21:20,905 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2014-01-19 15:21:20,905 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,905 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, rubriqueid=jpa.Rubrique#10, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=A quoi sert l'opérateur @ en php ?, questionid=16}
2014-01-19 15:21:20,906 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,907 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,907 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,907 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880809
2014-01-19 15:21:20,907 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,907 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,907 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,914 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,914 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,915 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,915 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.QUESTIONID=? and propositio0_.PROPOSITIONVRAI=1
2014-01-19 15:21:20,916 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,916 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#50]
2014-01-19 15:21:20,916 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,916 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,916 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#50]
2014-01-19 15:21:20,916 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#50]
2014-01-19 15:21:20,916 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,916 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,916 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,916 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,917 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-19 15:21:20,917 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-01-19 15:21:20,917 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,917 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=bloquer les messages d'erreurs, propositionvrai=1, propositionid=50, questionid=jpa.Question#16}
2014-01-19 15:21:20,918 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,918 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,918 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,919 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880809
2014-01-19 15:21:20,919 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,919 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,919 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,925 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,926 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,926 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,926 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select passage0_.PASSAGEID as PASSAGEID5_, passage0_.PASSAGE_ETAT as PASSAGE2_5_, passage0_.PASSAGE_DATE as PASSAGE3_5_, passage0_.PASSAGEDEBUT_VAL as PASSAGED4_5_, passage0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_, passage0_.CANDIDATID as CANDIDATID5_ from passage passage0_ where passage0_.PASSAGEID=1
2014-01-19 15:21:20,927 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,927 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,927 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,927 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,928 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,928 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,929 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,929 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-01-19 15:21:20,929 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13901880809
2014-01-19 15:21:20,929 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-01-19 15:21:20,929 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-01-19 15:21:20,929 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-01-19 15:21:20,938 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-01-19 15:21:20,938 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-01-19 15:21:20,939 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-01-19 15:21:20,939 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select test0_.TESTID as TESTID3_, test0_.TESTMATIERE as TESTMATI2_3_, test0_.TESTDUREE as TESTDUREE3_, test0_.TEST_NBQUESTION_RUB as TEST4_3_, test0_.TESTNATURE as TESTNATURE3_, test0_.TESTFORMAT as TESTFORMAT3_, test0_.TEST_START as TEST7_3_, test0_.TEST_DESCRIPTION as TEST8_3_, test0_.THEME as THEME3_, test0_.NIVEAU as NIVEAU3_, test0_.CATEGORIEID as CATEGOR11_3_ from test test0_ where test0_.TESTID=6
2014-01-19 15:21:20,940 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-01-19 15:21:20,940 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#6]
2014-01-19 15:21:20,940 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-01-19 15:21:20,940 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-01-19 15:21:20,940 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#6]
2014-01-19 15:21:20,940 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#6]
2014-01-19 15:21:20,940 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-01-19 15:21:20,940 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-01-19 15:21:20,941 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-01-19 15:21:20,941 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-01-19 15:21:20,941 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.rubriqueCollection#6], was: [jpa.Test.rubriqueCollection#6] (uninitialized)
2014-01-19 15:21:20,941 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.jointureCollection#6], was: [jpa.Test.jointureCollection#6] (uninitialized)
2014-01-19 15:21:20,941 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-01-19 15:21:20,941 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2014-01-19 15:21:20,941 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-01-19 15:21:20,941 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Test{rubriqueCollection=<uninitialized>, testmatiere=Développement PHP, testformat=QCM, theme=QCM : PHP et MySQL, jointureCollection=<uninitialized>, testnature=QCM, testid=6, testDescription=Ce test s'adresse à un développeur Web pour les technologies Php et Mysql. Le test ne porte pas sur la programmation avancée en Mysql mais sur des requêtes usuelles., categorieid=jpa.Categorie#1, testStart=Instructions de début, niveau=1, testNbquestionRub=21, testduree=20}
2014-01-19 15:21:20,942 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-01-19 15:21:20,943 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-01-19 15:21:20,943 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
