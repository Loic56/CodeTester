2014-05-16 22:32:05,976 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:05,977 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:05,977 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: jpa.Question.propositionCollection
2014-05-16 22:32:05,977 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:275) - collection fully initialized: [jpa.Question.propositionCollection#13]
2014-05-16 22:32:05,977 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:241) - 1 collections initialized for role: jpa.Question.propositionCollection
2014-05-16 22:32:05,977 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:05,978 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2182) - done loading collection
2014-05-16 22:32:05,978 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227259
2014-05-16 22:32:05,978 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:05,978 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:05,978 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:05,991 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:05,992 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:05,992 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 3, using strategy: org.hibernate.id.IncrementGenerator
2014-05-16 22:32:05,993 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:05,993 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:05,993 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:05,993 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:05,993 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:05,993 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:05,994 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=3, reponsemessage=fuck la réponse ! , reponsetexte=, reponseduree=null, questionid=jpa.Question#14, passageid=jpa.Passage#2}
2014-05-16 22:32:05,994 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:05,994 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into reponse (REPONSETEXTE, REPONSEDUREE, REPONSEMESSAGE, PASSAGEID, QUESTIONID, REPONSEID) values (?, ?, ?, ?, ?, ?)
2014-05-16 22:32:05,995 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:05,996 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:05,997 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:05,998 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:05,998 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:05,998 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:05,998 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:05,998 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:05,999 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:05,999 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:05,999 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=3, reponsemessage=fuck la réponse ! , reponsetexte=, reponseduree=null, questionid=jpa.Question#14, passageid=jpa.Passage#2}
2014-05-16 22:32:05,999 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Reponse where reponseid = 3
2014-05-16 22:32:06,001 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Reponse'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'reponseid'
          \-[NUM_INT] Node: '3'

2014-05-16 22:32:06,001 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,001 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-05-16 22:32:06,002 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Reponse (no alias) -> reponse0_
2014-05-16 22:32:06,002 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-05-16 22:32:06,002 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : reponseid -> org.hibernate.type.IntegerType@1871392
2014-05-16 22:32:06,003 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.reponseid -> reponse0_.REPONSEID
2014-05-16 22:32:06,003 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-05-16 22:32:06,003 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} reponse reponse0_ ) ( where ( = ( reponse0_.REPONSEID {synthetic-alias} reponseid ) 3 ) ) )
2014-05-16 22:32:06,003 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-05-16 22:32:06,004 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [reponse reponse0_]
2014-05-16 22:32:06,004 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-05-16 22:32:06,004 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (reponse)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'reponse0_.REPONSEID as REPONSEID8_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=reponse,tableAlias=reponse0_,origin=null,columns={,className=jpa.Reponse}}}
    |  \-[SQL_TOKEN] SqlFragment: 'reponse0_.REPONSETEXTE as REPONSET2_8_, reponse0_.REPONSEDUREE as REPONSED3_8_, reponse0_.REPONSEMESSAGE as REPONSEM4_8_, reponse0_.PASSAGEID as PASSAGEID8_, reponse0_.QUESTIONID as QUESTIONID8_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[reponse0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'reponse reponse0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=reponse,tableAlias=reponse0_,origin=null,columns={,className=jpa.Reponse}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'reponse0_.REPONSEID' {propertyName=reponseid,dereferenceType=ALL,propertyPath=reponseid,path={synthetic-alias}.reponseid,tableAlias=reponse0_,className=jpa.Reponse,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'reponseid' {originalText=reponseid}
          \-[NUM_INT] LiteralNode: '3'

2014-05-16 22:32:06,004 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,005 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Reponse where reponseid = 3
2014-05-16 22:32:06,005 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select reponse0_.REPONSEID as REPONSEID8_, reponse0_.REPONSETEXTE as REPONSET2_8_, reponse0_.REPONSEDUREE as REPONSED3_8_, reponse0_.REPONSEMESSAGE as REPONSEM4_8_, reponse0_.PASSAGEID as PASSAGEID8_, reponse0_.QUESTIONID as QUESTIONID8_ from reponse reponse0_ where reponse0_.REPONSEID=3
2014-05-16 22:32:06,005 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,005 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,006 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select reponse0_.REPONSEID as REPONSEID8_, reponse0_.REPONSETEXTE as REPONSET2_8_, reponse0_.REPONSEDUREE as REPONSED3_8_, reponse0_.REPONSEMESSAGE as REPONSEM4_8_, reponse0_.PASSAGEID as PASSAGEID8_, reponse0_.QUESTIONID as QUESTIONID8_ from reponse reponse0_ where reponse0_.REPONSEID=3
2014-05-16 22:32:06,006 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,007 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#3]
2014-05-16 22:32:06,007 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,007 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,007 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,008 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,008 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2158) - loading collection: [jpa.Question.reponseCollection#14]
2014-05-16 22:32:06,008 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,008 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select reponsecol0_.QUESTIONID as QUESTIONID9_1_, reponsecol0_.REPONSEID as REPONSEID1_, reponsecol0_.REPONSEID as REPONSEID8_0_, reponsecol0_.REPONSETEXTE as REPONSET2_8_0_, reponsecol0_.REPONSEDUREE as REPONSED3_8_0_, reponsecol0_.REPONSEMESSAGE as REPONSEM4_8_0_, reponsecol0_.PASSAGEID as PASSAGEID8_0_, reponsecol0_.QUESTIONID as QUESTIONID8_0_ from reponse reponsecol0_ where reponsecol0_.QUESTIONID=?
2014-05-16 22:32:06,009 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,009 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1203) - result set contains (possibly empty) collection: [jpa.Question.reponseCollection#14]
2014-05-16 22:32:06,010 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#3]
2014-05-16 22:32:06,010 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Question.reponseCollection#14]
2014-05-16 22:32:06,010 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,010 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,011 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#3]
2014-05-16 22:32:06,011 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#3]
2014-05-16 22:32:06,011 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: jpa.Question.reponseCollection
2014-05-16 22:32:06,011 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:275) - collection fully initialized: [jpa.Question.reponseCollection#14]
2014-05-16 22:32:06,011 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:241) - 1 collections initialized for role: jpa.Question.reponseCollection
2014-05-16 22:32:06,012 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,012 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2182) - done loading collection
2014-05-16 22:32:06,012 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227260
2014-05-16 22:32:06,012 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,012 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,012 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,021 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,021 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,021 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2022) - loading entity: [jpa.Question#14]
2014-05-16 22:32:06,022 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,022 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_0_, question0_.QUESTIONIMAGE as QUESTION2_9_0_, question0_.QUESTIONTEXT as QUESTION3_9_0_, question0_.RUBRIQUEID as RUBRIQUEID9_0_ from question question0_ where question0_.QUESTIONID=?
2014-05-16 22:32:06,023 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,023 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#14]
2014-05-16 22:32:06,023 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,024 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,024 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#14]
2014-05-16 22:32:06,024 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#14]
2014-05-16 22:32:06,025 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,025 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2050) - done entity load
2014-05-16 22:32:06,025 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2022) - loading entity: [jpa.Reponse#3]
2014-05-16 22:32:06,025 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,026 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select reponse0_.REPONSEID as REPONSEID8_0_, reponse0_.REPONSETEXTE as REPONSET2_8_0_, reponse0_.REPONSEDUREE as REPONSED3_8_0_, reponse0_.REPONSEMESSAGE as REPONSEM4_8_0_, reponse0_.PASSAGEID as PASSAGEID8_0_, reponse0_.QUESTIONID as QUESTIONID8_0_ from reponse reponse0_ where reponse0_.REPONSEID=?
2014-05-16 22:32:06,026 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,027 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#3]
2014-05-16 22:32:06,027 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,028 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,028 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#3]
2014-05-16 22:32:06,028 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#3]
2014-05-16 22:32:06,028 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,029 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2050) - done entity load
2014-05-16 22:32:06,029 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2158) - loading collection: [jpa.Question.reponseCollection#14]
2014-05-16 22:32:06,029 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,029 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select reponsecol0_.QUESTIONID as QUESTIONID9_1_, reponsecol0_.REPONSEID as REPONSEID1_, reponsecol0_.REPONSEID as REPONSEID8_0_, reponsecol0_.REPONSETEXTE as REPONSET2_8_0_, reponsecol0_.REPONSEDUREE as REPONSED3_8_0_, reponsecol0_.REPONSEMESSAGE as REPONSEM4_8_0_, reponsecol0_.PASSAGEID as PASSAGEID8_0_, reponsecol0_.QUESTIONID as QUESTIONID8_0_ from reponse reponsecol0_ where reponsecol0_.QUESTIONID=?
2014-05-16 22:32:06,030 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,031 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1203) - result set contains (possibly empty) collection: [jpa.Question.reponseCollection#14]
2014-05-16 22:32:06,031 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#3]
2014-05-16 22:32:06,031 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Question.reponseCollection#14]
2014-05-16 22:32:06,031 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,032 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,032 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: jpa.Question.reponseCollection
2014-05-16 22:32:06,032 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:275) - collection fully initialized: [jpa.Question.reponseCollection#14]
2014-05-16 22:32:06,032 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:241) - 1 collections initialized for role: jpa.Question.reponseCollection
2014-05-16 22:32:06,033 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,033 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2182) - done loading collection
2014-05-16 22:32:06,033 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,033 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,033 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,034 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#14], was: [jpa.Question.propositionCollection#14] (uninitialized)
2014-05-16 22:32:06,034 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#14], was: [jpa.Question.reponseHistoCollection#14] (uninitialized)
2014-05-16 22:32:06,034 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#14], was: [jpa.Question.reponseCollection#14] (initialized)
2014-05-16 22:32:06,034 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2014-05-16 22:32:06,034 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2014-05-16 22:32:06,034 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,035 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=3, reponsemessage=fuck la réponse ! , reponsetexte=, reponseduree=null, questionid=jpa.Question#14, passageid=jpa.Passage#2}
2014-05-16 22:32:06,035 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=[jpa.Reponse#3], questionimage=, rubriqueid=jpa.Rubrique#10, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Les pointeurs d'un tableau sont insérés entre ?, questionid=14}
2014-05-16 22:32:06,035 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,036 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,036 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,036 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,036 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,037 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#14], was: [jpa.Question.propositionCollection#14] (uninitialized)
2014-05-16 22:32:06,037 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#14], was: [jpa.Question.reponseHistoCollection#14] (uninitialized)
2014-05-16 22:32:06,037 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#14], was: [jpa.Question.reponseCollection#14] (initialized)
2014-05-16 22:32:06,037 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2014-05-16 22:32:06,037 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2014-05-16 22:32:06,038 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,038 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=3, reponsemessage=fuck la réponse ! , reponsetexte=, reponseduree=null, questionid=jpa.Question#14, passageid=jpa.Passage#2}
2014-05-16 22:32:06,038 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=[jpa.Reponse#3], questionimage=, rubriqueid=jpa.Rubrique#10, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Les pointeurs d'un tableau sont insérés entre ?, questionid=14}
2014-05-16 22:32:06,038 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Question where questionid = 14
2014-05-16 22:32:06,040 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Question'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'questionid'
          \-[NUM_INT] Node: '14'

2014-05-16 22:32:06,041 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,041 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-05-16 22:32:06,041 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Question (no alias) -> question0_
2014-05-16 22:32:06,041 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-05-16 22:32:06,042 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : questionid -> org.hibernate.type.IntegerType@1871392
2014-05-16 22:32:06,042 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.questionid -> question0_.QUESTIONID
2014-05-16 22:32:06,042 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-05-16 22:32:06,042 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} question question0_ ) ( where ( = ( question0_.QUESTIONID {synthetic-alias} questionid ) 14 ) ) )
2014-05-16 22:32:06,043 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-05-16 22:32:06,043 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [question question0_]
2014-05-16 22:32:06,043 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-05-16 22:32:06,044 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (question)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'question0_.QUESTIONID as QUESTIONID9_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=question,tableAlias=question0_,origin=null,columns={,className=jpa.Question}}}
    |  \-[SQL_TOKEN] SqlFragment: 'question0_.QUESTIONIMAGE as QUESTION2_9_, question0_.QUESTIONTEXT as QUESTION3_9_, question0_.RUBRIQUEID as RUBRIQUEID9_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[question0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'question question0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=question,tableAlias=question0_,origin=null,columns={,className=jpa.Question}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'question0_.QUESTIONID' {propertyName=questionid,dereferenceType=ALL,propertyPath=questionid,path={synthetic-alias}.questionid,tableAlias=question0_,className=jpa.Question,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'questionid' {originalText=questionid}
          \-[NUM_INT] LiteralNode: '14'

2014-05-16 22:32:06,044 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,044 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Question where questionid = 14
2014-05-16 22:32:06,044 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONIMAGE as QUESTION2_9_, question0_.QUESTIONTEXT as QUESTION3_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.QUESTIONID=14
2014-05-16 22:32:06,044 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,045 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,045 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONIMAGE as QUESTION2_9_, question0_.QUESTIONTEXT as QUESTION3_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.QUESTIONID=14
2014-05-16 22:32:06,046 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,046 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#14]
2014-05-16 22:32:06,046 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,047 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,047 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,047 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,047 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2158) - loading collection: [jpa.Question.propositionCollection#14]
2014-05-16 22:32:06,047 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,048 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.QUESTIONID as QUESTIONID9_1_, propositio0_.PROPOSITIONID as PROPOSIT1_1_, propositio0_.PROPOSITIONID as PROPOSIT1_0_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_0_, propositio0_.QUESTIONID as QUESTIONID0_0_ from proposition propositio0_ where propositio0_.QUESTIONID=?
2014-05-16 22:32:06,049 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,049 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1203) - result set contains (possibly empty) collection: [jpa.Question.propositionCollection#14]
2014-05-16 22:32:06,049 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,049 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,049 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: jpa.Question.propositionCollection
2014-05-16 22:32:06,050 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:275) - collection fully initialized: [jpa.Question.propositionCollection#14]
2014-05-16 22:32:06,050 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:241) - 1 collections initialized for role: jpa.Question.propositionCollection
2014-05-16 22:32:06,050 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,050 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2182) - done loading collection
2014-05-16 22:32:06,050 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227260
2014-05-16 22:32:06,050 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,051 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,051 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,059 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,059 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,060 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2022) - loading entity: [jpa.Rubrique#10]
2014-05-16 22:32:06,060 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,060 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select rubrique0_.RUBRIQUEID as RUBRIQUEID6_0_, rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_0_, rubrique0_.TESTID as TESTID6_0_ from rubrique rubrique0_ where rubrique0_.RUBRIQUEID=?
2014-05-16 22:32:06,061 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,062 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#10]
2014-05-16 22:32:06,062 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,062 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,062 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#10]
2014-05-16 22:32:06,063 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#10]
2014-05-16 22:32:06,063 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,063 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2050) - done entity load
2014-05-16 22:32:06,064 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2022) - loading entity: [jpa.Question#12]
2014-05-16 22:32:06,064 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,064 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_0_, question0_.QUESTIONIMAGE as QUESTION2_9_0_, question0_.QUESTIONTEXT as QUESTION3_9_0_, question0_.RUBRIQUEID as RUBRIQUEID9_0_ from question question0_ where question0_.QUESTIONID=?
2014-05-16 22:32:06,065 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,065 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#12]
2014-05-16 22:32:06,065 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,066 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,066 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#12]
2014-05-16 22:32:06,066 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#12]
2014-05-16 22:32:06,066 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,067 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2050) - done entity load
2014-05-16 22:32:06,067 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2158) - loading collection: [jpa.Rubrique.questionCollection#10]
2014-05-16 22:32:06,067 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,067 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select questionco0_.RUBRIQUEID as RUBRIQUEID6_1_, questionco0_.QUESTIONID as QUESTIONID1_, questionco0_.QUESTIONID as QUESTIONID9_0_, questionco0_.QUESTIONIMAGE as QUESTION2_9_0_, questionco0_.QUESTIONTEXT as QUESTION3_9_0_, questionco0_.RUBRIQUEID as RUBRIQUEID9_0_ from question questionco0_ where questionco0_.RUBRIQUEID=?
2014-05-16 22:32:06,068 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,068 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1203) - result set contains (possibly empty) collection: [jpa.Rubrique.questionCollection#10]
2014-05-16 22:32:06,069 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#12]
2014-05-16 22:32:06,069 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Rubrique.questionCollection#10]
2014-05-16 22:32:06,069 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#13]
2014-05-16 22:32:06,070 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Rubrique.questionCollection#10]
2014-05-16 22:32:06,070 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#14]
2014-05-16 22:32:06,070 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Rubrique.questionCollection#10]
2014-05-16 22:32:06,071 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,071 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,071 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#13]
2014-05-16 22:32:06,071 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#13]
2014-05-16 22:32:06,072 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#14]
2014-05-16 22:32:06,072 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#14]
2014-05-16 22:32:06,072 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: jpa.Rubrique.questionCollection
2014-05-16 22:32:06,072 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:275) - collection fully initialized: [jpa.Rubrique.questionCollection#10]
2014-05-16 22:32:06,073 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:241) - 1 collections initialized for role: jpa.Rubrique.questionCollection
2014-05-16 22:32:06,073 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,073 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2182) - done loading collection
2014-05-16 22:32:06,073 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,073 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,074 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,074 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#10], was: [jpa.Rubrique.questionCollection#10] (initialized)
2014-05-16 22:32:06,074 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#12], was: [jpa.Question.propositionCollection#12] (uninitialized)
2014-05-16 22:32:06,074 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#12], was: [jpa.Question.reponseHistoCollection#12] (uninitialized)
2014-05-16 22:32:06,075 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#12], was: [jpa.Question.reponseCollection#12] (uninitialized)
2014-05-16 22:32:06,075 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#13], was: [jpa.Question.propositionCollection#13] (uninitialized)
2014-05-16 22:32:06,075 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#13], was: [jpa.Question.reponseHistoCollection#13] (uninitialized)
2014-05-16 22:32:06,075 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#13], was: [jpa.Question.reponseCollection#13] (uninitialized)
2014-05-16 22:32:06,075 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#14], was: [jpa.Question.propositionCollection#14] (uninitialized)
2014-05-16 22:32:06,076 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#14], was: [jpa.Question.reponseHistoCollection#14] (uninitialized)
2014-05-16 22:32:06,076 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#14], was: [jpa.Question.reponseCollection#14] (uninitialized)
2014-05-16 22:32:06,076 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2014-05-16 22:32:06,076 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 10 collections
2014-05-16 22:32:06,076 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,077 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, questionimage=, rubriqueid=jpa.Rubrique#10, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=En PHP le dimensionnement d'un tableau :, questionid=12}
2014-05-16 22:32:06,077 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, questionimage=, rubriqueid=jpa.Rubrique#10, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=L'opérateur de concaténation est :, questionid=13}
2014-05-16 22:32:06,077 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, questionimage=, rubriqueid=jpa.Rubrique#10, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Les pointeurs d'un tableau sont insérés entre ?, questionid=14}
2014-05-16 22:32:06,077 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=[jpa.Question#12, jpa.Question#13, jpa.Question#14], rubriqueid=10, testid=jpa.Test#6, rubriquenom=QCM - PHP et MySQL}
2014-05-16 22:32:06,078 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,078 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,079 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,079 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,079 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,079 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#10], was: [jpa.Rubrique.questionCollection#10] (initialized)
2014-05-16 22:32:06,079 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#12], was: [jpa.Question.propositionCollection#12] (uninitialized)
2014-05-16 22:32:06,080 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#12], was: [jpa.Question.reponseHistoCollection#12] (uninitialized)
2014-05-16 22:32:06,080 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#12], was: [jpa.Question.reponseCollection#12] (uninitialized)
2014-05-16 22:32:06,080 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#13], was: [jpa.Question.propositionCollection#13] (uninitialized)
2014-05-16 22:32:06,080 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#13], was: [jpa.Question.reponseHistoCollection#13] (uninitialized)
2014-05-16 22:32:06,080 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#13], was: [jpa.Question.reponseCollection#13] (uninitialized)
2014-05-16 22:32:06,081 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#14], was: [jpa.Question.propositionCollection#14] (uninitialized)
2014-05-16 22:32:06,081 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#14], was: [jpa.Question.reponseHistoCollection#14] (uninitialized)
2014-05-16 22:32:06,081 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#14], was: [jpa.Question.reponseCollection#14] (uninitialized)
2014-05-16 22:32:06,081 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2014-05-16 22:32:06,081 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 10 collections
2014-05-16 22:32:06,081 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,082 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, questionimage=, rubriqueid=jpa.Rubrique#10, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=En PHP le dimensionnement d'un tableau :, questionid=12}
2014-05-16 22:32:06,082 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, questionimage=, rubriqueid=jpa.Rubrique#10, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=L'opérateur de concaténation est :, questionid=13}
2014-05-16 22:32:06,082 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, questionimage=, rubriqueid=jpa.Rubrique#10, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Les pointeurs d'un tableau sont insérés entre ?, questionid=14}
2014-05-16 22:32:06,082 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=[jpa.Question#12, jpa.Question#13, jpa.Question#14], rubriqueid=10, testid=jpa.Test#6, rubriquenom=QCM - PHP et MySQL}
2014-05-16 22:32:06,083 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Rubrique where rubriqueid = 10
2014-05-16 22:32:06,084 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Rubrique'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'rubriqueid'
          \-[NUM_INT] Node: '10'

2014-05-16 22:32:06,085 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,085 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-05-16 22:32:06,085 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Rubrique (no alias) -> rubrique0_
2014-05-16 22:32:06,085 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-05-16 22:32:06,086 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : rubriqueid -> org.hibernate.type.IntegerType@1871392
2014-05-16 22:32:06,086 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.rubriqueid -> rubrique0_.RUBRIQUEID
2014-05-16 22:32:06,086 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-05-16 22:32:06,086 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} rubrique rubrique0_ ) ( where ( = ( rubrique0_.RUBRIQUEID {synthetic-alias} rubriqueid ) 10 ) ) )
2014-05-16 22:32:06,087 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-05-16 22:32:06,087 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [rubrique rubrique0_]
2014-05-16 22:32:06,087 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-05-16 22:32:06,088 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (rubrique)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'rubrique0_.RUBRIQUEID as RUBRIQUEID6_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=rubrique,tableAlias=rubrique0_,origin=null,columns={,className=jpa.Rubrique}}}
    |  \-[SQL_TOKEN] SqlFragment: 'rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_, rubrique0_.TESTID as TESTID6_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[rubrique0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'rubrique rubrique0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=rubrique,tableAlias=rubrique0_,origin=null,columns={,className=jpa.Rubrique}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'rubrique0_.RUBRIQUEID' {propertyName=rubriqueid,dereferenceType=ALL,propertyPath=rubriqueid,path={synthetic-alias}.rubriqueid,tableAlias=rubrique0_,className=jpa.Rubrique,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'rubriqueid' {originalText=rubriqueid}
          \-[NUM_INT] LiteralNode: '10'

2014-05-16 22:32:06,088 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,088 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Rubrique where rubriqueid = 10
2014-05-16 22:32:06,088 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select rubrique0_.RUBRIQUEID as RUBRIQUEID6_, rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_, rubrique0_.TESTID as TESTID6_ from rubrique rubrique0_ where rubrique0_.RUBRIQUEID=10
2014-05-16 22:32:06,088 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,089 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,089 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select rubrique0_.RUBRIQUEID as RUBRIQUEID6_, rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_, rubrique0_.TESTID as TESTID6_ from rubrique rubrique0_ where rubrique0_.RUBRIQUEID=10
2014-05-16 22:32:06,090 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,090 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#10]
2014-05-16 22:32:06,090 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,090 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,091 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,091 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,091 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227260
2014-05-16 22:32:06,091 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,091 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,091 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,100 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,100 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,101 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: select r from jpa.Reponse r where r.questionid.rubriqueid.testid =:test and r.passageid =:passage 
2014-05-16 22:32:06,104 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Reponse'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'r'
          |  |  |  |  \-[IDENT] Node: 'questionid'
          |  |  |  \-[IDENT] Node: 'rubriqueid'
          |  |  \-[IDENT] Node: 'testid'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'test'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'r'
             |  \-[IDENT] Node: 'passageid'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'passage'

2014-05-16 22:32:06,104 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,105 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-05-16 22:32:06,105 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Reponse (r) -> reponse0_
2014-05-16 22:32:06,105 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  r -> reponse0_.REPONSEID
2014-05-16 22:32:06,106 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  r -> reponse0_.REPONSEID
2014-05-16 22:32:06,106 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : questionid -> org.hibernate.type.ManyToOneType(jpa.Question)
2014-05-16 22:32:06,106 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.dereferenceEntityJoin(DotNode.java:389) - dereferenceEntityJoin() : generating join for questionid in jpa.Reponse {no alias} parent = [  ( . ( . reponse0_.REPONSEID questionid ) rubriqueid ) ]
2014-05-16 22:32:06,108 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Question (no alias) -> question1_
2014-05-16 22:32:06,109 [main] DEBUG org.hibernate.hql.ast.tree.FromClause.addJoinByPathMap(FromClause.java:278) - addJoinByPathMap() : r.questionid -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=question,tableAlias=question1_,origin=reponse reponse0_,columns={reponse0_.QUESTIONID ,className=jpa.Question}}
2014-05-16 22:32:06,109 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  r.questionid -> reponse0_.QUESTIONID
2014-05-16 22:32:06,109 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : rubriqueid -> org.hibernate.type.ManyToOneType(jpa.Rubrique)
2014-05-16 22:32:06,110 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.dereferenceEntityJoin(DotNode.java:389) - dereferenceEntityJoin() : generating join for rubriqueid in jpa.Question {no alias} parent = [  ( . ( . ( reponse0_.QUESTIONID reponse0_.REPONSEID questionid ) rubriqueid ) testid ) ]
2014-05-16 22:32:06,110 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Rubrique (no alias) -> rubrique2_
2014-05-16 22:32:06,110 [main] DEBUG org.hibernate.hql.ast.tree.FromClause.addJoinByPathMap(FromClause.java:278) - addJoinByPathMap() : r.questionid.rubriqueid -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=rubrique,tableAlias=rubrique2_,origin=question question1_,columns={question1_.RUBRIQUEID ,className=jpa.Rubrique}}
2014-05-16 22:32:06,110 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  r.questionid.rubriqueid -> question1_.RUBRIQUEID
2014-05-16 22:32:06,111 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : testid -> org.hibernate.type.ManyToOneType(jpa.Test)
2014-05-16 22:32:06,111 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.dereferenceEntityIdentifier(DotNode.java:570) - dereferenceShortcut() : property testid in jpa.Rubrique does not require a join.
2014-05-16 22:32:06,111 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.setPropertyNameAndPath(DotNode.java:599) - terminal propertyPath = [testid]
2014-05-16 22:32:06,111 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  r.questionid.rubriqueid.testid -> rubrique2_.TESTID
2014-05-16 22:32:06,112 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  r -> reponse0_.REPONSEID
2014-05-16 22:32:06,112 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : passageid -> org.hibernate.type.ManyToOneType(jpa.Passage)
2014-05-16 22:32:06,112 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.dereferenceEntityIdentifier(DotNode.java:570) - dereferenceShortcut() : property passageid in jpa.Reponse does not require a join.
2014-05-16 22:32:06,112 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.setPropertyNameAndPath(DotNode.java:599) - terminal propertyPath = [passageid]
2014-05-16 22:32:06,112 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  r.passageid -> reponse0_.PASSAGEID
2014-05-16 22:32:06,113 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-05-16 22:32:06,113 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( {select clause} reponse0_.REPONSEID ) ( FromClause{level=1} reponse reponse0_ question question1_ rubrique rubrique2_ ) ( where ( and ( = ( rubrique2_.TESTID ( question1_.RUBRIQUEID ( reponse0_.QUESTIONID reponse0_.REPONSEID questionid ) rubriqueid ) testid ) ? ) ( = ( reponse0_.PASSAGEID reponse0_.REPONSEID passageid ) ? ) ) ) )
2014-05-16 22:32:06,113 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [reponse reponse0_]
2014-05-16 22:32:06,114 [main] DEBUG org.hibernate.hql.ast.util.SyntheticAndFactory.addWhereFragment(SyntheticAndFactory.java:94) - Using unprocessed WHERE-fragment [reponse0_.QUESTIONID=question1_.QUESTIONID]
2014-05-16 22:32:06,114 [main] DEBUG org.hibernate.hql.ast.util.SyntheticAndFactory.addWhereFragment(SyntheticAndFactory.java:125) - Using processed WHERE-fragment [reponse0_.QUESTIONID=question1_.QUESTIONID]
2014-05-16 22:32:06,114 [main] DEBUG org.hibernate.hql.ast.util.SyntheticAndFactory.addWhereFragment(SyntheticAndFactory.java:94) - Using unprocessed WHERE-fragment [question1_.RUBRIQUEID=rubrique2_.RUBRIQUEID]
2014-05-16 22:32:06,114 [main] DEBUG org.hibernate.hql.ast.util.SyntheticAndFactory.addWhereFragment(SyntheticAndFactory.java:125) - Using processed WHERE-fragment [question1_.RUBRIQUEID=rubrique2_.RUBRIQUEID]
2014-05-16 22:32:06,115 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-05-16 22:32:06,115 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (rubrique,reponse,question)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'reponse0_.REPONSEID as REPONSEID8_' {alias=r, className=jpa.Reponse, tableAlias=reponse0_}
    |  \-[SQL_TOKEN] SqlFragment: 'reponse0_.REPONSETEXTE as REPONSET2_8_, reponse0_.REPONSEDUREE as REPONSED3_8_, reponse0_.REPONSEMESSAGE as REPONSEM4_8_, reponse0_.PASSAGEID as PASSAGEID8_, reponse0_.QUESTIONID as QUESTIONID8_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[r], fromElementByTableAlias=[reponse0_, rubrique2_, question1_], fromElementsByPath=[r.questionid, r.questionid.rubriqueid], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'reponse reponse0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=reponse,tableAlias=reponse0_,origin=null,columns={,className=jpa.Reponse}}
    |  +-[FROM_FRAGMENT] ImpliedFromElement: 'question question1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=question,tableAlias=question1_,origin=reponse reponse0_,columns={reponse0_.QUESTIONID ,className=jpa.Question}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: 'rubrique rubrique2_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=rubrique,tableAlias=rubrique2_,origin=question question1_,columns={question1_.RUBRIQUEID ,className=jpa.Rubrique}}
    \-[WHERE] SqlNode: 'where'
       +-[THETA_JOINS] SqlNode: '{theta joins}'
       |  +-[SQL_TOKEN] SqlFragment: 'reponse0_.QUESTIONID=question1_.QUESTIONID'
       |  \-[SQL_TOKEN] SqlFragment: 'question1_.RUBRIQUEID=rubrique2_.RUBRIQUEID'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'rubrique2_.TESTID' {propertyName=testid,dereferenceType=0,propertyPath=testid,path=r.questionid.rubriqueid.testid,tableAlias=rubrique2_,className=jpa.Rubrique,classAlias=null}
          |  |  +-[DOT] DotNode: 'question1_.RUBRIQUEID' {propertyName=rubriqueid,dereferenceType=EOF,propertyPath=rubriqueid,path=r.questionid.rubriqueid,tableAlias=rubrique2_,className=jpa.Rubrique,classAlias=null}
          |  |  |  +-[DOT] DotNode: 'reponse0_.QUESTIONID' {propertyName=questionid,dereferenceType=EOF,propertyPath=questionid,path=r.questionid,tableAlias=question1_,className=jpa.Question,classAlias=null}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'reponse0_.REPONSEID' {alias=r, className=jpa.Reponse, tableAlias=reponse0_}
          |  |  |  |  \-[IDENT] IdentNode: 'questionid' {originalText=questionid}
          |  |  |  \-[IDENT] IdentNode: 'rubriqueid' {originalText=rubriqueid}
          |  |  \-[IDENT] IdentNode: 'testid' {originalText=testid}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=test, expectedType=org.hibernate.type.ManyToOneType(jpa.Test)}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'reponse0_.PASSAGEID' {propertyName=passageid,dereferenceType=0,propertyPath=passageid,path=r.passageid,tableAlias=reponse0_,className=jpa.Reponse,classAlias=r}
             |  +-[ALIAS_REF] IdentNode: 'reponse0_.REPONSEID' {alias=r, className=jpa.Reponse, tableAlias=reponse0_}
             |  \-[IDENT] IdentNode: 'passageid' {originalText=passageid}
             \-[NAMED_PARAM] ParameterNode: '?' {name=passage, expectedType=org.hibernate.type.ManyToOneType(jpa.Passage)}

2014-05-16 22:32:06,115 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,116 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: select r from jpa.Reponse r where r.questionid.rubriqueid.testid =:test and r.passageid =:passage 
2014-05-16 22:32:06,116 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select reponse0_.REPONSEID as REPONSEID8_, reponse0_.REPONSETEXTE as REPONSET2_8_, reponse0_.REPONSEDUREE as REPONSED3_8_, reponse0_.REPONSEMESSAGE as REPONSEM4_8_, reponse0_.PASSAGEID as PASSAGEID8_, reponse0_.QUESTIONID as QUESTIONID8_ from reponse reponse0_ cross join question question1_ cross join rubrique rubrique2_ where reponse0_.QUESTIONID=question1_.QUESTIONID and question1_.RUBRIQUEID=rubrique2_.RUBRIQUEID and rubrique2_.TESTID=? and reponse0_.PASSAGEID=?
2014-05-16 22:32:06,116 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,117 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,117 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select reponse0_.REPONSEID as REPONSEID8_, reponse0_.REPONSETEXTE as REPONSET2_8_, reponse0_.REPONSEDUREE as REPONSED3_8_, reponse0_.REPONSEMESSAGE as REPONSEM4_8_, reponse0_.PASSAGEID as PASSAGEID8_, reponse0_.QUESTIONID as QUESTIONID8_ from reponse reponse0_ cross join question question1_ cross join rubrique rubrique2_ where reponse0_.QUESTIONID=question1_.QUESTIONID and question1_.RUBRIQUEID=rubrique2_.RUBRIQUEID and rubrique2_.TESTID=? and reponse0_.PASSAGEID=?
2014-05-16 22:32:06,118 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,119 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#1]
2014-05-16 22:32:06,119 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#2]
2014-05-16 22:32:06,119 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#3]
2014-05-16 22:32:06,120 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,120 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,120 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#1]
2014-05-16 22:32:06,121 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#1]
2014-05-16 22:32:06,121 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#2]
2014-05-16 22:32:06,121 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#2]
2014-05-16 22:32:06,121 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#3]
2014-05-16 22:32:06,121 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#3]
2014-05-16 22:32:06,122 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,122 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,122 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,122 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,122 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2014-05-16 22:32:06,123 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,123 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,123 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=1, reponsemessage=fuck la réponse ! , reponsetexte=, reponseduree=null, questionid=jpa.Question#12, passageid=jpa.Passage#2}
2014-05-16 22:32:06,123 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=2, reponsemessage=fuck la réponse ! , reponsetexte=, reponseduree=null, questionid=jpa.Question#13, passageid=jpa.Passage#2}
2014-05-16 22:32:06,123 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=3, reponsemessage=fuck la réponse ! , reponsetexte=, reponseduree=null, questionid=jpa.Question#14, passageid=jpa.Passage#2}
2014-05-16 22:32:06,124 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,124 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,124 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,125 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227261
2014-05-16 22:32:06,125 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,125 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,125 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,134 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,134 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,135 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,135 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.REPONSEID as REPONSEID8_0_, this_.REPONSETEXTE as REPONSET2_8_0_, this_.REPONSEDUREE as REPONSED3_8_0_, this_.REPONSEMESSAGE as REPONSEM4_8_0_, this_.PASSAGEID as PASSAGEID8_0_, this_.QUESTIONID as QUESTIONID8_0_ from reponse this_ where this_.REPONSEID=?
2014-05-16 22:32:06,136 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,137 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#1]
2014-05-16 22:32:06,137 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,137 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,137 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#1]
2014-05-16 22:32:06,138 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#1]
2014-05-16 22:32:06,138 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,138 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,138 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,138 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,139 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-05-16 22:32:06,139 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,139 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,139 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=1, reponsemessage=fuck la réponse ! , reponsetexte=, reponseduree=null, questionid=jpa.Question#12, passageid=jpa.Passage#2}
2014-05-16 22:32:06,139 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,139 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from reponse where REPONSEID=?
2014-05-16 22:32:06,140 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:06,140 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,142 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,142 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,142 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,143 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227261
2014-05-16 22:32:06,143 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,143 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,143 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,151 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,151 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,152 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,153 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.REPONSEID as REPONSEID8_0_, this_.REPONSETEXTE as REPONSET2_8_0_, this_.REPONSEDUREE as REPONSED3_8_0_, this_.REPONSEMESSAGE as REPONSEM4_8_0_, this_.PASSAGEID as PASSAGEID8_0_, this_.QUESTIONID as QUESTIONID8_0_ from reponse this_ where this_.REPONSEID=?
2014-05-16 22:32:06,153 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,154 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#2]
2014-05-16 22:32:06,154 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,154 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,154 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#2]
2014-05-16 22:32:06,155 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#2]
2014-05-16 22:32:06,155 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,156 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,156 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,156 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,156 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-05-16 22:32:06,156 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,156 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,157 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=2, reponsemessage=fuck la réponse ! , reponsetexte=, reponseduree=null, questionid=jpa.Question#13, passageid=jpa.Passage#2}
2014-05-16 22:32:06,157 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,157 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from reponse where REPONSEID=?
2014-05-16 22:32:06,157 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:06,158 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,159 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,160 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,160 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,160 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227261
2014-05-16 22:32:06,160 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,160 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,160 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,173 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,174 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,175 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,175 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.REPONSEID as REPONSEID8_0_, this_.REPONSETEXTE as REPONSET2_8_0_, this_.REPONSEDUREE as REPONSED3_8_0_, this_.REPONSEMESSAGE as REPONSEM4_8_0_, this_.PASSAGEID as PASSAGEID8_0_, this_.QUESTIONID as QUESTIONID8_0_ from reponse this_ where this_.REPONSEID=?
2014-05-16 22:32:06,176 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,176 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#3]
2014-05-16 22:32:06,176 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,177 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,177 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#3]
2014-05-16 22:32:06,177 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#3]
2014-05-16 22:32:06,177 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,178 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,178 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,178 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,178 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-05-16 22:32:06,178 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,178 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,179 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=3, reponsemessage=fuck la réponse ! , reponsetexte=, reponseduree=null, questionid=jpa.Question#14, passageid=jpa.Passage#2}
2014-05-16 22:32:06,179 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,179 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from reponse where REPONSEID=?
2014-05-16 22:32:06,179 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:06,180 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,181 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,182 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,182 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,182 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227261
2014-05-16 22:32:06,182 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,182 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,182 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,191 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,191 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,192 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,192 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.JOINTUREID as JOINTUREID10_0_, this_.CHAMPVIDE as CHAMPVIDE10_0_, this_.TESTID as TESTID10_0_, this_.PASSAGEID as PASSAGEID10_0_ from jointure this_ where this_.JOINTUREID=?
2014-05-16 22:32:06,193 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,193 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Jointure#8]
2014-05-16 22:32:06,194 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,194 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,194 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Jointure#8]
2014-05-16 22:32:06,195 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Jointure#8]
2014-05-16 22:32:06,195 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,195 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,195 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,195 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,195 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-05-16 22:32:06,196 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,196 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,196 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=8, champvide=null, testid=jpa.Test#6, passageid=jpa.Passage#2}
2014-05-16 22:32:06,196 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,196 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from jointure where JOINTUREID=?
2014-05-16 22:32:06,197 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:06,197 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,198 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,199 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,199 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,199 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227261
2014-05-16 22:32:06,199 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,200 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,200 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,208 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,208 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,209 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,209 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PASSAGEID as PASSAGEID5_0_, this_.PASSAGE_ETAT as PASSAGE2_5_0_, this_.PASSAGE_DATE as PASSAGE3_5_0_, this_.PASSAGEDEBUT_VAL as PASSAGED4_5_0_, this_.PASSAGEFIN_VAL as PASSAGEFIN5_5_0_, this_.CANDIDATID as CANDIDATID5_0_ from passage this_ where this_.PASSAGEID=?
2014-05-16 22:32:06,210 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,210 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Passage#2]
2014-05-16 22:32:06,211 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,211 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,211 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Passage#2]
2014-05-16 22:32:06,211 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Passage#2]
2014-05-16 22:32:06,211 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,212 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2158) - loading collection: [jpa.Passage.reponseCollection#2]
2014-05-16 22:32:06,212 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,212 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select reponsecol0_.PASSAGEID as PASSAGEID5_1_, reponsecol0_.REPONSEID as REPONSEID1_, reponsecol0_.REPONSEID as REPONSEID8_0_, reponsecol0_.REPONSETEXTE as REPONSET2_8_0_, reponsecol0_.REPONSEDUREE as REPONSED3_8_0_, reponsecol0_.REPONSEMESSAGE as REPONSEM4_8_0_, reponsecol0_.PASSAGEID as PASSAGEID8_0_, reponsecol0_.QUESTIONID as QUESTIONID8_0_ from reponse reponsecol0_ where reponsecol0_.PASSAGEID=?
2014-05-16 22:32:06,213 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,213 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1203) - result set contains (possibly empty) collection: [jpa.Passage.reponseCollection#2]
2014-05-16 22:32:06,214 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,214 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,214 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: jpa.Passage.reponseCollection
2014-05-16 22:32:06,214 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:275) - collection fully initialized: [jpa.Passage.reponseCollection#2]
2014-05-16 22:32:06,215 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:241) - 1 collections initialized for role: jpa.Passage.reponseCollection
2014-05-16 22:32:06,215 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,215 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2182) - done loading collection
2014-05-16 22:32:06,215 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2158) - loading collection: [jpa.Passage.jointureCollection#2]
2014-05-16 22:32:06,215 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,216 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select jointureco0_.PASSAGEID as PASSAGEID5_1_, jointureco0_.JOINTUREID as JOINTUREID1_, jointureco0_.JOINTUREID as JOINTUREID10_0_, jointureco0_.CHAMPVIDE as CHAMPVIDE10_0_, jointureco0_.TESTID as TESTID10_0_, jointureco0_.PASSAGEID as PASSAGEID10_0_ from jointure jointureco0_ where jointureco0_.PASSAGEID=?
2014-05-16 22:32:06,216 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,217 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1203) - result set contains (possibly empty) collection: [jpa.Passage.jointureCollection#2]
2014-05-16 22:32:06,217 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,217 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,217 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: jpa.Passage.jointureCollection
2014-05-16 22:32:06,218 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:275) - collection fully initialized: [jpa.Passage.jointureCollection#2]
2014-05-16 22:32:06,218 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:241) - 1 collections initialized for role: jpa.Passage.jointureCollection
2014-05-16 22:32:06,218 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,218 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2182) - done loading collection
2014-05-16 22:32:06,219 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,219 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,219 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,219 [main] DEBUG org.hibernate.engine.Collections.processDereferencedCollection(Collections.java:75) - Collection dereferenced: [jpa.Passage.reponseHistoCollection#2]
2014-05-16 22:32:06,219 [main] DEBUG org.hibernate.engine.Collections.processDereferencedCollection(Collections.java:75) - Collection dereferenced: [jpa.Passage.reponseCollection#2]
2014-05-16 22:32:06,219 [main] DEBUG org.hibernate.engine.Collections.processDereferencedCollection(Collections.java:75) - Collection dereferenced: [jpa.Passage.jointureCollection#2]
2014-05-16 22:32:06,220 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-05-16 22:32:06,220 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 3 removals to 3 collections
2014-05-16 22:32:06,220 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,220 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Passage{reponseCollection=[], passageDate=null, passagedebutVal=null, passageEtat=0, passagefinVal=null, jointureCollection=[], reponseHistoCollection=<uninitialized>, candidatid=jpa.Candidat#1, passageid=2}
2014-05-16 22:32:06,220 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,221 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from passage where PASSAGEID=?
2014-05-16 22:32:06,221 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:06,221 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,223 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,223 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,223 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,224 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227262
2014-05-16 22:32:06,224 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,224 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,224 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,232 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,232 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,233 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,233 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,234 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,234 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,234 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,235 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.REPONSEID as REPONSEID8_0_, this_.REPONSETEXTE as REPONSET2_8_0_, this_.REPONSEDUREE as REPONSED3_8_0_, this_.REPONSEMESSAGE as REPONSEM4_8_0_, this_.PASSAGEID as PASSAGEID8_0_, this_.QUESTIONID as QUESTIONID8_0_ from reponse this_
2014-05-16 22:32:06,235 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,236 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,236 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,236 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,236 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,237 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227262
2014-05-16 22:32:06,237 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,237 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,237 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,245 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,245 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,246 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,246 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select test0_.TESTID as TESTID3_, test0_.TESTMATIERE as TESTMATI2_3_, test0_.TESTDUREE as TESTDUREE3_, test0_.TEST_NBQUESTION_RUB as TEST4_3_, test0_.TESTNATURE as TESTNATURE3_, test0_.TESTFORMAT as TESTFORMAT3_, test0_.TEST_START as TEST7_3_, test0_.TEST_DESCRIPTION as TEST8_3_, test0_.THEME as THEME3_, test0_.NIVEAU as NIVEAU3_, test0_.CATEGORIEID as CATEGOR11_3_ from test test0_ where test0_.TESTID=1
2014-05-16 22:32:06,247 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,247 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#1]
2014-05-16 22:32:06,248 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,248 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,248 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#1]
2014-05-16 22:32:06,248 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#1]
2014-05-16 22:32:06,249 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,249 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,249 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,249 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,249 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.rubriqueCollection#1], was: [jpa.Test.rubriqueCollection#1] (uninitialized)
2014-05-16 22:32:06,250 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.jointureCollection#1], was: [jpa.Test.jointureCollection#1] (uninitialized)
2014-05-16 22:32:06,250 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,250 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2014-05-16 22:32:06,250 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,250 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Test{rubriqueCollection=<uninitialized>, testmatiere=Développement PHP, testformat=CODE, theme=Boucles en PHP, jointureCollection=<uninitialized>, testnature=THEM, testid=1, testDescription=Les boucles permettent d'effectuer un certain nombre de fois les mêmes opérations, par exemple afficher une suite de nombres que l'on incrémentera à chaque tour de boucle. 
Vous allez pouvoir répéter autant d'instructions que vous souhaitez et vous arrêter lorsque vous l'aurez décidé.
Ce test vérifiera les compétences du candidat sur ces notions élémentaires.
, categorieid=jpa.Categorie#1, testStart=Instructions début, niveau=1, testNbquestionRub=10, testduree=20}
2014-05-16 22:32:06,251 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,251 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,251 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,252 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227262
2014-05-16 22:32:06,252 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,252 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,252 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,260 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,260 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,261 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: select p from jpa.Proposition  p where p.questionid.rubriqueid.testid =:test 
2014-05-16 22:32:06,263 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Proposition'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'p'
          |  |  |  \-[IDENT] Node: 'questionid'
          |  |  \-[IDENT] Node: 'rubriqueid'
          |  \-[IDENT] Node: 'testid'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'test'

2014-05-16 22:32:06,264 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,264 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-05-16 22:32:06,264 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (p) -> propositio0_
2014-05-16 22:32:06,264 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  p -> propositio0_.PROPOSITIONID
2014-05-16 22:32:06,265 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  p -> propositio0_.PROPOSITIONID
2014-05-16 22:32:06,265 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : questionid -> org.hibernate.type.ManyToOneType(jpa.Question)
2014-05-16 22:32:06,265 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.dereferenceEntityJoin(DotNode.java:389) - dereferenceEntityJoin() : generating join for questionid in jpa.Proposition {no alias} parent = [  ( . ( . propositio0_.PROPOSITIONID questionid ) rubriqueid ) ]
2014-05-16 22:32:06,266 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Question (no alias) -> question1_
2014-05-16 22:32:06,266 [main] DEBUG org.hibernate.hql.ast.tree.FromClause.addJoinByPathMap(FromClause.java:278) - addJoinByPathMap() : p.questionid -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=question,tableAlias=question1_,origin=proposition propositio0_,columns={propositio0_.QUESTIONID ,className=jpa.Question}}
2014-05-16 22:32:06,266 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  p.questionid -> propositio0_.QUESTIONID
2014-05-16 22:32:06,266 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : rubriqueid -> org.hibernate.type.ManyToOneType(jpa.Rubrique)
2014-05-16 22:32:06,267 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.dereferenceEntityJoin(DotNode.java:389) - dereferenceEntityJoin() : generating join for rubriqueid in jpa.Question {no alias} parent = [  ( . ( . ( propositio0_.QUESTIONID propositio0_.PROPOSITIONID questionid ) rubriqueid ) testid ) ]
2014-05-16 22:32:06,267 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Rubrique (no alias) -> rubrique2_
2014-05-16 22:32:06,267 [main] DEBUG org.hibernate.hql.ast.tree.FromClause.addJoinByPathMap(FromClause.java:278) - addJoinByPathMap() : p.questionid.rubriqueid -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=rubrique,tableAlias=rubrique2_,origin=question question1_,columns={question1_.RUBRIQUEID ,className=jpa.Rubrique}}
2014-05-16 22:32:06,267 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  p.questionid.rubriqueid -> question1_.RUBRIQUEID
2014-05-16 22:32:06,267 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : testid -> org.hibernate.type.ManyToOneType(jpa.Test)
2014-05-16 22:32:06,268 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.dereferenceEntityIdentifier(DotNode.java:570) - dereferenceShortcut() : property testid in jpa.Rubrique does not require a join.
2014-05-16 22:32:06,268 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.setPropertyNameAndPath(DotNode.java:599) - terminal propertyPath = [testid]
2014-05-16 22:32:06,268 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  p.questionid.rubriqueid.testid -> rubrique2_.TESTID
2014-05-16 22:32:06,268 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-05-16 22:32:06,269 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( {select clause} propositio0_.PROPOSITIONID ) ( FromClause{level=1} proposition propositio0_ question question1_ rubrique rubrique2_ ) ( where ( = ( rubrique2_.TESTID ( question1_.RUBRIQUEID ( propositio0_.QUESTIONID propositio0_.PROPOSITIONID questionid ) rubriqueid ) testid ) ? ) ) )
2014-05-16 22:32:06,269 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-05-16 22:32:06,269 [main] DEBUG org.hibernate.hql.ast.util.SyntheticAndFactory.addWhereFragment(SyntheticAndFactory.java:94) - Using unprocessed WHERE-fragment [propositio0_.QUESTIONID=question1_.QUESTIONID]
2014-05-16 22:32:06,269 [main] DEBUG org.hibernate.hql.ast.util.SyntheticAndFactory.addWhereFragment(SyntheticAndFactory.java:125) - Using processed WHERE-fragment [propositio0_.QUESTIONID=question1_.QUESTIONID]
2014-05-16 22:32:06,270 [main] DEBUG org.hibernate.hql.ast.util.SyntheticAndFactory.addWhereFragment(SyntheticAndFactory.java:94) - Using unprocessed WHERE-fragment [question1_.RUBRIQUEID=rubrique2_.RUBRIQUEID]
2014-05-16 22:32:06,270 [main] DEBUG org.hibernate.hql.ast.util.SyntheticAndFactory.addWhereFragment(SyntheticAndFactory.java:125) - Using processed WHERE-fragment [question1_.RUBRIQUEID=rubrique2_.RUBRIQUEID]
2014-05-16 22:32:06,270 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-05-16 22:32:06,271 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (rubrique,question,proposition)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {alias=p, className=jpa.Proposition, tableAlias=propositio0_}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[p], fromElementByTableAlias=[rubrique2_, question1_, propositio0_], fromElementsByPath=[p.questionid, p.questionid.rubriqueid], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    |  +-[FROM_FRAGMENT] ImpliedFromElement: 'question question1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=question,tableAlias=question1_,origin=proposition propositio0_,columns={propositio0_.QUESTIONID ,className=jpa.Question}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: 'rubrique rubrique2_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=rubrique,tableAlias=rubrique2_,origin=question question1_,columns={question1_.RUBRIQUEID ,className=jpa.Rubrique}}
    \-[WHERE] SqlNode: 'where'
       +-[THETA_JOINS] SqlNode: '{theta joins}'
       |  +-[SQL_TOKEN] SqlFragment: 'propositio0_.QUESTIONID=question1_.QUESTIONID'
       |  \-[SQL_TOKEN] SqlFragment: 'question1_.RUBRIQUEID=rubrique2_.RUBRIQUEID'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'rubrique2_.TESTID' {propertyName=testid,dereferenceType=0,propertyPath=testid,path=p.questionid.rubriqueid.testid,tableAlias=rubrique2_,className=jpa.Rubrique,classAlias=null}
          |  +-[DOT] DotNode: 'question1_.RUBRIQUEID' {propertyName=rubriqueid,dereferenceType=EOF,propertyPath=rubriqueid,path=p.questionid.rubriqueid,tableAlias=rubrique2_,className=jpa.Rubrique,classAlias=null}
          |  |  +-[DOT] DotNode: 'propositio0_.QUESTIONID' {propertyName=questionid,dereferenceType=EOF,propertyPath=questionid,path=p.questionid,tableAlias=question1_,className=jpa.Question,classAlias=null}
          |  |  |  +-[ALIAS_REF] IdentNode: 'propositio0_.PROPOSITIONID' {alias=p, className=jpa.Proposition, tableAlias=propositio0_}
          |  |  |  \-[IDENT] IdentNode: 'questionid' {originalText=questionid}
          |  |  \-[IDENT] IdentNode: 'rubriqueid' {originalText=rubriqueid}
          |  \-[IDENT] IdentNode: 'testid' {originalText=testid}
          \-[NAMED_PARAM] ParameterNode: '?' {name=test, expectedType=org.hibernate.type.ManyToOneType(jpa.Test)}

2014-05-16 22:32:06,271 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,271 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: select p from jpa.Proposition  p where p.questionid.rubriqueid.testid =:test 
2014-05-16 22:32:06,271 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ cross join question question1_ cross join rubrique rubrique2_ where propositio0_.QUESTIONID=question1_.QUESTIONID and question1_.RUBRIQUEID=rubrique2_.RUBRIQUEID and rubrique2_.TESTID=?
2014-05-16 22:32:06,272 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,272 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,272 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ cross join question question1_ cross join rubrique rubrique2_ where propositio0_.QUESTIONID=question1_.QUESTIONID and question1_.RUBRIQUEID=rubrique2_.RUBRIQUEID and rubrique2_.TESTID=?
2014-05-16 22:32:06,273 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,274 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#1]
2014-05-16 22:32:06,274 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#2]
2014-05-16 22:32:06,274 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#3]
2014-05-16 22:32:06,275 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#4]
2014-05-16 22:32:06,276 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#5]
2014-05-16 22:32:06,276 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#6]
2014-05-16 22:32:06,276 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#7]
2014-05-16 22:32:06,277 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#8]
2014-05-16 22:32:06,277 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#9]
2014-05-16 22:32:06,277 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#10]
2014-05-16 22:32:06,277 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#11]
2014-05-16 22:32:06,278 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,278 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,278 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#1]
2014-05-16 22:32:06,278 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#1]
2014-05-16 22:32:06,279 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#2]
2014-05-16 22:32:06,279 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#2]
2014-05-16 22:32:06,279 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#3]
2014-05-16 22:32:06,279 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#3]
2014-05-16 22:32:06,279 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#4]
2014-05-16 22:32:06,280 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#4]
2014-05-16 22:32:06,280 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#5]
2014-05-16 22:32:06,281 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#5]
2014-05-16 22:32:06,281 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#6]
2014-05-16 22:32:06,282 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#6]
2014-05-16 22:32:06,282 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#7]
2014-05-16 22:32:06,282 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#7]
2014-05-16 22:32:06,282 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#8]
2014-05-16 22:32:06,283 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#8]
2014-05-16 22:32:06,283 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#9]
2014-05-16 22:32:06,283 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#9]
2014-05-16 22:32:06,283 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#10]
2014-05-16 22:32:06,283 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#10]
2014-05-16 22:32:06,284 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#11]
2014-05-16 22:32:06,284 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#11]
2014-05-16 22:32:06,284 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,284 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,284 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,284 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,285 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 11 objects
2014-05-16 22:32:06,285 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,285 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,285 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 1, propositionvrai=1, propositionid=1, questionid=jpa.Question#1}
2014-05-16 22:32:06,286 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 3, propositionvrai=1, propositionid=3, questionid=jpa.Question#3}
2014-05-16 22:32:06,286 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 2, propositionvrai=1, propositionid=2, questionid=jpa.Question#2}
2014-05-16 22:32:06,286 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 9, propositionvrai=1, propositionid=9, questionid=jpa.Question#9}
2014-05-16 22:32:06,286 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 5, propositionvrai=1, propositionid=5, questionid=jpa.Question#5}
2014-05-16 22:32:06,286 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 8, propositionvrai=1, propositionid=8, questionid=jpa.Question#8}
2014-05-16 22:32:06,287 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 4, propositionvrai=1, propositionid=4, questionid=jpa.Question#4}
2014-05-16 22:32:06,287 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 11, propositionvrai=1, propositionid=11, questionid=jpa.Question#11}
2014-05-16 22:32:06,287 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 7, propositionvrai=1, propositionid=7, questionid=jpa.Question#7}
2014-05-16 22:32:06,287 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 10, propositionvrai=1, propositionid=10, questionid=jpa.Question#10}
2014-05-16 22:32:06,287 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 6, propositionvrai=1, propositionid=6, questionid=jpa.Question#6}
2014-05-16 22:32:06,288 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,288 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,288 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,289 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227262
2014-05-16 22:32:06,289 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,289 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,289 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,298 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,298 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,299 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,299 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,300 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,300 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,300 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,301 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.TESTID as TESTID3_0_, this_.TESTMATIERE as TESTMATI2_3_0_, this_.TESTDUREE as TESTDUREE3_0_, this_.TEST_NBQUESTION_RUB as TEST4_3_0_, this_.TESTNATURE as TESTNATURE3_0_, this_.TESTFORMAT as TESTFORMAT3_0_, this_.TEST_START as TEST7_3_0_, this_.TEST_DESCRIPTION as TEST8_3_0_, this_.THEME as THEME3_0_, this_.NIVEAU as NIVEAU3_0_, this_.CATEGORIEID as CATEGOR11_3_0_ from test this_
2014-05-16 22:32:06,302 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,302 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#1]
2014-05-16 22:32:06,302 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#2]
2014-05-16 22:32:06,303 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#3]
2014-05-16 22:32:06,303 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#4]
2014-05-16 22:32:06,304 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#5]
2014-05-16 22:32:06,304 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#6]
2014-05-16 22:32:06,304 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,304 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,305 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#1]
2014-05-16 22:32:06,305 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#1]
2014-05-16 22:32:06,305 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#2]
2014-05-16 22:32:06,306 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#2]
2014-05-16 22:32:06,306 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#3]
2014-05-16 22:32:06,306 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#3]
2014-05-16 22:32:06,306 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#4]
2014-05-16 22:32:06,306 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#4]
2014-05-16 22:32:06,307 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#5]
2014-05-16 22:32:06,307 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#5]
2014-05-16 22:32:06,307 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#6]
2014-05-16 22:32:06,307 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#6]
2014-05-16 22:32:06,308 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,308 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,308 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227263
2014-05-16 22:32:06,308 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,308 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,309 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,317 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,317 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,318 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,318 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select candidat0_.CANDIDATID as CANDIDATID2_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_ from candidat candidat0_ where candidat0_.CANDIDATID=1
2014-05-16 22:32:06,319 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,319 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#1]
2014-05-16 22:32:06,320 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,320 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,320 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Candidat#1]
2014-05-16 22:32:06,321 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Candidat#1]
2014-05-16 22:32:06,321 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,321 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,321 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,321 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,322 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Candidat.passageCollection#1], was: [jpa.Candidat.passageCollection#1] (uninitialized)
2014-05-16 22:32:06,322 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,322 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2014-05-16 22:32:06,322 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,322 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=sam.fab@hotmail.fr, passageCollection=<uninitialized>, candidatDateNaissance=1985-01-01, candidatPrenom=Samuel, candidatNom=Faber, candidatCivilite=Mr, candidatid=1}
2014-05-16 22:32:06,323 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,323 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,323 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,324 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227263
2014-05-16 22:32:06,324 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,324 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,324 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,332 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,333 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,333 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: select p from jpa.Passage p where p.candidatid =:candidat and p.passageEtat = 0
2014-05-16 22:32:06,336 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Passage'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'p'
          |  |  \-[IDENT] Node: 'candidatid'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'candidat'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'p'
             |  \-[IDENT] Node: 'passageEtat'
             \-[NUM_INT] Node: '0'

2014-05-16 22:32:06,337 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,337 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-05-16 22:32:06,337 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Passage (p) -> passage0_
2014-05-16 22:32:06,338 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  p -> passage0_.PASSAGEID
2014-05-16 22:32:06,338 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  p -> passage0_.PASSAGEID
2014-05-16 22:32:06,338 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : candidatid -> org.hibernate.type.ManyToOneType(jpa.Candidat)
2014-05-16 22:32:06,338 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.dereferenceEntityIdentifier(DotNode.java:570) - dereferenceShortcut() : property candidatid in jpa.Passage does not require a join.
2014-05-16 22:32:06,339 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.setPropertyNameAndPath(DotNode.java:599) - terminal propertyPath = [candidatid]
2014-05-16 22:32:06,339 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  p.candidatid -> passage0_.CANDIDATID
2014-05-16 22:32:06,339 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  p -> passage0_.PASSAGEID
2014-05-16 22:32:06,339 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : passageEtat -> org.hibernate.type.IntegerType@1871392
2014-05-16 22:32:06,340 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  p.passageEtat -> passage0_.PASSAGE_ETAT
2014-05-16 22:32:06,340 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-05-16 22:32:06,340 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( {select clause} passage0_.PASSAGEID ) ( FromClause{level=1} passage passage0_ ) ( where ( and ( = ( passage0_.CANDIDATID passage0_.PASSAGEID candidatid ) ? ) ( = ( passage0_.PASSAGE_ETAT passage0_.PASSAGEID passageEtat ) 0 ) ) ) )
2014-05-16 22:32:06,340 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [passage passage0_]
2014-05-16 22:32:06,341 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-05-16 22:32:06,341 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (passage)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'passage0_.PASSAGEID as PASSAGEID5_' {alias=p, className=jpa.Passage, tableAlias=passage0_}
    |  \-[SQL_TOKEN] SqlFragment: 'passage0_.PASSAGE_ETAT as PASSAGE2_5_, passage0_.PASSAGE_DATE as PASSAGE3_5_, passage0_.PASSAGEDEBUT_VAL as PASSAGED4_5_, passage0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_, passage0_.CANDIDATID as CANDIDATID5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[passage0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'passage passage0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=passage,tableAlias=passage0_,origin=null,columns={,className=jpa.Passage}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'passage0_.CANDIDATID' {propertyName=candidatid,dereferenceType=0,propertyPath=candidatid,path=p.candidatid,tableAlias=passage0_,className=jpa.Passage,classAlias=p}
          |  |  +-[ALIAS_REF] IdentNode: 'passage0_.PASSAGEID' {alias=p, className=jpa.Passage, tableAlias=passage0_}
          |  |  \-[IDENT] IdentNode: 'candidatid' {originalText=candidatid}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=candidat, expectedType=org.hibernate.type.ManyToOneType(jpa.Candidat)}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'passage0_.PASSAGE_ETAT' {propertyName=passageEtat,dereferenceType=ALL,propertyPath=passageEtat,path=p.passageEtat,tableAlias=passage0_,className=jpa.Passage,classAlias=p}
             |  +-[ALIAS_REF] IdentNode: 'passage0_.PASSAGEID' {alias=p, className=jpa.Passage, tableAlias=passage0_}
             |  \-[IDENT] IdentNode: 'passageEtat' {originalText=passageEtat}
             \-[NUM_INT] LiteralNode: '0'

2014-05-16 22:32:06,342 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,342 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: select p from jpa.Passage p where p.candidatid =:candidat and p.passageEtat = 0
2014-05-16 22:32:06,342 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select passage0_.PASSAGEID as PASSAGEID5_, passage0_.PASSAGE_ETAT as PASSAGE2_5_, passage0_.PASSAGE_DATE as PASSAGE3_5_, passage0_.PASSAGEDEBUT_VAL as PASSAGED4_5_, passage0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_, passage0_.CANDIDATID as CANDIDATID5_ from passage passage0_ where passage0_.CANDIDATID=? and passage0_.PASSAGE_ETAT=0
2014-05-16 22:32:06,342 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,343 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,343 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select passage0_.PASSAGEID as PASSAGEID5_, passage0_.PASSAGE_ETAT as PASSAGE2_5_, passage0_.PASSAGE_DATE as PASSAGE3_5_, passage0_.PASSAGEDEBUT_VAL as PASSAGED4_5_, passage0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_, passage0_.CANDIDATID as CANDIDATID5_ from passage passage0_ where passage0_.CANDIDATID=? and passage0_.PASSAGE_ETAT=0
2014-05-16 22:32:06,344 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,344 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,344 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,345 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,345 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,345 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,346 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,346 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,346 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227263
2014-05-16 22:32:06,347 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,347 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,347 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,356 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,356 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,357 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,357 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select test0_.TESTID as TESTID3_, test0_.TESTMATIERE as TESTMATI2_3_, test0_.TESTDUREE as TESTDUREE3_, test0_.TEST_NBQUESTION_RUB as TEST4_3_, test0_.TESTNATURE as TESTNATURE3_, test0_.TESTFORMAT as TESTFORMAT3_, test0_.TEST_START as TEST7_3_, test0_.TEST_DESCRIPTION as TEST8_3_, test0_.THEME as THEME3_, test0_.NIVEAU as NIVEAU3_, test0_.CATEGORIEID as CATEGOR11_3_ from test test0_ where test0_.TESTID=1
2014-05-16 22:32:06,358 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,358 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#1]
2014-05-16 22:32:06,359 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,359 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,359 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#1]
2014-05-16 22:32:06,360 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#1]
2014-05-16 22:32:06,360 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,360 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,360 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,360 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,360 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.rubriqueCollection#1], was: [jpa.Test.rubriqueCollection#1] (uninitialized)
2014-05-16 22:32:06,361 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.jointureCollection#1], was: [jpa.Test.jointureCollection#1] (uninitialized)
2014-05-16 22:32:06,361 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,361 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2014-05-16 22:32:06,361 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,365 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Test{rubriqueCollection=<uninitialized>, testmatiere=Développement PHP, testformat=CODE, theme=Boucles en PHP, jointureCollection=<uninitialized>, testnature=THEM, testid=1, testDescription=Les boucles permettent d'effectuer un certain nombre de fois les mêmes opérations, par exemple afficher une suite de nombres que l'on incrémentera à chaque tour de boucle. 
Vous allez pouvoir répéter autant d'instructions que vous souhaitez et vous arrêter lorsque vous l'aurez décidé.
Ce test vérifiera les compétences du candidat sur ces notions élémentaires.
, categorieid=jpa.Categorie#1, testStart=Instructions début, niveau=1, testNbquestionRub=10, testduree=20}
2014-05-16 22:32:06,370 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,370 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,370 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,371 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227263
2014-05-16 22:32:06,371 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,371 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,371 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,379 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,380 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,380 [main] DEBUG org.hibernate.id.IncrementGenerator.initializePreviousValueHolder(IncrementGenerator.java:123) - fetching initial value: select max(RUBRIQUEID) from rubrique
2014-05-16 22:32:06,380 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,380 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select max(RUBRIQUEID) from rubrique
2014-05-16 22:32:06,381 [main] DEBUG org.hibernate.id.IncrementGenerator.initializePreviousValueHolder(IncrementGenerator.java:136) - first free id: 19
2014-05-16 22:32:06,381 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,382 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 19, using strategy: org.hibernate.id.IncrementGenerator
2014-05-16 22:32:06,382 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,382 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,382 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#19], was: [<unreferenced>] (initialized)
2014-05-16 22:32:06,382 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,383 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2014-05-16 22:32:06,383 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,383 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=[], rubriqueid=19, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:06,386 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,386 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into rubrique (RUBRIQUENOM, TESTID, RUBRIQUEID) values (?, ?, ?)
2014-05-16 22:32:06,386 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:06,387 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,387 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,387 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,387 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,388 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#19], was: [jpa.Rubrique.questionCollection#19] (initialized)
2014-05-16 22:32:06,388 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,388 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2014-05-16 22:32:06,388 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,388 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=[], rubriqueid=19, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:06,390 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,390 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,391 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,391 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Rubrique where rubriqueid = 19
2014-05-16 22:32:06,393 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Rubrique'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'rubriqueid'
          \-[NUM_INT] Node: '19'

2014-05-16 22:32:06,393 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,393 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-05-16 22:32:06,393 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Rubrique (no alias) -> rubrique0_
2014-05-16 22:32:06,394 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-05-16 22:32:06,394 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : rubriqueid -> org.hibernate.type.IntegerType@1871392
2014-05-16 22:32:06,394 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.rubriqueid -> rubrique0_.RUBRIQUEID
2014-05-16 22:32:06,394 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-05-16 22:32:06,395 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} rubrique rubrique0_ ) ( where ( = ( rubrique0_.RUBRIQUEID {synthetic-alias} rubriqueid ) 19 ) ) )
2014-05-16 22:32:06,395 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-05-16 22:32:06,395 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [rubrique rubrique0_]
2014-05-16 22:32:06,395 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-05-16 22:32:06,396 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (rubrique)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'rubrique0_.RUBRIQUEID as RUBRIQUEID6_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=rubrique,tableAlias=rubrique0_,origin=null,columns={,className=jpa.Rubrique}}}
    |  \-[SQL_TOKEN] SqlFragment: 'rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_, rubrique0_.TESTID as TESTID6_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[rubrique0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'rubrique rubrique0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=rubrique,tableAlias=rubrique0_,origin=null,columns={,className=jpa.Rubrique}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'rubrique0_.RUBRIQUEID' {propertyName=rubriqueid,dereferenceType=ALL,propertyPath=rubriqueid,path={synthetic-alias}.rubriqueid,tableAlias=rubrique0_,className=jpa.Rubrique,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'rubriqueid' {originalText=rubriqueid}
          \-[NUM_INT] LiteralNode: '19'

2014-05-16 22:32:06,396 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,396 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Rubrique where rubriqueid = 19
2014-05-16 22:32:06,396 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select rubrique0_.RUBRIQUEID as RUBRIQUEID6_, rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_, rubrique0_.TESTID as TESTID6_ from rubrique rubrique0_ where rubrique0_.RUBRIQUEID=19
2014-05-16 22:32:06,397 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,397 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,397 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select rubrique0_.RUBRIQUEID as RUBRIQUEID6_, rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_, rubrique0_.TESTID as TESTID6_ from rubrique rubrique0_ where rubrique0_.RUBRIQUEID=19
2014-05-16 22:32:06,398 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,398 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#19]
2014-05-16 22:32:06,398 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,399 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,399 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,399 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,399 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227263
2014-05-16 22:32:06,400 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,400 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,400 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,408 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,408 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,411 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227264
2014-05-16 22:32:06,411 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,411 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,411 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,420 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,420 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,421 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Test where testid = 18
2014-05-16 22:32:06,422 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Test'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'testid'
          \-[NUM_INT] Node: '18'

2014-05-16 22:32:06,422 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,423 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-05-16 22:32:06,423 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Test (no alias) -> test0_
2014-05-16 22:32:06,423 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-05-16 22:32:06,423 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : testid -> org.hibernate.type.IntegerType@1871392
2014-05-16 22:32:06,424 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.testid -> test0_.TESTID
2014-05-16 22:32:06,424 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-05-16 22:32:06,428 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} test test0_ ) ( where ( = ( test0_.TESTID {synthetic-alias} testid ) 18 ) ) )
2014-05-16 22:32:06,428 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-05-16 22:32:06,428 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [test test0_]
2014-05-16 22:32:06,429 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-05-16 22:32:06,429 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (test)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'test0_.TESTID as TESTID3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=test,tableAlias=test0_,origin=null,columns={,className=jpa.Test}}}
    |  \-[SQL_TOKEN] SqlFragment: 'test0_.TESTMATIERE as TESTMATI2_3_, test0_.TESTDUREE as TESTDUREE3_, test0_.TEST_NBQUESTION_RUB as TEST4_3_, test0_.TESTNATURE as TESTNATURE3_, test0_.TESTFORMAT as TESTFORMAT3_, test0_.TEST_START as TEST7_3_, test0_.TEST_DESCRIPTION as TEST8_3_, test0_.THEME as THEME3_, test0_.NIVEAU as NIVEAU3_, test0_.CATEGORIEID as CATEGOR11_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[test0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'test test0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=test,tableAlias=test0_,origin=null,columns={,className=jpa.Test}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'test0_.TESTID' {propertyName=testid,dereferenceType=ALL,propertyPath=testid,path={synthetic-alias}.testid,tableAlias=test0_,className=jpa.Test,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'testid' {originalText=testid}
          \-[NUM_INT] LiteralNode: '18'

2014-05-16 22:32:06,429 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,430 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Test where testid = 18
2014-05-16 22:32:06,430 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select test0_.TESTID as TESTID3_, test0_.TESTMATIERE as TESTMATI2_3_, test0_.TESTDUREE as TESTDUREE3_, test0_.TEST_NBQUESTION_RUB as TEST4_3_, test0_.TESTNATURE as TESTNATURE3_, test0_.TESTFORMAT as TESTFORMAT3_, test0_.TEST_START as TEST7_3_, test0_.TEST_DESCRIPTION as TEST8_3_, test0_.THEME as THEME3_, test0_.NIVEAU as NIVEAU3_, test0_.CATEGORIEID as CATEGOR11_3_ from test test0_ where test0_.TESTID=18
2014-05-16 22:32:06,430 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,430 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,431 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select test0_.TESTID as TESTID3_, test0_.TESTMATIERE as TESTMATI2_3_, test0_.TESTDUREE as TESTDUREE3_, test0_.TEST_NBQUESTION_RUB as TEST4_3_, test0_.TESTNATURE as TESTNATURE3_, test0_.TESTFORMAT as TESTFORMAT3_, test0_.TEST_START as TEST7_3_, test0_.TEST_DESCRIPTION as TEST8_3_, test0_.THEME as THEME3_, test0_.NIVEAU as NIVEAU3_, test0_.CATEGORIEID as CATEGOR11_3_ from test test0_ where test0_.TESTID=18
2014-05-16 22:32:06,431 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,432 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,432 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,432 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,432 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,433 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,433 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,433 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,433 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227264
2014-05-16 22:32:06,434 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,434 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,434 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,442 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,442 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,443 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,443 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select rubrique0_.RUBRIQUEID as RUBRIQUEID6_, rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_, rubrique0_.TESTID as TESTID6_ from rubrique rubrique0_ where rubrique0_.TESTID=?
2014-05-16 22:32:06,444 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,444 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,444 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,444 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,445 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,445 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,445 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,446 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,448 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227264
2014-05-16 22:32:06,448 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,448 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,448 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,457 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,457 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,457 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,458 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,458 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,458 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,459 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,459 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ADMINID as ADMINID1_0_, this_.ADMINLOGIN as ADMINLOGIN1_0_, this_.ADMINPASSWORD as ADMINPAS3_1_0_ from admin this_
2014-05-16 22:32:06,460 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,460 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Admin#1]
2014-05-16 22:32:06,460 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Admin#2]
2014-05-16 22:32:06,461 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,461 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,461 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Admin#1]
2014-05-16 22:32:06,461 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Admin#1]
2014-05-16 22:32:06,461 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Admin#2]
2014-05-16 22:32:06,462 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Admin#2]
2014-05-16 22:32:06,462 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,462 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,463 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227264
2014-05-16 22:32:06,463 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,463 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,463 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,471 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,472 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,472 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,472 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,473 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,473 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 1 removals to 0 collections
2014-05-16 22:32:06,473 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,473 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=sam.fab@hotmail.fr, passageCollection=null, candidatDateNaissance=Tue Jan 01 00:00:00 GMT-12:00 1985, candidatPrenom=Samuel, candidatNom=Faber, candidatCivilite=Mr, candidatid=1}
2014-05-16 22:32:06,474 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,474 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update candidat set CANDIDAT_CIVILITE=?, CANDIDAT_NOM=?, CANDIDAT_PRENOM=?, CANDIDAT_MAIL=?, CANDIDAT_DATE_NAISSANCE=? where CANDIDATID=?
2014-05-16 22:32:06,475 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:06,475 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,476 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,476 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,476 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,476 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,476 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,476 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,477 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=sam.fab@hotmail.fr, passageCollection=null, candidatDateNaissance=Tue Jan 01 00:00:00 GMT-12:00 1985, candidatPrenom=Samuel, candidatNom=Faber, candidatCivilite=Mr, candidatid=1}
2014-05-16 22:32:06,478 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,479 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,479 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,479 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,479 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select candidat0_.CANDIDATID as CANDIDATID2_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_ from candidat candidat0_ where candidat0_.CANDIDATID=1
2014-05-16 22:32:06,480 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,480 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#1]
2014-05-16 22:32:06,481 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,481 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,481 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,481 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,481 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227264
2014-05-16 22:32:06,481 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,482 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,482 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,490 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,490 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,491 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,491 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,491 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,491 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 1 removals to 0 collections
2014-05-16 22:32:06,491 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,492 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=romain@hotmail.fr, passageCollection=null, candidatDateNaissance=Thu Mar 10 00:00:00 GMT-12:00 1983, candidatPrenom=Romain, candidatNom=Crusson, candidatCivilite=Mr, candidatid=2}
2014-05-16 22:32:06,492 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,492 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update candidat set CANDIDAT_CIVILITE=?, CANDIDAT_NOM=?, CANDIDAT_PRENOM=?, CANDIDAT_MAIL=?, CANDIDAT_DATE_NAISSANCE=? where CANDIDATID=?
2014-05-16 22:32:06,493 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:06,494 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,494 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,494 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,494 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,494 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,495 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,495 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,495 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=romain@hotmail.fr, passageCollection=null, candidatDateNaissance=Thu Mar 10 00:00:00 GMT-12:00 1983, candidatPrenom=Romain, candidatNom=Crusson, candidatCivilite=Mr, candidatid=2}
2014-05-16 22:32:06,496 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,497 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,497 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,497 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,497 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select candidat0_.CANDIDATID as CANDIDATID2_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_ from candidat candidat0_ where candidat0_.CANDIDATID=2
2014-05-16 22:32:06,498 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,498 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#2]
2014-05-16 22:32:06,499 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,499 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,499 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,499 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,499 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227264
2014-05-16 22:32:06,499 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,500 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,500 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,508 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,508 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,508 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,509 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,509 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,509 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 1 removals to 0 collections
2014-05-16 22:32:06,509 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,509 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=lcrusson.pro@gmail.com, passageCollection=null, candidatDateNaissance=Tue Oct 21 00:00:00 GMT-12:00 1980, candidatPrenom=loïc, candidatNom=Crusson, candidatCivilite=Mr, candidatid=3}
2014-05-16 22:32:06,510 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,510 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update candidat set CANDIDAT_CIVILITE=?, CANDIDAT_NOM=?, CANDIDAT_PRENOM=?, CANDIDAT_MAIL=?, CANDIDAT_DATE_NAISSANCE=? where CANDIDATID=?
2014-05-16 22:32:06,511 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:06,511 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,512 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,512 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,512 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,512 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,512 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,512 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,513 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=lcrusson.pro@gmail.com, passageCollection=null, candidatDateNaissance=Tue Oct 21 00:00:00 GMT-12:00 1980, candidatPrenom=loïc, candidatNom=Crusson, candidatCivilite=Mr, candidatid=3}
2014-05-16 22:32:06,514 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,515 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,515 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,515 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,515 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select candidat0_.CANDIDATID as CANDIDATID2_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_ from candidat candidat0_ where candidat0_.CANDIDATID=3
2014-05-16 22:32:06,516 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,516 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#3]
2014-05-16 22:32:06,517 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,517 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,517 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,517 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,517 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227265
2014-05-16 22:32:06,517 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,518 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,518 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,526 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,526 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,527 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,527 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,527 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,527 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 1 removals to 0 collections
2014-05-16 22:32:06,527 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,528 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=rv@hotmail.fr, passageCollection=null, candidatDateNaissance=Tue Jun 07 00:00:00 GMT-12:00 1983, candidatPrenom=Hervé, candidatNom=Halgand, candidatCivilite=Mr, candidatid=4}
2014-05-16 22:32:06,528 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,528 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update candidat set CANDIDAT_CIVILITE=?, CANDIDAT_NOM=?, CANDIDAT_PRENOM=?, CANDIDAT_MAIL=?, CANDIDAT_DATE_NAISSANCE=? where CANDIDATID=?
2014-05-16 22:32:06,529 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:06,530 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,530 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,530 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,530 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,530 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,531 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,531 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,531 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=rv@hotmail.fr, passageCollection=null, candidatDateNaissance=Tue Jun 07 00:00:00 GMT-12:00 1983, candidatPrenom=Hervé, candidatNom=Halgand, candidatCivilite=Mr, candidatid=4}
2014-05-16 22:32:06,532 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,533 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,533 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,533 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,533 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select candidat0_.CANDIDATID as CANDIDATID2_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_ from candidat candidat0_ where candidat0_.CANDIDATID=4
2014-05-16 22:32:06,534 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,534 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#4]
2014-05-16 22:32:06,535 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,535 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,535 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,535 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,536 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227265
2014-05-16 22:32:06,536 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,536 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,536 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,544 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,544 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,545 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,545 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,546 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,546 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,546 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,546 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.CANDIDATID as CANDIDATID2_0_, this_.CANDIDAT_CIVILITE as CANDIDAT2_2_0_, this_.CANDIDAT_NOM as CANDIDAT3_2_0_, this_.CANDIDAT_PRENOM as CANDIDAT4_2_0_, this_.CANDIDAT_MAIL as CANDIDAT5_2_0_, this_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_0_ from candidat this_
2014-05-16 22:32:06,547 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,548 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#1]
2014-05-16 22:32:06,548 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#2]
2014-05-16 22:32:06,548 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#3]
2014-05-16 22:32:06,549 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#4]
2014-05-16 22:32:06,549 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,549 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,549 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Candidat#1]
2014-05-16 22:32:06,552 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Candidat#1]
2014-05-16 22:32:06,552 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Candidat#2]
2014-05-16 22:32:06,552 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Candidat#2]
2014-05-16 22:32:06,553 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Candidat#3]
2014-05-16 22:32:06,553 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Candidat#3]
2014-05-16 22:32:06,553 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Candidat#4]
2014-05-16 22:32:06,553 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Candidat#4]
2014-05-16 22:32:06,553 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,554 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,554 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227265
2014-05-16 22:32:06,554 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,554 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,554 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,563 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,563 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,564 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,564 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select candidat0_.CANDIDATID as CANDIDATID2_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_ from candidat candidat0_ where candidat0_.CANDIDATID=1
2014-05-16 22:32:06,565 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,565 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#1]
2014-05-16 22:32:06,566 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,566 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,566 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Candidat#1]
2014-05-16 22:32:06,567 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Candidat#1]
2014-05-16 22:32:06,567 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,567 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,567 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,567 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,567 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Candidat.passageCollection#1], was: [jpa.Candidat.passageCollection#1] (uninitialized)
2014-05-16 22:32:06,568 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,568 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2014-05-16 22:32:06,568 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,568 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=sam.fab@hotmail.fr, passageCollection=<uninitialized>, candidatDateNaissance=1985-01-01, candidatPrenom=Samuel, candidatNom=Faber, candidatCivilite=Mr, candidatid=1}
2014-05-16 22:32:06,569 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,569 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,569 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,569 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227265
2014-05-16 22:32:06,570 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,570 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,570 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,579 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,579 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,580 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 3, using strategy: org.hibernate.id.IncrementGenerator
2014-05-16 22:32:06,580 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,580 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,580 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,581 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,581 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,581 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Passage{reponseCollection=null, passageDate=null, passagedebutVal=null, passageEtat=null, passagefinVal=null, jointureCollection=null, reponseHistoCollection=null, candidatid=jpa.Candidat#1, passageid=3}
2014-05-16 22:32:06,581 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,581 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into passage (PASSAGE_ETAT, PASSAGE_DATE, PASSAGEDEBUT_VAL, PASSAGEFIN_VAL, CANDIDATID, PASSAGEID) values (?, ?, ?, ?, ?, ?)
2014-05-16 22:32:06,582 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:06,583 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,583 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,583 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,583 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,583 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,583 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,584 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,584 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Passage{reponseCollection=null, passageDate=null, passagedebutVal=null, passageEtat=null, passagefinVal=null, jointureCollection=null, reponseHistoCollection=null, candidatid=jpa.Candidat#1, passageid=3}
2014-05-16 22:32:06,585 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,585 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,586 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,586 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Passage where passageid = 3
2014-05-16 22:32:06,588 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Passage'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'passageid'
          \-[NUM_INT] Node: '3'

2014-05-16 22:32:06,588 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,588 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-05-16 22:32:06,588 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Passage (no alias) -> passage0_
2014-05-16 22:32:06,589 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-05-16 22:32:06,589 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : passageid -> org.hibernate.type.IntegerType@1871392
2014-05-16 22:32:06,589 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.passageid -> passage0_.PASSAGEID
2014-05-16 22:32:06,589 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-05-16 22:32:06,589 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} passage passage0_ ) ( where ( = ( passage0_.PASSAGEID {synthetic-alias} passageid ) 3 ) ) )
2014-05-16 22:32:06,590 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-05-16 22:32:06,590 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [passage passage0_]
2014-05-16 22:32:06,590 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-05-16 22:32:06,591 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (passage)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'passage0_.PASSAGEID as PASSAGEID5_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=passage,tableAlias=passage0_,origin=null,columns={,className=jpa.Passage}}}
    |  \-[SQL_TOKEN] SqlFragment: 'passage0_.PASSAGE_ETAT as PASSAGE2_5_, passage0_.PASSAGE_DATE as PASSAGE3_5_, passage0_.PASSAGEDEBUT_VAL as PASSAGED4_5_, passage0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_, passage0_.CANDIDATID as CANDIDATID5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[passage0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'passage passage0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=passage,tableAlias=passage0_,origin=null,columns={,className=jpa.Passage}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'passage0_.PASSAGEID' {propertyName=passageid,dereferenceType=ALL,propertyPath=passageid,path={synthetic-alias}.passageid,tableAlias=passage0_,className=jpa.Passage,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'passageid' {originalText=passageid}
          \-[NUM_INT] LiteralNode: '3'

2014-05-16 22:32:06,591 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,591 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Passage where passageid = 3
2014-05-16 22:32:06,591 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select passage0_.PASSAGEID as PASSAGEID5_, passage0_.PASSAGE_ETAT as PASSAGE2_5_, passage0_.PASSAGE_DATE as PASSAGE3_5_, passage0_.PASSAGEDEBUT_VAL as PASSAGED4_5_, passage0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_, passage0_.CANDIDATID as CANDIDATID5_ from passage passage0_ where passage0_.PASSAGEID=3
2014-05-16 22:32:06,592 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,592 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,592 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select passage0_.PASSAGEID as PASSAGEID5_, passage0_.PASSAGE_ETAT as PASSAGE2_5_, passage0_.PASSAGE_DATE as PASSAGE3_5_, passage0_.PASSAGEDEBUT_VAL as PASSAGED4_5_, passage0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_, passage0_.CANDIDATID as CANDIDATID5_ from passage passage0_ where passage0_.PASSAGEID=3
2014-05-16 22:32:06,593 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,593 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Passage#3]
2014-05-16 22:32:06,594 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,594 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,594 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,594 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,594 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227265
2014-05-16 22:32:06,595 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,595 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,595 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,603 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,604 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,604 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,604 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,605 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,605 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,606 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,606 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.TESTID as TESTID3_0_, this_.TESTMATIERE as TESTMATI2_3_0_, this_.TESTDUREE as TESTDUREE3_0_, this_.TEST_NBQUESTION_RUB as TEST4_3_0_, this_.TESTNATURE as TESTNATURE3_0_, this_.TESTFORMAT as TESTFORMAT3_0_, this_.TEST_START as TEST7_3_0_, this_.TEST_DESCRIPTION as TEST8_3_0_, this_.THEME as THEME3_0_, this_.NIVEAU as NIVEAU3_0_, this_.CATEGORIEID as CATEGOR11_3_0_ from test this_
2014-05-16 22:32:06,607 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,607 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#1]
2014-05-16 22:32:06,608 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#2]
2014-05-16 22:32:06,608 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#3]
2014-05-16 22:32:06,609 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#4]
2014-05-16 22:32:06,609 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#5]
2014-05-16 22:32:06,609 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#6]
2014-05-16 22:32:06,610 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,610 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,610 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#1]
2014-05-16 22:32:06,610 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#1]
2014-05-16 22:32:06,611 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#2]
2014-05-16 22:32:06,611 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#2]
2014-05-16 22:32:06,611 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#3]
2014-05-16 22:32:06,611 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#3]
2014-05-16 22:32:06,611 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#4]
2014-05-16 22:32:06,612 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#4]
2014-05-16 22:32:06,612 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#5]
2014-05-16 22:32:06,612 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#5]
2014-05-16 22:32:06,612 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#6]
2014-05-16 22:32:06,613 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#6]
2014-05-16 22:32:06,613 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,613 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,613 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227266
2014-05-16 22:32:06,613 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,613 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,614 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,622 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,622 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,623 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 9, using strategy: org.hibernate.id.IncrementGenerator
2014-05-16 22:32:06,623 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,623 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,623 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,624 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,624 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,624 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=9, champvide=null, testid=jpa.Test#1, passageid=jpa.Passage#3}
2014-05-16 22:32:06,624 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,624 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into jointure (CHAMPVIDE, TESTID, PASSAGEID, JOINTUREID) values (?, ?, ?, ?)
2014-05-16 22:32:06,625 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:06,626 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,626 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,626 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,626 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,626 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,626 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,627 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,627 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=9, champvide=null, testid=jpa.Test#1, passageid=jpa.Passage#3}
2014-05-16 22:32:06,628 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,628 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,629 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,629 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Jointure where jointureid = 9
2014-05-16 22:32:06,630 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Jointure'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'jointureid'
          \-[NUM_INT] Node: '9'

2014-05-16 22:32:06,631 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,631 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-05-16 22:32:06,631 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Jointure (no alias) -> jointure0_
2014-05-16 22:32:06,632 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-05-16 22:32:06,632 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : jointureid -> org.hibernate.type.IntegerType@1871392
2014-05-16 22:32:06,632 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.jointureid -> jointure0_.JOINTUREID
2014-05-16 22:32:06,632 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-05-16 22:32:06,633 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} jointure jointure0_ ) ( where ( = ( jointure0_.JOINTUREID {synthetic-alias} jointureid ) 9 ) ) )
2014-05-16 22:32:06,633 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-05-16 22:32:06,633 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [jointure jointure0_]
2014-05-16 22:32:06,633 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-05-16 22:32:06,638 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (jointure)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'jointure0_.JOINTUREID as JOINTUREID10_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=jointure,tableAlias=jointure0_,origin=null,columns={,className=jpa.Jointure}}}
    |  \-[SQL_TOKEN] SqlFragment: 'jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[jointure0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'jointure jointure0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=jointure,tableAlias=jointure0_,origin=null,columns={,className=jpa.Jointure}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'jointure0_.JOINTUREID' {propertyName=jointureid,dereferenceType=ALL,propertyPath=jointureid,path={synthetic-alias}.jointureid,tableAlias=jointure0_,className=jpa.Jointure,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'jointureid' {originalText=jointureid}
          \-[NUM_INT] LiteralNode: '9'

2014-05-16 22:32:06,638 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,639 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Jointure where jointureid = 9
2014-05-16 22:32:06,639 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select jointure0_.JOINTUREID as JOINTUREID10_, jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_ from jointure jointure0_ where jointure0_.JOINTUREID=9
2014-05-16 22:32:06,639 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,639 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,640 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select jointure0_.JOINTUREID as JOINTUREID10_, jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_ from jointure jointure0_ where jointure0_.JOINTUREID=9
2014-05-16 22:32:06,640 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,641 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Jointure#9]
2014-05-16 22:32:06,641 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,641 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,641 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,642 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,642 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227266
2014-05-16 22:32:06,642 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,642 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,642 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,650 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,651 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,651 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 10, using strategy: org.hibernate.id.IncrementGenerator
2014-05-16 22:32:06,651 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,652 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,652 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,652 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,652 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,652 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=10, champvide=null, testid=jpa.Test#2, passageid=jpa.Passage#3}
2014-05-16 22:32:06,653 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,653 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into jointure (CHAMPVIDE, TESTID, PASSAGEID, JOINTUREID) values (?, ?, ?, ?)
2014-05-16 22:32:06,653 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:06,654 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,654 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,654 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,654 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,655 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,655 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,655 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,655 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=10, champvide=null, testid=jpa.Test#2, passageid=jpa.Passage#3}
2014-05-16 22:32:06,656 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,657 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,657 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,657 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Jointure where jointureid = 10
2014-05-16 22:32:06,659 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Jointure'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'jointureid'
          \-[NUM_INT] Node: '10'

2014-05-16 22:32:06,659 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,659 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-05-16 22:32:06,660 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Jointure (no alias) -> jointure0_
2014-05-16 22:32:06,660 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-05-16 22:32:06,660 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : jointureid -> org.hibernate.type.IntegerType@1871392
2014-05-16 22:32:06,660 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.jointureid -> jointure0_.JOINTUREID
2014-05-16 22:32:06,661 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-05-16 22:32:06,661 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} jointure jointure0_ ) ( where ( = ( jointure0_.JOINTUREID {synthetic-alias} jointureid ) 10 ) ) )
2014-05-16 22:32:06,661 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-05-16 22:32:06,661 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [jointure jointure0_]
2014-05-16 22:32:06,662 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-05-16 22:32:06,662 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (jointure)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'jointure0_.JOINTUREID as JOINTUREID10_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=jointure,tableAlias=jointure0_,origin=null,columns={,className=jpa.Jointure}}}
    |  \-[SQL_TOKEN] SqlFragment: 'jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[jointure0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'jointure jointure0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=jointure,tableAlias=jointure0_,origin=null,columns={,className=jpa.Jointure}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'jointure0_.JOINTUREID' {propertyName=jointureid,dereferenceType=ALL,propertyPath=jointureid,path={synthetic-alias}.jointureid,tableAlias=jointure0_,className=jpa.Jointure,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'jointureid' {originalText=jointureid}
          \-[NUM_INT] LiteralNode: '10'

2014-05-16 22:32:06,662 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,663 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Jointure where jointureid = 10
2014-05-16 22:32:06,663 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select jointure0_.JOINTUREID as JOINTUREID10_, jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_ from jointure jointure0_ where jointure0_.JOINTUREID=10
2014-05-16 22:32:06,663 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,663 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,663 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select jointure0_.JOINTUREID as JOINTUREID10_, jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_ from jointure jointure0_ where jointure0_.JOINTUREID=10
2014-05-16 22:32:06,664 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,664 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Jointure#10]
2014-05-16 22:32:06,665 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,665 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,665 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,665 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,665 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227266
2014-05-16 22:32:06,666 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,666 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,666 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,674 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,674 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,675 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 11, using strategy: org.hibernate.id.IncrementGenerator
2014-05-16 22:32:06,675 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,675 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,675 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,675 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,675 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,676 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=11, champvide=null, testid=jpa.Test#3, passageid=jpa.Passage#3}
2014-05-16 22:32:06,676 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,676 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into jointure (CHAMPVIDE, TESTID, PASSAGEID, JOINTUREID) values (?, ?, ?, ?)
2014-05-16 22:32:06,677 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:06,677 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,678 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,678 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,678 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,678 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,678 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,679 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,679 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=11, champvide=null, testid=jpa.Test#3, passageid=jpa.Passage#3}
2014-05-16 22:32:06,680 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,680 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,680 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,681 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Jointure where jointureid = 11
2014-05-16 22:32:06,682 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Jointure'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'jointureid'
          \-[NUM_INT] Node: '11'

2014-05-16 22:32:06,683 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,683 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-05-16 22:32:06,683 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Jointure (no alias) -> jointure0_
2014-05-16 22:32:06,683 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-05-16 22:32:06,684 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : jointureid -> org.hibernate.type.IntegerType@1871392
2014-05-16 22:32:06,684 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.jointureid -> jointure0_.JOINTUREID
2014-05-16 22:32:06,684 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-05-16 22:32:06,684 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} jointure jointure0_ ) ( where ( = ( jointure0_.JOINTUREID {synthetic-alias} jointureid ) 11 ) ) )
2014-05-16 22:32:06,685 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-05-16 22:32:06,685 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [jointure jointure0_]
2014-05-16 22:32:06,685 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-05-16 22:32:06,686 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (jointure)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'jointure0_.JOINTUREID as JOINTUREID10_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=jointure,tableAlias=jointure0_,origin=null,columns={,className=jpa.Jointure}}}
    |  \-[SQL_TOKEN] SqlFragment: 'jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[jointure0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'jointure jointure0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=jointure,tableAlias=jointure0_,origin=null,columns={,className=jpa.Jointure}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'jointure0_.JOINTUREID' {propertyName=jointureid,dereferenceType=ALL,propertyPath=jointureid,path={synthetic-alias}.jointureid,tableAlias=jointure0_,className=jpa.Jointure,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'jointureid' {originalText=jointureid}
          \-[NUM_INT] LiteralNode: '11'

2014-05-16 22:32:06,686 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,686 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Jointure where jointureid = 11
2014-05-16 22:32:06,686 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select jointure0_.JOINTUREID as JOINTUREID10_, jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_ from jointure jointure0_ where jointure0_.JOINTUREID=11
2014-05-16 22:32:06,686 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,687 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,687 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select jointure0_.JOINTUREID as JOINTUREID10_, jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_ from jointure jointure0_ where jointure0_.JOINTUREID=11
2014-05-16 22:32:06,688 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,688 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Jointure#11]
2014-05-16 22:32:06,688 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,688 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,689 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,689 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,689 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227266
2014-05-16 22:32:06,689 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,689 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,689 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,698 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,698 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,698 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 12, using strategy: org.hibernate.id.IncrementGenerator
2014-05-16 22:32:06,699 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,699 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,699 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,699 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,699 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,699 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=12, champvide=null, testid=jpa.Test#4, passageid=jpa.Passage#3}
2014-05-16 22:32:06,700 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,700 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into jointure (CHAMPVIDE, TESTID, PASSAGEID, JOINTUREID) values (?, ?, ?, ?)
2014-05-16 22:32:06,700 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:06,701 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,701 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,701 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,702 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,702 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,702 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,702 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,702 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=12, champvide=null, testid=jpa.Test#4, passageid=jpa.Passage#3}
2014-05-16 22:32:06,703 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,704 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,704 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,705 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Jointure where jointureid = 12
2014-05-16 22:32:06,706 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Jointure'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'jointureid'
          \-[NUM_INT] Node: '12'

2014-05-16 22:32:06,706 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,707 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-05-16 22:32:06,707 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Jointure (no alias) -> jointure0_
2014-05-16 22:32:06,707 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-05-16 22:32:06,707 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : jointureid -> org.hibernate.type.IntegerType@1871392
2014-05-16 22:32:06,708 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.jointureid -> jointure0_.JOINTUREID
2014-05-16 22:32:06,708 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-05-16 22:32:06,708 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} jointure jointure0_ ) ( where ( = ( jointure0_.JOINTUREID {synthetic-alias} jointureid ) 12 ) ) )
2014-05-16 22:32:06,708 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-05-16 22:32:06,709 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [jointure jointure0_]
2014-05-16 22:32:06,709 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-05-16 22:32:06,709 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (jointure)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'jointure0_.JOINTUREID as JOINTUREID10_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=jointure,tableAlias=jointure0_,origin=null,columns={,className=jpa.Jointure}}}
    |  \-[SQL_TOKEN] SqlFragment: 'jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[jointure0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'jointure jointure0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=jointure,tableAlias=jointure0_,origin=null,columns={,className=jpa.Jointure}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'jointure0_.JOINTUREID' {propertyName=jointureid,dereferenceType=ALL,propertyPath=jointureid,path={synthetic-alias}.jointureid,tableAlias=jointure0_,className=jpa.Jointure,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'jointureid' {originalText=jointureid}
          \-[NUM_INT] LiteralNode: '12'

2014-05-16 22:32:06,710 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,710 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Jointure where jointureid = 12
2014-05-16 22:32:06,710 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select jointure0_.JOINTUREID as JOINTUREID10_, jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_ from jointure jointure0_ where jointure0_.JOINTUREID=12
2014-05-16 22:32:06,710 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,710 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,711 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select jointure0_.JOINTUREID as JOINTUREID10_, jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_ from jointure jointure0_ where jointure0_.JOINTUREID=12
2014-05-16 22:32:06,711 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,712 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Jointure#12]
2014-05-16 22:32:06,712 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,712 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,712 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,712 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,713 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227267
2014-05-16 22:32:06,713 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,713 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,713 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,721 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,721 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,722 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 13, using strategy: org.hibernate.id.IncrementGenerator
2014-05-16 22:32:06,722 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,722 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,722 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,723 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,723 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,723 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=13, champvide=null, testid=jpa.Test#5, passageid=jpa.Passage#3}
2014-05-16 22:32:06,723 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,723 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into jointure (CHAMPVIDE, TESTID, PASSAGEID, JOINTUREID) values (?, ?, ?, ?)
2014-05-16 22:32:06,724 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:06,725 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,725 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,725 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,725 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,725 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,725 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,726 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,726 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=13, champvide=null, testid=jpa.Test#5, passageid=jpa.Passage#3}
2014-05-16 22:32:06,727 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,727 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,728 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,728 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Jointure where jointureid = 13
2014-05-16 22:32:06,729 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Jointure'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'jointureid'
          \-[NUM_INT] Node: '13'

2014-05-16 22:32:06,730 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,730 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-05-16 22:32:06,730 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Jointure (no alias) -> jointure0_
2014-05-16 22:32:06,730 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-05-16 22:32:06,731 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : jointureid -> org.hibernate.type.IntegerType@1871392
2014-05-16 22:32:06,731 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.jointureid -> jointure0_.JOINTUREID
2014-05-16 22:32:06,731 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-05-16 22:32:06,731 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} jointure jointure0_ ) ( where ( = ( jointure0_.JOINTUREID {synthetic-alias} jointureid ) 13 ) ) )
2014-05-16 22:32:06,732 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-05-16 22:32:06,732 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [jointure jointure0_]
2014-05-16 22:32:06,732 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-05-16 22:32:06,732 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (jointure)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'jointure0_.JOINTUREID as JOINTUREID10_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=jointure,tableAlias=jointure0_,origin=null,columns={,className=jpa.Jointure}}}
    |  \-[SQL_TOKEN] SqlFragment: 'jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[jointure0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'jointure jointure0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=jointure,tableAlias=jointure0_,origin=null,columns={,className=jpa.Jointure}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'jointure0_.JOINTUREID' {propertyName=jointureid,dereferenceType=ALL,propertyPath=jointureid,path={synthetic-alias}.jointureid,tableAlias=jointure0_,className=jpa.Jointure,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'jointureid' {originalText=jointureid}
          \-[NUM_INT] LiteralNode: '13'

2014-05-16 22:32:06,733 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,733 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Jointure where jointureid = 13
2014-05-16 22:32:06,733 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select jointure0_.JOINTUREID as JOINTUREID10_, jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_ from jointure jointure0_ where jointure0_.JOINTUREID=13
2014-05-16 22:32:06,733 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,734 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,734 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select jointure0_.JOINTUREID as JOINTUREID10_, jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_ from jointure jointure0_ where jointure0_.JOINTUREID=13
2014-05-16 22:32:06,735 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,735 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Jointure#13]
2014-05-16 22:32:06,735 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,735 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,735 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,736 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,736 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227267
2014-05-16 22:32:06,736 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,736 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,736 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,744 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,744 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,745 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 14, using strategy: org.hibernate.id.IncrementGenerator
2014-05-16 22:32:06,745 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,745 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,746 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,746 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,746 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,746 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=14, champvide=null, testid=jpa.Test#6, passageid=jpa.Passage#3}
2014-05-16 22:32:06,747 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,747 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into jointure (CHAMPVIDE, TESTID, PASSAGEID, JOINTUREID) values (?, ?, ?, ?)
2014-05-16 22:32:06,747 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:06,748 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,748 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,748 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,748 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,748 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,749 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,749 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,749 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=14, champvide=null, testid=jpa.Test#6, passageid=jpa.Passage#3}
2014-05-16 22:32:06,750 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,750 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,751 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,751 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Jointure where jointureid = 14
2014-05-16 22:32:06,753 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Jointure'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'jointureid'
          \-[NUM_INT] Node: '14'

2014-05-16 22:32:06,753 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,753 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-05-16 22:32:06,753 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Jointure (no alias) -> jointure0_
2014-05-16 22:32:06,754 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-05-16 22:32:06,754 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : jointureid -> org.hibernate.type.IntegerType@1871392
2014-05-16 22:32:06,754 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.jointureid -> jointure0_.JOINTUREID
2014-05-16 22:32:06,754 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-05-16 22:32:06,754 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} jointure jointure0_ ) ( where ( = ( jointure0_.JOINTUREID {synthetic-alias} jointureid ) 14 ) ) )
2014-05-16 22:32:06,755 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-05-16 22:32:06,755 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [jointure jointure0_]
2014-05-16 22:32:06,755 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-05-16 22:32:06,756 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (jointure)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'jointure0_.JOINTUREID as JOINTUREID10_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=jointure,tableAlias=jointure0_,origin=null,columns={,className=jpa.Jointure}}}
    |  \-[SQL_TOKEN] SqlFragment: 'jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[jointure0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'jointure jointure0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=jointure,tableAlias=jointure0_,origin=null,columns={,className=jpa.Jointure}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'jointure0_.JOINTUREID' {propertyName=jointureid,dereferenceType=ALL,propertyPath=jointureid,path={synthetic-alias}.jointureid,tableAlias=jointure0_,className=jpa.Jointure,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'jointureid' {originalText=jointureid}
          \-[NUM_INT] LiteralNode: '14'

2014-05-16 22:32:06,756 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,756 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Jointure where jointureid = 14
2014-05-16 22:32:06,756 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select jointure0_.JOINTUREID as JOINTUREID10_, jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_ from jointure jointure0_ where jointure0_.JOINTUREID=14
2014-05-16 22:32:06,756 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:06,757 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,757 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select jointure0_.JOINTUREID as JOINTUREID10_, jointure0_.CHAMPVIDE as CHAMPVIDE10_, jointure0_.TESTID as TESTID10_, jointure0_.PASSAGEID as PASSAGEID10_ from jointure jointure0_ where jointure0_.JOINTUREID=14
2014-05-16 22:32:06,758 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,758 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Jointure#14]
2014-05-16 22:32:06,758 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,758 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,759 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,759 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,759 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227267
2014-05-16 22:32:06,759 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,759 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,759 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,768 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,768 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,769 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,769 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,769 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Passage.jointureCollection#3], was: [<unreferenced>] (initialized)
2014-05-16 22:32:06,769 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,770 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 1 (re)creations, 0 updates, 3 removals to 1 collections
2014-05-16 22:32:06,770 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,770 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Passage{reponseCollection=null, passageDate=null, passagedebutVal=null, passageEtat=null, passagefinVal=null, jointureCollection=[jpa.Jointure#9, jpa.Jointure#10, jpa.Jointure#11, jpa.Jointure#12, jpa.Jointure#13, jpa.Jointure#14], reponseHistoCollection=null, candidatid=jpa.Candidat#1, passageid=3}
2014-05-16 22:32:06,771 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,771 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update passage set PASSAGE_ETAT=?, PASSAGE_DATE=?, PASSAGEDEBUT_VAL=?, PASSAGEFIN_VAL=?, CANDIDATID=? where PASSAGEID=?
2014-05-16 22:32:06,771 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:06,772 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,773 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,773 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,773 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Passage.jointureCollection#3], was: [jpa.Passage.jointureCollection#3] (initialized)
2014-05-16 22:32:06,773 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,773 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2014-05-16 22:32:06,773 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,774 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Passage{reponseCollection=null, passageDate=null, passagedebutVal=null, passageEtat=null, passagefinVal=null, jointureCollection=[jpa.Jointure#9, jpa.Jointure#10, jpa.Jointure#11, jpa.Jointure#12, jpa.Jointure#13, jpa.Jointure#14], reponseHistoCollection=null, candidatid=jpa.Candidat#1, passageid=3}
2014-05-16 22:32:06,774 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,774 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select passage0_.PASSAGEID as PASSAGEID5_, passage0_.PASSAGE_ETAT as PASSAGE2_5_, passage0_.PASSAGE_DATE as PASSAGE3_5_, passage0_.PASSAGEDEBUT_VAL as PASSAGED4_5_, passage0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_, passage0_.CANDIDATID as CANDIDATID5_ from passage passage0_ where passage0_.PASSAGEID=3
2014-05-16 22:32:06,775 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,776 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Passage#3]
2014-05-16 22:32:06,776 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,776 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,776 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,776 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,777 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,777 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,777 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Passage.jointureCollection#3], was: [jpa.Passage.jointureCollection#3] (initialized)
2014-05-16 22:32:06,777 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:06,777 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2014-05-16 22:32:06,777 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,778 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Passage{reponseCollection=null, passageDate=null, passagedebutVal=null, passageEtat=null, passagefinVal=null, jointureCollection=[jpa.Jointure#9, jpa.Jointure#10, jpa.Jointure#11, jpa.Jointure#12, jpa.Jointure#13, jpa.Jointure#14], reponseHistoCollection=null, candidatid=jpa.Candidat#1, passageid=3}
2014-05-16 22:32:06,779 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,780 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,780 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,780 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227267
2014-05-16 22:32:06,780 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,780 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,781 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,789 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,789 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,790 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,790 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.JOINTUREID as JOINTUREID10_0_, this_.CHAMPVIDE as CHAMPVIDE10_0_, this_.TESTID as TESTID10_0_, this_.PASSAGEID as PASSAGEID10_0_ from jointure this_ where this_.JOINTUREID=?
2014-05-16 22:32:06,791 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,792 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Jointure#9]
2014-05-16 22:32:06,792 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,792 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,792 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Jointure#9]
2014-05-16 22:32:06,793 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Jointure#9]
2014-05-16 22:32:06,793 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,794 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,794 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,794 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,794 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-05-16 22:32:06,794 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,794 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,795 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=9, champvide=null, testid=jpa.Test#1, passageid=jpa.Passage#3}
2014-05-16 22:32:06,795 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,795 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from jointure where JOINTUREID=?
2014-05-16 22:32:06,795 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:06,796 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,797 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,798 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,798 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,798 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227267
2014-05-16 22:32:06,798 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,798 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,799 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,891 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,892 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,892 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,893 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.JOINTUREID as JOINTUREID10_0_, this_.CHAMPVIDE as CHAMPVIDE10_0_, this_.TESTID as TESTID10_0_, this_.PASSAGEID as PASSAGEID10_0_ from jointure this_ where this_.JOINTUREID=?
2014-05-16 22:32:06,894 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,894 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Jointure#10]
2014-05-16 22:32:06,894 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,894 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,895 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Jointure#10]
2014-05-16 22:32:06,895 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Jointure#10]
2014-05-16 22:32:06,895 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,895 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,895 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,896 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,896 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-05-16 22:32:06,896 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,896 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,896 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=10, champvide=null, testid=jpa.Test#2, passageid=jpa.Passage#3}
2014-05-16 22:32:06,896 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,897 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from jointure where JOINTUREID=?
2014-05-16 22:32:06,897 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:06,898 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,899 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,900 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,900 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,900 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227269
2014-05-16 22:32:06,900 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,900 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,900 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,909 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,909 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,910 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,910 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.JOINTUREID as JOINTUREID10_0_, this_.CHAMPVIDE as CHAMPVIDE10_0_, this_.TESTID as TESTID10_0_, this_.PASSAGEID as PASSAGEID10_0_ from jointure this_ where this_.JOINTUREID=?
2014-05-16 22:32:06,911 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,911 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Jointure#11]
2014-05-16 22:32:06,912 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,912 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,912 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Jointure#11]
2014-05-16 22:32:06,912 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Jointure#11]
2014-05-16 22:32:06,912 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,913 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,913 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,913 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,913 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-05-16 22:32:06,913 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,913 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,914 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=11, champvide=null, testid=jpa.Test#3, passageid=jpa.Passage#3}
2014-05-16 22:32:06,914 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,914 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from jointure where JOINTUREID=?
2014-05-16 22:32:06,914 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:06,915 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,916 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,916 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,917 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,917 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227269
2014-05-16 22:32:06,917 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,917 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,917 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,925 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,926 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,927 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,927 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.JOINTUREID as JOINTUREID10_0_, this_.CHAMPVIDE as CHAMPVIDE10_0_, this_.TESTID as TESTID10_0_, this_.PASSAGEID as PASSAGEID10_0_ from jointure this_ where this_.JOINTUREID=?
2014-05-16 22:32:06,928 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,928 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Jointure#12]
2014-05-16 22:32:06,928 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,928 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,929 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Jointure#12]
2014-05-16 22:32:06,929 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Jointure#12]
2014-05-16 22:32:06,930 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,930 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,930 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,930 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,930 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-05-16 22:32:06,930 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,931 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,931 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=12, champvide=null, testid=jpa.Test#4, passageid=jpa.Passage#3}
2014-05-16 22:32:06,931 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,931 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from jointure where JOINTUREID=?
2014-05-16 22:32:06,931 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:06,932 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,933 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,934 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,934 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,934 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227269
2014-05-16 22:32:06,934 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,934 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,934 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,942 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,943 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,944 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,944 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.JOINTUREID as JOINTUREID10_0_, this_.CHAMPVIDE as CHAMPVIDE10_0_, this_.TESTID as TESTID10_0_, this_.PASSAGEID as PASSAGEID10_0_ from jointure this_ where this_.JOINTUREID=?
2014-05-16 22:32:06,945 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,945 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Jointure#13]
2014-05-16 22:32:06,945 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,945 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,946 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Jointure#13]
2014-05-16 22:32:06,946 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Jointure#13]
2014-05-16 22:32:06,946 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,946 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,946 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,947 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,947 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-05-16 22:32:06,947 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,947 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,947 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=13, champvide=null, testid=jpa.Test#5, passageid=jpa.Passage#3}
2014-05-16 22:32:06,947 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,948 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from jointure where JOINTUREID=?
2014-05-16 22:32:06,948 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:06,949 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,950 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,950 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,950 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,951 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227269
2014-05-16 22:32:06,951 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,951 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,951 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,959 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,959 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,960 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,960 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.JOINTUREID as JOINTUREID10_0_, this_.CHAMPVIDE as CHAMPVIDE10_0_, this_.TESTID as TESTID10_0_, this_.PASSAGEID as PASSAGEID10_0_ from jointure this_ where this_.JOINTUREID=?
2014-05-16 22:32:06,961 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,961 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Jointure#14]
2014-05-16 22:32:06,962 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,962 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,962 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Jointure#14]
2014-05-16 22:32:06,962 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Jointure#14]
2014-05-16 22:32:06,962 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,963 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,963 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,963 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,963 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-05-16 22:32:06,963 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:06,963 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,964 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Jointure{jointureid=14, champvide=null, testid=jpa.Test#6, passageid=jpa.Passage#3}
2014-05-16 22:32:06,964 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,964 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from jointure where JOINTUREID=?
2014-05-16 22:32:06,964 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:06,965 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,966 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,967 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,967 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,967 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227269
2014-05-16 22:32:06,967 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,967 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,968 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:06,976 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:06,976 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:06,977 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,977 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PASSAGEID as PASSAGEID5_0_, this_.PASSAGE_ETAT as PASSAGE2_5_0_, this_.PASSAGE_DATE as PASSAGE3_5_0_, this_.PASSAGEDEBUT_VAL as PASSAGED4_5_0_, this_.PASSAGEFIN_VAL as PASSAGEFIN5_5_0_, this_.CANDIDATID as CANDIDATID5_0_ from passage this_ where this_.PASSAGEID=?
2014-05-16 22:32:06,978 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,978 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Passage#3]
2014-05-16 22:32:06,979 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,979 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,979 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Passage#3]
2014-05-16 22:32:06,979 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Passage#3]
2014-05-16 22:32:06,979 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,980 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2158) - loading collection: [jpa.Passage.reponseCollection#3]
2014-05-16 22:32:06,980 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,980 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select reponsecol0_.PASSAGEID as PASSAGEID5_1_, reponsecol0_.REPONSEID as REPONSEID1_, reponsecol0_.REPONSEID as REPONSEID8_0_, reponsecol0_.REPONSETEXTE as REPONSET2_8_0_, reponsecol0_.REPONSEDUREE as REPONSED3_8_0_, reponsecol0_.REPONSEMESSAGE as REPONSEM4_8_0_, reponsecol0_.PASSAGEID as PASSAGEID8_0_, reponsecol0_.QUESTIONID as QUESTIONID8_0_ from reponse reponsecol0_ where reponsecol0_.PASSAGEID=?
2014-05-16 22:32:06,981 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,981 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1203) - result set contains (possibly empty) collection: [jpa.Passage.reponseCollection#3]
2014-05-16 22:32:06,982 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,982 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,982 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: jpa.Passage.reponseCollection
2014-05-16 22:32:06,982 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:275) - collection fully initialized: [jpa.Passage.reponseCollection#3]
2014-05-16 22:32:06,983 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:241) - 1 collections initialized for role: jpa.Passage.reponseCollection
2014-05-16 22:32:06,983 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,983 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2182) - done loading collection
2014-05-16 22:32:06,983 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2158) - loading collection: [jpa.Passage.jointureCollection#3]
2014-05-16 22:32:06,983 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,984 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select jointureco0_.PASSAGEID as PASSAGEID5_1_, jointureco0_.JOINTUREID as JOINTUREID1_, jointureco0_.JOINTUREID as JOINTUREID10_0_, jointureco0_.CHAMPVIDE as CHAMPVIDE10_0_, jointureco0_.TESTID as TESTID10_0_, jointureco0_.PASSAGEID as PASSAGEID10_0_ from jointure jointureco0_ where jointureco0_.PASSAGEID=?
2014-05-16 22:32:06,985 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:06,985 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1203) - result set contains (possibly empty) collection: [jpa.Passage.jointureCollection#3]
2014-05-16 22:32:06,985 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:06,985 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,986 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: jpa.Passage.jointureCollection
2014-05-16 22:32:06,986 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:275) - collection fully initialized: [jpa.Passage.jointureCollection#3]
2014-05-16 22:32:06,986 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:241) - 1 collections initialized for role: jpa.Passage.jointureCollection
2014-05-16 22:32:06,986 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:06,986 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2182) - done loading collection
2014-05-16 22:32:06,987 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:06,987 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:06,987 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:06,987 [main] DEBUG org.hibernate.engine.Collections.processDereferencedCollection(Collections.java:75) - Collection dereferenced: [jpa.Passage.reponseHistoCollection#3]
2014-05-16 22:32:06,987 [main] DEBUG org.hibernate.engine.Collections.processDereferencedCollection(Collections.java:75) - Collection dereferenced: [jpa.Passage.reponseCollection#3]
2014-05-16 22:32:06,988 [main] DEBUG org.hibernate.engine.Collections.processDereferencedCollection(Collections.java:75) - Collection dereferenced: [jpa.Passage.jointureCollection#3]
2014-05-16 22:32:06,988 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-05-16 22:32:06,988 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 3 removals to 3 collections
2014-05-16 22:32:06,988 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:06,988 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Passage{reponseCollection=[], passageDate=null, passagedebutVal=null, passageEtat=null, passagefinVal=null, jointureCollection=[], reponseHistoCollection=<uninitialized>, candidatid=jpa.Candidat#1, passageid=3}
2014-05-16 22:32:06,988 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:06,989 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from passage where PASSAGEID=?
2014-05-16 22:32:06,989 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:06,990 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:06,991 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:06,991 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:06,992 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:06,992 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227269
2014-05-16 22:32:06,992 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:06,992 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:06,993 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,001 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,001 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,002 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,002 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select test0_.TESTID as TESTID3_, test0_.TESTMATIERE as TESTMATI2_3_, test0_.TESTDUREE as TESTDUREE3_, test0_.TEST_NBQUESTION_RUB as TEST4_3_, test0_.TESTNATURE as TESTNATURE3_, test0_.TESTFORMAT as TESTFORMAT3_, test0_.TEST_START as TEST7_3_, test0_.TEST_DESCRIPTION as TEST8_3_, test0_.THEME as THEME3_, test0_.NIVEAU as NIVEAU3_, test0_.CATEGORIEID as CATEGOR11_3_ from test test0_ where test0_.TESTID=1
2014-05-16 22:32:07,003 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,003 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#1]
2014-05-16 22:32:07,004 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,004 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,004 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#1]
2014-05-16 22:32:07,005 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#1]
2014-05-16 22:32:07,005 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,005 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,005 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,005 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,006 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.rubriqueCollection#1], was: [jpa.Test.rubriqueCollection#1] (uninitialized)
2014-05-16 22:32:07,006 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.jointureCollection#1], was: [jpa.Test.jointureCollection#1] (uninitialized)
2014-05-16 22:32:07,006 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:07,006 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2014-05-16 22:32:07,006 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,007 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Test{rubriqueCollection=<uninitialized>, testmatiere=Développement PHP, testformat=CODE, theme=Boucles en PHP, jointureCollection=<uninitialized>, testnature=THEM, testid=1, testDescription=Les boucles permettent d'effectuer un certain nombre de fois les mêmes opérations, par exemple afficher une suite de nombres que l'on incrémentera à chaque tour de boucle. 
Vous allez pouvoir répéter autant d'instructions que vous souhaitez et vous arrêter lorsque vous l'aurez décidé.
Ce test vérifiera les compétences du candidat sur ces notions élémentaires.
, categorieid=jpa.Categorie#1, testStart=Instructions début, niveau=1, testNbquestionRub=10, testduree=20}
2014-05-16 22:32:07,007 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,008 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,008 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,008 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227270
2014-05-16 22:32:07,009 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,009 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,009 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,017 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,017 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,018 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,018 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select rubrique0_.RUBRIQUEID as RUBRIQUEID6_, rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_, rubrique0_.TESTID as TESTID6_ from rubrique rubrique0_ where rubrique0_.TESTID=?
2014-05-16 22:32:07,019 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,020 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#1]
2014-05-16 22:32:07,020 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#2]
2014-05-16 22:32:07,020 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#11]
2014-05-16 22:32:07,021 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#12]
2014-05-16 22:32:07,021 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#13]
2014-05-16 22:32:07,021 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#14]
2014-05-16 22:32:07,021 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#15]
2014-05-16 22:32:07,022 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#16]
2014-05-16 22:32:07,022 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#17]
2014-05-16 22:32:07,022 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#18]
2014-05-16 22:32:07,022 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#19]
2014-05-16 22:32:07,023 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,023 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,023 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#1]
2014-05-16 22:32:07,024 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#1]
2014-05-16 22:32:07,024 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#2]
2014-05-16 22:32:07,025 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#2]
2014-05-16 22:32:07,025 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#11]
2014-05-16 22:32:07,025 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#11]
2014-05-16 22:32:07,025 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#12]
2014-05-16 22:32:07,025 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#12]
2014-05-16 22:32:07,026 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#13]
2014-05-16 22:32:07,026 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#13]
2014-05-16 22:32:07,026 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#14]
2014-05-16 22:32:07,026 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#14]
2014-05-16 22:32:07,026 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#15]
2014-05-16 22:32:07,027 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#15]
2014-05-16 22:32:07,027 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#16]
2014-05-16 22:32:07,027 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#16]
2014-05-16 22:32:07,027 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#17]
2014-05-16 22:32:07,028 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#17]
2014-05-16 22:32:07,028 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#18]
2014-05-16 22:32:07,028 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#18]
2014-05-16 22:32:07,028 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#19]
2014-05-16 22:32:07,028 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#19]
2014-05-16 22:32:07,029 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,029 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,029 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,029 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,029 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#1], was: [jpa.Rubrique.questionCollection#1] (uninitialized)
2014-05-16 22:32:07,030 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#2], was: [jpa.Rubrique.questionCollection#2] (uninitialized)
2014-05-16 22:32:07,030 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#11], was: [jpa.Rubrique.questionCollection#11] (uninitialized)
2014-05-16 22:32:07,030 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#12], was: [jpa.Rubrique.questionCollection#12] (uninitialized)
2014-05-16 22:32:07,030 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#13], was: [jpa.Rubrique.questionCollection#13] (uninitialized)
2014-05-16 22:32:07,031 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#14], was: [jpa.Rubrique.questionCollection#14] (uninitialized)
2014-05-16 22:32:07,031 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#15], was: [jpa.Rubrique.questionCollection#15] (uninitialized)
2014-05-16 22:32:07,031 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#16], was: [jpa.Rubrique.questionCollection#16] (uninitialized)
2014-05-16 22:32:07,031 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#17], was: [jpa.Rubrique.questionCollection#17] (uninitialized)
2014-05-16 22:32:07,032 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#18], was: [jpa.Rubrique.questionCollection#18] (uninitialized)
2014-05-16 22:32:07,032 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#19], was: [jpa.Rubrique.questionCollection#19] (uninitialized)
2014-05-16 22:32:07,032 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 11 objects
2014-05-16 22:32:07,032 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 11 collections
2014-05-16 22:32:07,032 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,033 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=16, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:07,033 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=15, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:07,033 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=14, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:07,033 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=13, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:07,034 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=12, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:07,034 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=11, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:07,034 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=19, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:07,034 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=17, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:07,034 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=2, testid=jpa.Test#1, rubriquenom=Boucles PHP - Niveau 2}
2014-05-16 22:32:07,035 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=18, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:07,035 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=1, testid=jpa.Test#1, rubriquenom=Boucles PHP - Niveau 1}
2014-05-16 22:32:07,035 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,036 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,036 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,037 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227270
2014-05-16 22:32:07,037 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,037 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,037 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,046 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,046 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,046 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,047 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select test0_.TESTID as TESTID3_, test0_.TESTMATIERE as TESTMATI2_3_, test0_.TESTDUREE as TESTDUREE3_, test0_.TEST_NBQUESTION_RUB as TEST4_3_, test0_.TESTNATURE as TESTNATURE3_, test0_.TESTFORMAT as TESTFORMAT3_, test0_.TEST_START as TEST7_3_, test0_.TEST_DESCRIPTION as TEST8_3_, test0_.THEME as THEME3_, test0_.NIVEAU as NIVEAU3_, test0_.CATEGORIEID as CATEGOR11_3_ from test test0_ where test0_.TESTID=1
2014-05-16 22:32:07,048 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,048 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#1]
2014-05-16 22:32:07,048 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,049 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,049 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#1]
2014-05-16 22:32:07,049 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#1]
2014-05-16 22:32:07,049 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,050 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,050 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,050 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,050 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.rubriqueCollection#1], was: [jpa.Test.rubriqueCollection#1] (uninitialized)
2014-05-16 22:32:07,050 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.jointureCollection#1], was: [jpa.Test.jointureCollection#1] (uninitialized)
2014-05-16 22:32:07,051 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:07,051 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2014-05-16 22:32:07,051 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,051 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Test{rubriqueCollection=<uninitialized>, testmatiere=Développement PHP, testformat=CODE, theme=Boucles en PHP, jointureCollection=<uninitialized>, testnature=THEM, testid=1, testDescription=Les boucles permettent d'effectuer un certain nombre de fois les mêmes opérations, par exemple afficher une suite de nombres que l'on incrémentera à chaque tour de boucle. 
Vous allez pouvoir répéter autant d'instructions que vous souhaitez et vous arrêter lorsque vous l'aurez décidé.
Ce test vérifiera les compétences du candidat sur ces notions élémentaires.
, categorieid=jpa.Categorie#1, testStart=Instructions début, niveau=1, testNbquestionRub=10, testduree=20}
2014-05-16 22:32:07,052 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,052 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,052 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,052 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227270
2014-05-16 22:32:07,053 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,053 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,053 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,061 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,061 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,062 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,062 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select rubrique0_.RUBRIQUEID as RUBRIQUEID6_, rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_, rubrique0_.TESTID as TESTID6_ from rubrique rubrique0_ where rubrique0_.TESTID=?
2014-05-16 22:32:07,063 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,063 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#1]
2014-05-16 22:32:07,064 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#2]
2014-05-16 22:32:07,064 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#11]
2014-05-16 22:32:07,064 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#12]
2014-05-16 22:32:07,065 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#13]
2014-05-16 22:32:07,065 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#14]
2014-05-16 22:32:07,065 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#15]
2014-05-16 22:32:07,065 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#16]
2014-05-16 22:32:07,066 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#17]
2014-05-16 22:32:07,066 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#18]
2014-05-16 22:32:07,066 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#19]
2014-05-16 22:32:07,066 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,067 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,067 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#1]
2014-05-16 22:32:07,067 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#1]
2014-05-16 22:32:07,067 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#2]
2014-05-16 22:32:07,068 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#2]
2014-05-16 22:32:07,068 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#11]
2014-05-16 22:32:07,068 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#11]
2014-05-16 22:32:07,068 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#12]
2014-05-16 22:32:07,068 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#12]
2014-05-16 22:32:07,069 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#13]
2014-05-16 22:32:07,069 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#13]
2014-05-16 22:32:07,069 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#14]
2014-05-16 22:32:07,069 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#14]
2014-05-16 22:32:07,069 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#15]
2014-05-16 22:32:07,070 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#15]
2014-05-16 22:32:07,070 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#16]
2014-05-16 22:32:07,070 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#16]
2014-05-16 22:32:07,070 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#17]
2014-05-16 22:32:07,071 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#17]
2014-05-16 22:32:07,071 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#18]
2014-05-16 22:32:07,071 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#18]
2014-05-16 22:32:07,071 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#19]
2014-05-16 22:32:07,071 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#19]
2014-05-16 22:32:07,071 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,072 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,072 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,072 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,072 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#1], was: [jpa.Rubrique.questionCollection#1] (uninitialized)
2014-05-16 22:32:07,072 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#2], was: [jpa.Rubrique.questionCollection#2] (uninitialized)
2014-05-16 22:32:07,073 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#11], was: [jpa.Rubrique.questionCollection#11] (uninitialized)
2014-05-16 22:32:07,073 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#12], was: [jpa.Rubrique.questionCollection#12] (uninitialized)
2014-05-16 22:32:07,073 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#13], was: [jpa.Rubrique.questionCollection#13] (uninitialized)
2014-05-16 22:32:07,073 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#14], was: [jpa.Rubrique.questionCollection#14] (uninitialized)
2014-05-16 22:32:07,074 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#15], was: [jpa.Rubrique.questionCollection#15] (uninitialized)
2014-05-16 22:32:07,074 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#16], was: [jpa.Rubrique.questionCollection#16] (uninitialized)
2014-05-16 22:32:07,074 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#17], was: [jpa.Rubrique.questionCollection#17] (uninitialized)
2014-05-16 22:32:07,074 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#18], was: [jpa.Rubrique.questionCollection#18] (uninitialized)
2014-05-16 22:32:07,075 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#19], was: [jpa.Rubrique.questionCollection#19] (uninitialized)
2014-05-16 22:32:07,075 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 11 objects
2014-05-16 22:32:07,075 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 11 collections
2014-05-16 22:32:07,075 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,075 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=16, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:07,076 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=15, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:07,076 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=14, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:07,076 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=13, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:07,076 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=12, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:07,076 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=11, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:07,076 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=19, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:07,077 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=17, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:07,077 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=2, testid=jpa.Test#1, rubriquenom=Boucles PHP - Niveau 2}
2014-05-16 22:32:07,077 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=18, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:07,077 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=1, testid=jpa.Test#1, rubriquenom=Boucles PHP - Niveau 1}
2014-05-16 22:32:07,078 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,078 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,078 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,079 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227270
2014-05-16 22:32:07,079 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,079 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,079 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,088 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,088 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,088 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,089 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONIMAGE as QUESTION2_9_, question0_.QUESTIONTEXT as QUESTION3_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-05-16 22:32:07,090 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,090 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#1]
2014-05-16 22:32:07,090 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#2]
2014-05-16 22:32:07,091 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#3]
2014-05-16 22:32:07,091 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#4]
2014-05-16 22:32:07,091 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#5]
2014-05-16 22:32:07,091 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,092 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,092 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#1]
2014-05-16 22:32:07,092 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#1]
2014-05-16 22:32:07,092 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#2]
2014-05-16 22:32:07,093 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#2]
2014-05-16 22:32:07,093 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#3]
2014-05-16 22:32:07,093 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#3]
2014-05-16 22:32:07,093 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#4]
2014-05-16 22:32:07,093 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#4]
2014-05-16 22:32:07,094 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#5]
2014-05-16 22:32:07,094 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#5]
2014-05-16 22:32:07,094 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,094 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,094 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,095 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,095 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#1], was: [jpa.Question.propositionCollection#1] (uninitialized)
2014-05-16 22:32:07,095 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#1], was: [jpa.Question.reponseHistoCollection#1] (uninitialized)
2014-05-16 22:32:07,095 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#1], was: [jpa.Question.reponseCollection#1] (uninitialized)
2014-05-16 22:32:07,095 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#2], was: [jpa.Question.propositionCollection#2] (uninitialized)
2014-05-16 22:32:07,096 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#2], was: [jpa.Question.reponseHistoCollection#2] (uninitialized)
2014-05-16 22:32:07,096 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#2], was: [jpa.Question.reponseCollection#2] (uninitialized)
2014-05-16 22:32:07,096 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#3], was: [jpa.Question.propositionCollection#3] (uninitialized)
2014-05-16 22:32:07,096 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#3], was: [jpa.Question.reponseHistoCollection#3] (uninitialized)
2014-05-16 22:32:07,096 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#3], was: [jpa.Question.reponseCollection#3] (uninitialized)
2014-05-16 22:32:07,097 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#4], was: [jpa.Question.propositionCollection#4] (uninitialized)
2014-05-16 22:32:07,097 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#4], was: [jpa.Question.reponseHistoCollection#4] (uninitialized)
2014-05-16 22:32:07,097 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#4], was: [jpa.Question.reponseCollection#4] (uninitialized)
2014-05-16 22:32:07,097 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#5], was: [jpa.Question.propositionCollection#5] (uninitialized)
2014-05-16 22:32:07,097 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#5], was: [jpa.Question.reponseHistoCollection#5] (uninitialized)
2014-05-16 22:32:07,098 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#5], was: [jpa.Question.reponseCollection#5] (uninitialized)
2014-05-16 22:32:07,098 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
2014-05-16 22:32:07,098 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 15 collections
2014-05-16 22:32:07,098 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,098 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, questionimage=, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=5}
2014-05-16 22:32:07,098 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, questionimage=, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=4}
2014-05-16 22:32:07,099 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, questionimage=, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=A l'aide d'une boucle foreach, affichez le contenu du tableau., questionid=3}
2014-05-16 22:32:07,099 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, questionimage=, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=2}
2014-05-16 22:32:07,099 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, questionimage=, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=1}
2014-05-16 22:32:07,100 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,100 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,100 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,101 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227271
2014-05-16 22:32:07,101 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,101 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,101 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,110 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,110 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,111 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,111 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONIMAGE as QUESTION2_9_, question0_.QUESTIONTEXT as QUESTION3_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-05-16 22:32:07,112 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,112 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#6]
2014-05-16 22:32:07,113 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#7]
2014-05-16 22:32:07,113 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#8]
2014-05-16 22:32:07,113 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#9]
2014-05-16 22:32:07,113 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#10]
2014-05-16 22:32:07,114 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#11]
2014-05-16 22:32:07,114 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,114 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,114 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#6]
2014-05-16 22:32:07,115 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#6]
2014-05-16 22:32:07,115 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#7]
2014-05-16 22:32:07,115 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#7]
2014-05-16 22:32:07,115 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#8]
2014-05-16 22:32:07,116 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#8]
2014-05-16 22:32:07,116 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#9]
2014-05-16 22:32:07,116 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#9]
2014-05-16 22:32:07,116 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#10]
2014-05-16 22:32:07,116 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#10]
2014-05-16 22:32:07,117 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#11]
2014-05-16 22:32:07,117 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#11]
2014-05-16 22:32:07,117 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,117 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,117 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,118 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,118 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#6], was: [jpa.Question.propositionCollection#6] (uninitialized)
2014-05-16 22:32:07,118 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#6], was: [jpa.Question.reponseHistoCollection#6] (uninitialized)
2014-05-16 22:32:07,118 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#6], was: [jpa.Question.reponseCollection#6] (uninitialized)
2014-05-16 22:32:07,118 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#7], was: [jpa.Question.propositionCollection#7] (uninitialized)
2014-05-16 22:32:07,119 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#7], was: [jpa.Question.reponseHistoCollection#7] (uninitialized)
2014-05-16 22:32:07,119 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#7], was: [jpa.Question.reponseCollection#7] (uninitialized)
2014-05-16 22:32:07,119 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#8], was: [jpa.Question.propositionCollection#8] (uninitialized)
2014-05-16 22:32:07,119 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#8], was: [jpa.Question.reponseHistoCollection#8] (uninitialized)
2014-05-16 22:32:07,119 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#8], was: [jpa.Question.reponseCollection#8] (uninitialized)
2014-05-16 22:32:07,120 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#9], was: [jpa.Question.propositionCollection#9] (uninitialized)
2014-05-16 22:32:07,120 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#9], was: [jpa.Question.reponseHistoCollection#9] (uninitialized)
2014-05-16 22:32:07,120 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#9], was: [jpa.Question.reponseCollection#9] (uninitialized)
2014-05-16 22:32:07,120 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#10], was: [jpa.Question.propositionCollection#10] (uninitialized)
2014-05-16 22:32:07,120 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#10], was: [jpa.Question.reponseHistoCollection#10] (uninitialized)
2014-05-16 22:32:07,121 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#10], was: [jpa.Question.reponseCollection#10] (uninitialized)
2014-05-16 22:32:07,121 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#11], was: [jpa.Question.propositionCollection#11] (uninitialized)
2014-05-16 22:32:07,121 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#11], was: [jpa.Question.reponseHistoCollection#11] (uninitialized)
2014-05-16 22:32:07,121 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#11], was: [jpa.Question.reponseCollection#11] (uninitialized)
2014-05-16 22:32:07,121 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
2014-05-16 22:32:07,121 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 18 collections
2014-05-16 22:32:07,122 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,122 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, questionimage=, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=10}
2014-05-16 22:32:07,122 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, questionimage=, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Boucles foreach imbriquées. Soit le tableau array. A laide des boucles foreach affichez le résultat ci-dessous., questionid=11}
2014-05-16 22:32:07,122 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, questionimage=, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Boucle imbriquées, affichez la table de multiplication du chiffre 12.Codez l'algorithme ci-dessous., questionid=9}
2014-05-16 22:32:07,122 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, questionimage=, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Soit le tableau fruits : codez le reste de lalgorithme., questionid=8}
2014-05-16 22:32:07,123 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, questionimage=, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=7}
2014-05-16 22:32:07,123 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, questionimage=, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Affichez toutes les valeurs du tableau avec la boucle foreach (K + V)., questionid=6}
2014-05-16 22:32:07,123 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,124 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,124 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,125 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227271
2014-05-16 22:32:07,125 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,125 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,125 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,134 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,134 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,135 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,135 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONIMAGE as QUESTION2_9_, question0_.QUESTIONTEXT as QUESTION3_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-05-16 22:32:07,136 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,136 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,136 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,137 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,137 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,137 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,138 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,138 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,138 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227271
2014-05-16 22:32:07,138 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,138 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,138 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,147 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,147 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,148 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,148 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONIMAGE as QUESTION2_9_, question0_.QUESTIONTEXT as QUESTION3_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-05-16 22:32:07,155 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,155 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,156 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,156 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,156 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,156 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,157 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,157 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,157 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227271
2014-05-16 22:32:07,158 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,158 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,158 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,166 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,166 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,167 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,167 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONIMAGE as QUESTION2_9_, question0_.QUESTIONTEXT as QUESTION3_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-05-16 22:32:07,168 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,168 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,168 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,169 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,169 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,169 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,170 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,170 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,170 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227271
2014-05-16 22:32:07,170 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,170 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,170 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,178 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,179 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,179 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,179 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONIMAGE as QUESTION2_9_, question0_.QUESTIONTEXT as QUESTION3_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-05-16 22:32:07,180 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,180 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,181 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,181 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,181 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,181 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,182 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,182 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,182 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227271
2014-05-16 22:32:07,182 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,183 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,183 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,190 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,191 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,191 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,191 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONIMAGE as QUESTION2_9_, question0_.QUESTIONTEXT as QUESTION3_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-05-16 22:32:07,192 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,192 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,193 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,193 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,193 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,193 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,194 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,194 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,194 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227271
2014-05-16 22:32:07,194 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,195 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,195 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,203 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,203 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,204 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,204 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONIMAGE as QUESTION2_9_, question0_.QUESTIONTEXT as QUESTION3_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-05-16 22:32:07,205 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,205 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,205 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,205 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,206 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,206 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,207 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,207 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,207 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227272
2014-05-16 22:32:07,207 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,207 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,208 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,216 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,216 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,217 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,217 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONIMAGE as QUESTION2_9_, question0_.QUESTIONTEXT as QUESTION3_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-05-16 22:32:07,218 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,218 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,218 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,219 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,219 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,219 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,220 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,220 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,220 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227272
2014-05-16 22:32:07,221 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,221 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,221 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,229 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,230 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,230 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,230 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONIMAGE as QUESTION2_9_, question0_.QUESTIONTEXT as QUESTION3_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-05-16 22:32:07,231 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,232 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,232 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,232 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,232 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,233 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,233 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,233 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,233 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227272
2014-05-16 22:32:07,234 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,234 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,234 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,242 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,243 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,243 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,243 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONIMAGE as QUESTION2_9_, question0_.QUESTIONTEXT as QUESTION3_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-05-16 22:32:07,244 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,245 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,245 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,245 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,245 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,245 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,246 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,246 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,247 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227272
2014-05-16 22:32:07,247 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,247 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,247 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,256 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,256 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,256 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,257 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select test0_.TESTID as TESTID3_, test0_.TESTMATIERE as TESTMATI2_3_, test0_.TESTDUREE as TESTDUREE3_, test0_.TEST_NBQUESTION_RUB as TEST4_3_, test0_.TESTNATURE as TESTNATURE3_, test0_.TESTFORMAT as TESTFORMAT3_, test0_.TEST_START as TEST7_3_, test0_.TEST_DESCRIPTION as TEST8_3_, test0_.THEME as THEME3_, test0_.NIVEAU as NIVEAU3_, test0_.CATEGORIEID as CATEGOR11_3_ from test test0_ where test0_.TESTID=1
2014-05-16 22:32:07,258 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,258 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#1]
2014-05-16 22:32:07,259 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,259 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,259 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#1]
2014-05-16 22:32:07,260 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#1]
2014-05-16 22:32:07,260 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,260 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,260 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,260 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,260 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.rubriqueCollection#1], was: [jpa.Test.rubriqueCollection#1] (uninitialized)
2014-05-16 22:32:07,261 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.jointureCollection#1], was: [jpa.Test.jointureCollection#1] (uninitialized)
2014-05-16 22:32:07,261 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:07,261 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2014-05-16 22:32:07,261 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,261 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Test{rubriqueCollection=<uninitialized>, testmatiere=Développement PHP, testformat=CODE, theme=Boucles en PHP, jointureCollection=<uninitialized>, testnature=THEM, testid=1, testDescription=Les boucles permettent d'effectuer un certain nombre de fois les mêmes opérations, par exemple afficher une suite de nombres que l'on incrémentera à chaque tour de boucle. 
Vous allez pouvoir répéter autant d'instructions que vous souhaitez et vous arrêter lorsque vous l'aurez décidé.
Ce test vérifiera les compétences du candidat sur ces notions élémentaires.
, categorieid=jpa.Categorie#1, testStart=Instructions début, niveau=1, testNbquestionRub=10, testduree=20}
2014-05-16 22:32:07,262 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,262 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,263 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,263 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227272
2014-05-16 22:32:07,263 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,263 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,263 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,272 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,272 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,273 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,273 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select rubrique0_.RUBRIQUEID as RUBRIQUEID6_, rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_, rubrique0_.TESTID as TESTID6_ from rubrique rubrique0_ where rubrique0_.TESTID=?
2014-05-16 22:32:07,274 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,274 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#1]
2014-05-16 22:32:07,275 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#2]
2014-05-16 22:32:07,275 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#11]
2014-05-16 22:32:07,275 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#12]
2014-05-16 22:32:07,276 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#13]
2014-05-16 22:32:07,276 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#14]
2014-05-16 22:32:07,276 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#15]
2014-05-16 22:32:07,277 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#16]
2014-05-16 22:32:07,277 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#17]
2014-05-16 22:32:07,277 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#18]
2014-05-16 22:32:07,277 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Rubrique#19]
2014-05-16 22:32:07,278 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,278 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,278 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#1]
2014-05-16 22:32:07,278 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#1]
2014-05-16 22:32:07,279 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#2]
2014-05-16 22:32:07,279 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#2]
2014-05-16 22:32:07,279 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#11]
2014-05-16 22:32:07,279 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#11]
2014-05-16 22:32:07,279 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#12]
2014-05-16 22:32:07,280 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#12]
2014-05-16 22:32:07,280 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#13]
2014-05-16 22:32:07,280 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#13]
2014-05-16 22:32:07,280 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#14]
2014-05-16 22:32:07,281 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#14]
2014-05-16 22:32:07,281 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#15]
2014-05-16 22:32:07,281 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#15]
2014-05-16 22:32:07,281 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#16]
2014-05-16 22:32:07,281 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#16]
2014-05-16 22:32:07,282 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#17]
2014-05-16 22:32:07,282 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#17]
2014-05-16 22:32:07,282 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#18]
2014-05-16 22:32:07,282 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#18]
2014-05-16 22:32:07,282 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Rubrique#19]
2014-05-16 22:32:07,283 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Rubrique#19]
2014-05-16 22:32:07,283 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,283 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,283 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,283 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,284 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#1], was: [jpa.Rubrique.questionCollection#1] (uninitialized)
2014-05-16 22:32:07,284 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#2], was: [jpa.Rubrique.questionCollection#2] (uninitialized)
2014-05-16 22:32:07,284 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#11], was: [jpa.Rubrique.questionCollection#11] (uninitialized)
2014-05-16 22:32:07,284 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#12], was: [jpa.Rubrique.questionCollection#12] (uninitialized)
2014-05-16 22:32:07,284 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#13], was: [jpa.Rubrique.questionCollection#13] (uninitialized)
2014-05-16 22:32:07,285 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#14], was: [jpa.Rubrique.questionCollection#14] (uninitialized)
2014-05-16 22:32:07,285 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#15], was: [jpa.Rubrique.questionCollection#15] (uninitialized)
2014-05-16 22:32:07,285 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#16], was: [jpa.Rubrique.questionCollection#16] (uninitialized)
2014-05-16 22:32:07,285 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#17], was: [jpa.Rubrique.questionCollection#17] (uninitialized)
2014-05-16 22:32:07,286 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#18], was: [jpa.Rubrique.questionCollection#18] (uninitialized)
2014-05-16 22:32:07,286 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Rubrique.questionCollection#19], was: [jpa.Rubrique.questionCollection#19] (uninitialized)
2014-05-16 22:32:07,286 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 11 objects
2014-05-16 22:32:07,286 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 11 collections
2014-05-16 22:32:07,286 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,287 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=16, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:07,287 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=15, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:07,287 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=14, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:07,287 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=13, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:07,287 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=12, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:07,288 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=11, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:07,288 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=19, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:07,288 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=17, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:07,288 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=2, testid=jpa.Test#1, rubriquenom=Boucles PHP - Niveau 2}
2014-05-16 22:32:07,288 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=18, testid=jpa.Test#1, rubriquenom=nom rubrique}
2014-05-16 22:32:07,288 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Rubrique{questionCollection=<uninitialized>, rubriqueid=1, testid=jpa.Test#1, rubriquenom=Boucles PHP - Niveau 1}
2014-05-16 22:32:07,289 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,290 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,290 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,290 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227272
2014-05-16 22:32:07,290 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,291 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,291 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,300 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,300 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,301 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,301 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONIMAGE as QUESTION2_9_, question0_.QUESTIONTEXT as QUESTION3_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-05-16 22:32:07,302 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,302 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#1]
2014-05-16 22:32:07,303 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#2]
2014-05-16 22:32:07,303 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#3]
2014-05-16 22:32:07,303 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#4]
2014-05-16 22:32:07,304 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#5]
2014-05-16 22:32:07,304 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,304 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,304 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#1]
2014-05-16 22:32:07,305 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#1]
2014-05-16 22:32:07,305 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#2]
2014-05-16 22:32:07,305 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#2]
2014-05-16 22:32:07,305 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#3]
2014-05-16 22:32:07,306 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#3]
2014-05-16 22:32:07,306 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#4]
2014-05-16 22:32:07,306 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#4]
2014-05-16 22:32:07,306 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#5]
2014-05-16 22:32:07,306 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#5]
2014-05-16 22:32:07,307 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,307 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,307 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,307 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,308 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#1], was: [jpa.Question.propositionCollection#1] (uninitialized)
2014-05-16 22:32:07,308 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#1], was: [jpa.Question.reponseHistoCollection#1] (uninitialized)
2014-05-16 22:32:07,308 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#1], was: [jpa.Question.reponseCollection#1] (uninitialized)
2014-05-16 22:32:07,308 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#2], was: [jpa.Question.propositionCollection#2] (uninitialized)
2014-05-16 22:32:07,309 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#2], was: [jpa.Question.reponseHistoCollection#2] (uninitialized)
2014-05-16 22:32:07,309 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#2], was: [jpa.Question.reponseCollection#2] (uninitialized)
2014-05-16 22:32:07,309 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#3], was: [jpa.Question.propositionCollection#3] (uninitialized)
2014-05-16 22:32:07,309 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#3], was: [jpa.Question.reponseHistoCollection#3] (uninitialized)
2014-05-16 22:32:07,309 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#3], was: [jpa.Question.reponseCollection#3] (uninitialized)
2014-05-16 22:32:07,310 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#4], was: [jpa.Question.propositionCollection#4] (uninitialized)
2014-05-16 22:32:07,310 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#4], was: [jpa.Question.reponseHistoCollection#4] (uninitialized)
2014-05-16 22:32:07,310 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#4], was: [jpa.Question.reponseCollection#4] (uninitialized)
2014-05-16 22:32:07,310 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#5], was: [jpa.Question.propositionCollection#5] (uninitialized)
2014-05-16 22:32:07,310 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#5], was: [jpa.Question.reponseHistoCollection#5] (uninitialized)
2014-05-16 22:32:07,311 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#5], was: [jpa.Question.reponseCollection#5] (uninitialized)
2014-05-16 22:32:07,311 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
2014-05-16 22:32:07,311 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 15 collections
2014-05-16 22:32:07,311 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,312 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, questionimage=, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=5}
2014-05-16 22:32:07,312 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, questionimage=, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=4}
2014-05-16 22:32:07,312 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, questionimage=, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=A l'aide d'une boucle foreach, affichez le contenu du tableau., questionid=3}
2014-05-16 22:32:07,312 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, questionimage=, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=2}
2014-05-16 22:32:07,312 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, questionimage=, rubriqueid=jpa.Rubrique#1, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=1}
2014-05-16 22:32:07,313 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,313 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,314 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,314 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227273
2014-05-16 22:32:07,314 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,314 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,314 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,323 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,323 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,324 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 23, using strategy: org.hibernate.id.IncrementGenerator
2014-05-16 22:32:07,324 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,324 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,324 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,325 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:07,325 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,325 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,325 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=23, questionid=jpa.Question#1}
2014-05-16 22:32:07,326 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,326 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-05-16 22:32:07,326 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:07,327 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,328 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,329 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,329 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,329 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,329 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,329 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:07,330 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,330 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,330 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=23, questionid=jpa.Question#1}
2014-05-16 22:32:07,330 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 23
2014-05-16 22:32:07,332 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '23'

2014-05-16 22:32:07,332 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,332 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-05-16 22:32:07,333 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-05-16 22:32:07,333 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-05-16 22:32:07,333 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@1871392
2014-05-16 22:32:07,333 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-05-16 22:32:07,334 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-05-16 22:32:07,334 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 23 ) ) )
2014-05-16 22:32:07,334 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-05-16 22:32:07,334 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-05-16 22:32:07,335 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-05-16 22:32:07,335 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '23'

2014-05-16 22:32:07,335 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,336 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 23
2014-05-16 22:32:07,336 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=23
2014-05-16 22:32:07,336 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,336 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,336 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=23
2014-05-16 22:32:07,337 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,338 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#23]
2014-05-16 22:32:07,338 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,338 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,338 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,338 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,338 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227273
2014-05-16 22:32:07,339 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,339 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,339 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,347 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,347 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,348 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,348 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-05-16 22:32:07,349 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,350 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#23]
2014-05-16 22:32:07,350 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,350 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,350 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#23]
2014-05-16 22:32:07,351 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#23]
2014-05-16 22:32:07,351 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,351 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,351 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,351 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,351 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-05-16 22:32:07,352 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,352 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,352 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=23, questionid=jpa.Question#1}
2014-05-16 22:32:07,352 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,352 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-05-16 22:32:07,353 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:07,353 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,354 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,355 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,355 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,355 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227273
2014-05-16 22:32:07,355 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,355 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,356 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,364 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,364 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,364 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 24, using strategy: org.hibernate.id.IncrementGenerator
2014-05-16 22:32:07,365 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,365 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,365 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,365 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:07,365 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,366 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,366 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=24, questionid=jpa.Question#2}
2014-05-16 22:32:07,366 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,366 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-05-16 22:32:07,367 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:07,367 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,369 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,369 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,369 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,370 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,370 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,370 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:07,370 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,370 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,370 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=24, questionid=jpa.Question#2}
2014-05-16 22:32:07,371 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 24
2014-05-16 22:32:07,372 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '24'

2014-05-16 22:32:07,373 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,373 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-05-16 22:32:07,373 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-05-16 22:32:07,373 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-05-16 22:32:07,374 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@1871392
2014-05-16 22:32:07,374 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-05-16 22:32:07,374 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-05-16 22:32:07,374 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 24 ) ) )
2014-05-16 22:32:07,375 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-05-16 22:32:07,375 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-05-16 22:32:07,375 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-05-16 22:32:07,375 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '24'

2014-05-16 22:32:07,376 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,376 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 24
2014-05-16 22:32:07,376 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=24
2014-05-16 22:32:07,376 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,377 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,377 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=24
2014-05-16 22:32:07,378 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,378 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#24]
2014-05-16 22:32:07,378 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,378 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,378 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,379 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,379 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227273
2014-05-16 22:32:07,379 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,379 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,379 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,388 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,388 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,389 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,389 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-05-16 22:32:07,390 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,390 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#24]
2014-05-16 22:32:07,391 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,391 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,391 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#24]
2014-05-16 22:32:07,391 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#24]
2014-05-16 22:32:07,391 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,392 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,392 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,392 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,392 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-05-16 22:32:07,392 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,392 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,393 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=24, questionid=jpa.Question#2}
2014-05-16 22:32:07,393 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,393 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-05-16 22:32:07,393 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:07,394 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,395 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,395 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,396 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,396 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227273
2014-05-16 22:32:07,396 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,396 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,396 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,411 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,411 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,412 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 25, using strategy: org.hibernate.id.IncrementGenerator
2014-05-16 22:32:07,412 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,412 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,413 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,413 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:07,413 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,413 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,413 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=25, questionid=jpa.Question#3}
2014-05-16 22:32:07,414 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,414 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-05-16 22:32:07,415 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:07,415 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,416 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,417 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,417 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,417 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,417 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,418 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:07,418 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,418 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,418 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=25, questionid=jpa.Question#3}
2014-05-16 22:32:07,418 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 25
2014-05-16 22:32:07,420 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '25'

2014-05-16 22:32:07,420 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,421 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-05-16 22:32:07,421 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-05-16 22:32:07,421 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-05-16 22:32:07,421 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@1871392
2014-05-16 22:32:07,422 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-05-16 22:32:07,422 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-05-16 22:32:07,422 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 25 ) ) )
2014-05-16 22:32:07,422 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-05-16 22:32:07,423 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-05-16 22:32:07,423 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-05-16 22:32:07,423 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '25'

2014-05-16 22:32:07,424 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,424 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 25
2014-05-16 22:32:07,424 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=25
2014-05-16 22:32:07,424 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,424 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,425 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=25
2014-05-16 22:32:07,426 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,426 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#25]
2014-05-16 22:32:07,426 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,426 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,427 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,427 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,427 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227274
2014-05-16 22:32:07,427 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,427 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,427 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,436 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,436 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,437 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,437 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-05-16 22:32:07,438 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,438 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#25]
2014-05-16 22:32:07,438 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,438 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,439 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#25]
2014-05-16 22:32:07,439 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#25]
2014-05-16 22:32:07,439 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,439 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,440 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,440 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,440 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-05-16 22:32:07,440 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,440 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,440 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=25, questionid=jpa.Question#3}
2014-05-16 22:32:07,441 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,441 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-05-16 22:32:07,441 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:07,442 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,443 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,443 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,444 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,444 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227274
2014-05-16 22:32:07,444 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,444 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,444 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,452 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,453 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,453 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 26, using strategy: org.hibernate.id.IncrementGenerator
2014-05-16 22:32:07,453 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,454 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,454 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,454 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:07,454 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,454 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,454 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=26, questionid=jpa.Question#4}
2014-05-16 22:32:07,455 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,455 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-05-16 22:32:07,455 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:07,456 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,457 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,458 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,458 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,458 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,458 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,458 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:07,459 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,459 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,459 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=26, questionid=jpa.Question#4}
2014-05-16 22:32:07,459 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 26
2014-05-16 22:32:07,461 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '26'

2014-05-16 22:32:07,461 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,461 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-05-16 22:32:07,462 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-05-16 22:32:07,462 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-05-16 22:32:07,462 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@1871392
2014-05-16 22:32:07,462 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-05-16 22:32:07,463 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-05-16 22:32:07,463 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 26 ) ) )
2014-05-16 22:32:07,463 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-05-16 22:32:07,463 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-05-16 22:32:07,463 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-05-16 22:32:07,464 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '26'

2014-05-16 22:32:07,464 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,464 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 26
2014-05-16 22:32:07,465 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=26
2014-05-16 22:32:07,465 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,465 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,465 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=26
2014-05-16 22:32:07,466 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,466 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#26]
2014-05-16 22:32:07,467 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,467 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,467 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,467 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,467 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227274
2014-05-16 22:32:07,467 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,468 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,468 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,476 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,476 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,477 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,477 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-05-16 22:32:07,478 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,478 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#26]
2014-05-16 22:32:07,478 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,479 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,479 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#26]
2014-05-16 22:32:07,479 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#26]
2014-05-16 22:32:07,479 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,479 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,480 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,480 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,480 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-05-16 22:32:07,480 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,480 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,480 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=26, questionid=jpa.Question#4}
2014-05-16 22:32:07,481 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,481 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-05-16 22:32:07,481 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:07,482 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,483 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,484 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,484 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,484 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227274
2014-05-16 22:32:07,484 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,484 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,484 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,492 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,493 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,493 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 27, using strategy: org.hibernate.id.IncrementGenerator
2014-05-16 22:32:07,493 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,494 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,494 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,494 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:07,494 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,494 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,494 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=27, questionid=jpa.Question#5}
2014-05-16 22:32:07,495 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,495 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-05-16 22:32:07,495 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:07,496 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,497 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,498 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,498 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,498 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,498 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,498 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:07,499 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,499 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,499 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=27, questionid=jpa.Question#5}
2014-05-16 22:32:07,499 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 27
2014-05-16 22:32:07,501 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '27'

2014-05-16 22:32:07,501 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,501 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-05-16 22:32:07,501 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-05-16 22:32:07,502 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-05-16 22:32:07,502 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@1871392
2014-05-16 22:32:07,502 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-05-16 22:32:07,502 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-05-16 22:32:07,503 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 27 ) ) )
2014-05-16 22:32:07,503 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-05-16 22:32:07,503 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-05-16 22:32:07,503 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-05-16 22:32:07,504 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '27'

2014-05-16 22:32:07,504 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,504 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 27
2014-05-16 22:32:07,504 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=27
2014-05-16 22:32:07,505 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,505 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,505 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=27
2014-05-16 22:32:07,506 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,506 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#27]
2014-05-16 22:32:07,506 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,507 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,507 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,507 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,507 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227275
2014-05-16 22:32:07,507 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,507 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,508 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,515 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,516 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,516 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,517 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-05-16 22:32:07,518 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,518 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#27]
2014-05-16 22:32:07,518 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,518 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,518 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#27]
2014-05-16 22:32:07,519 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#27]
2014-05-16 22:32:07,519 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,519 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,519 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,520 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,520 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-05-16 22:32:07,520 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,520 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,520 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=27, questionid=jpa.Question#5}
2014-05-16 22:32:07,520 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,521 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-05-16 22:32:07,521 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:07,521 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,523 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,523 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,523 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,524 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227275
2014-05-16 22:32:07,524 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,524 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,524 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,532 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,532 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,533 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,533 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONIMAGE as QUESTION2_9_, question0_.QUESTIONTEXT as QUESTION3_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-05-16 22:32:07,534 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,535 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#6]
2014-05-16 22:32:07,535 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#7]
2014-05-16 22:32:07,535 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#8]
2014-05-16 22:32:07,535 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#9]
2014-05-16 22:32:07,536 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#10]
2014-05-16 22:32:07,536 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#11]
2014-05-16 22:32:07,536 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,536 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,537 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#6]
2014-05-16 22:32:07,537 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#6]
2014-05-16 22:32:07,537 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#7]
2014-05-16 22:32:07,537 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#7]
2014-05-16 22:32:07,538 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#8]
2014-05-16 22:32:07,538 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#8]
2014-05-16 22:32:07,538 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#9]
2014-05-16 22:32:07,538 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#9]
2014-05-16 22:32:07,539 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#10]
2014-05-16 22:32:07,539 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#10]
2014-05-16 22:32:07,539 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#11]
2014-05-16 22:32:07,539 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#11]
2014-05-16 22:32:07,539 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,540 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,540 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,540 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,540 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#6], was: [jpa.Question.propositionCollection#6] (uninitialized)
2014-05-16 22:32:07,540 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#6], was: [jpa.Question.reponseHistoCollection#6] (uninitialized)
2014-05-16 22:32:07,541 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#6], was: [jpa.Question.reponseCollection#6] (uninitialized)
2014-05-16 22:32:07,541 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#7], was: [jpa.Question.propositionCollection#7] (uninitialized)
2014-05-16 22:32:07,541 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#7], was: [jpa.Question.reponseHistoCollection#7] (uninitialized)
2014-05-16 22:32:07,541 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#7], was: [jpa.Question.reponseCollection#7] (uninitialized)
2014-05-16 22:32:07,541 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#8], was: [jpa.Question.propositionCollection#8] (uninitialized)
2014-05-16 22:32:07,542 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#8], was: [jpa.Question.reponseHistoCollection#8] (uninitialized)
2014-05-16 22:32:07,542 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#8], was: [jpa.Question.reponseCollection#8] (uninitialized)
2014-05-16 22:32:07,542 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#9], was: [jpa.Question.propositionCollection#9] (uninitialized)
2014-05-16 22:32:07,542 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#9], was: [jpa.Question.reponseHistoCollection#9] (uninitialized)
2014-05-16 22:32:07,542 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#9], was: [jpa.Question.reponseCollection#9] (uninitialized)
2014-05-16 22:32:07,543 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#10], was: [jpa.Question.propositionCollection#10] (uninitialized)
2014-05-16 22:32:07,543 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#10], was: [jpa.Question.reponseHistoCollection#10] (uninitialized)
2014-05-16 22:32:07,543 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#10], was: [jpa.Question.reponseCollection#10] (uninitialized)
2014-05-16 22:32:07,543 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#11], was: [jpa.Question.propositionCollection#11] (uninitialized)
2014-05-16 22:32:07,543 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#11], was: [jpa.Question.reponseHistoCollection#11] (uninitialized)
2014-05-16 22:32:07,544 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#11], was: [jpa.Question.reponseCollection#11] (uninitialized)
2014-05-16 22:32:07,544 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
2014-05-16 22:32:07,544 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 18 collections
2014-05-16 22:32:07,544 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,544 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, questionimage=, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=10}
2014-05-16 22:32:07,545 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, questionimage=, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Boucles foreach imbriquées. Soit le tableau array. A laide des boucles foreach affichez le résultat ci-dessous., questionid=11}
2014-05-16 22:32:07,545 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, questionimage=, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Boucle imbriquées, affichez la table de multiplication du chiffre 12.Codez l'algorithme ci-dessous., questionid=9}
2014-05-16 22:32:07,545 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, questionimage=, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Soit le tableau fruits : codez le reste de lalgorithme., questionid=8}
2014-05-16 22:32:07,545 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, questionimage=, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Codez l'algorithme., questionid=7}
2014-05-16 22:32:07,545 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=<uninitialized>, questionimage=, rubriqueid=jpa.Rubrique#2, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=Affichez toutes les valeurs du tableau avec la boucle foreach (K + V)., questionid=6}
2014-05-16 22:32:07,546 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,546 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,547 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,547 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227275
2014-05-16 22:32:07,547 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,547 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,547 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,556 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,556 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,556 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 28, using strategy: org.hibernate.id.IncrementGenerator
2014-05-16 22:32:07,557 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,557 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,557 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,557 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:07,558 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,558 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,558 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=28, questionid=jpa.Question#6}
2014-05-16 22:32:07,558 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,558 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-05-16 22:32:07,559 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:07,560 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,561 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,561 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,561 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,561 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,562 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,562 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:07,562 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,562 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,562 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=28, questionid=jpa.Question#6}
2014-05-16 22:32:07,563 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 28
2014-05-16 22:32:07,564 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '28'

2014-05-16 22:32:07,564 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,565 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-05-16 22:32:07,565 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-05-16 22:32:07,565 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-05-16 22:32:07,565 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@1871392
2014-05-16 22:32:07,566 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-05-16 22:32:07,566 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-05-16 22:32:07,566 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 28 ) ) )
2014-05-16 22:32:07,566 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-05-16 22:32:07,567 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-05-16 22:32:07,567 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-05-16 22:32:07,567 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '28'

2014-05-16 22:32:07,567 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,568 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 28
2014-05-16 22:32:07,568 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=28
2014-05-16 22:32:07,568 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,568 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,568 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=28
2014-05-16 22:32:07,569 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,570 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#28]
2014-05-16 22:32:07,570 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,570 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,570 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,570 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,571 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227275
2014-05-16 22:32:07,571 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,571 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,571 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,579 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,579 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,580 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,581 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-05-16 22:32:07,581 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,582 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#28]
2014-05-16 22:32:07,582 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,582 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,582 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#28]
2014-05-16 22:32:07,583 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#28]
2014-05-16 22:32:07,583 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,583 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,583 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,583 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,584 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-05-16 22:32:07,584 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,584 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,584 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=28, questionid=jpa.Question#6}
2014-05-16 22:32:07,584 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,584 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-05-16 22:32:07,585 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:07,585 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,587 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,587 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,588 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,588 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227275
2014-05-16 22:32:07,588 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,588 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,588 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,597 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,597 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,597 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 29, using strategy: org.hibernate.id.IncrementGenerator
2014-05-16 22:32:07,598 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,598 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,598 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,598 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:07,598 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,598 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,599 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=29, questionid=jpa.Question#7}
2014-05-16 22:32:07,599 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,599 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-05-16 22:32:07,600 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:07,600 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,602 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,602 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,602 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,602 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,602 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,603 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:07,603 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,603 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,603 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=29, questionid=jpa.Question#7}
2014-05-16 22:32:07,604 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 29
2014-05-16 22:32:07,605 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '29'

2014-05-16 22:32:07,605 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,605 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-05-16 22:32:07,606 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-05-16 22:32:07,606 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-05-16 22:32:07,606 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@1871392
2014-05-16 22:32:07,607 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-05-16 22:32:07,607 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-05-16 22:32:07,607 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 29 ) ) )
2014-05-16 22:32:07,607 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-05-16 22:32:07,608 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-05-16 22:32:07,608 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-05-16 22:32:07,608 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '29'

2014-05-16 22:32:07,608 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,609 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 29
2014-05-16 22:32:07,609 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=29
2014-05-16 22:32:07,609 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,609 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,609 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=29
2014-05-16 22:32:07,615 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,615 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#29]
2014-05-16 22:32:07,615 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,616 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,616 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,616 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,616 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227276
2014-05-16 22:32:07,616 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,616 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,617 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,625 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,625 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,626 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,626 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-05-16 22:32:07,627 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,627 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#29]
2014-05-16 22:32:07,628 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,628 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,628 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#29]
2014-05-16 22:32:07,629 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#29]
2014-05-16 22:32:07,629 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,629 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,629 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,629 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,629 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-05-16 22:32:07,630 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,630 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,630 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=29, questionid=jpa.Question#7}
2014-05-16 22:32:07,630 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,630 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-05-16 22:32:07,631 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:07,631 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,634 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,634 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,634 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,635 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227276
2014-05-16 22:32:07,635 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,635 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,635 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,643 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,643 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,644 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 30, using strategy: org.hibernate.id.IncrementGenerator
2014-05-16 22:32:07,644 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,644 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,644 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,645 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:07,645 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,645 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,645 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=30, questionid=jpa.Question#8}
2014-05-16 22:32:07,646 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,646 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-05-16 22:32:07,646 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:07,647 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,648 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,648 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,649 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,649 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,649 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,649 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:07,649 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,649 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,650 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=30, questionid=jpa.Question#8}
2014-05-16 22:32:07,650 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 30
2014-05-16 22:32:07,651 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '30'

2014-05-16 22:32:07,652 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,652 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-05-16 22:32:07,652 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-05-16 22:32:07,652 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-05-16 22:32:07,653 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@1871392
2014-05-16 22:32:07,653 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-05-16 22:32:07,653 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-05-16 22:32:07,653 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 30 ) ) )
2014-05-16 22:32:07,654 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-05-16 22:32:07,654 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-05-16 22:32:07,654 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-05-16 22:32:07,654 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '30'

2014-05-16 22:32:07,655 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,655 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 30
2014-05-16 22:32:07,655 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=30
2014-05-16 22:32:07,655 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,656 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,656 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=30
2014-05-16 22:32:07,657 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,657 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#30]
2014-05-16 22:32:07,657 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,657 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,658 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,658 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,658 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227276
2014-05-16 22:32:07,658 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,658 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,658 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,666 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,667 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,667 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,668 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-05-16 22:32:07,668 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,669 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#30]
2014-05-16 22:32:07,669 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,669 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,669 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#30]
2014-05-16 22:32:07,670 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#30]
2014-05-16 22:32:07,670 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,670 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,670 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,670 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,671 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-05-16 22:32:07,671 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,671 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,671 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=30, questionid=jpa.Question#8}
2014-05-16 22:32:07,671 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,671 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-05-16 22:32:07,672 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:07,672 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,674 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,674 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,674 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,675 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227276
2014-05-16 22:32:07,675 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,675 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,675 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,683 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,683 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,684 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 31, using strategy: org.hibernate.id.IncrementGenerator
2014-05-16 22:32:07,684 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,684 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,684 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,685 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:07,685 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,685 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,685 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=31, questionid=jpa.Question#9}
2014-05-16 22:32:07,686 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,686 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-05-16 22:32:07,686 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:07,687 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,688 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,688 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,689 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,689 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,689 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,689 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:07,689 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,689 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,689 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=31, questionid=jpa.Question#9}
2014-05-16 22:32:07,690 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 31
2014-05-16 22:32:07,691 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '31'

2014-05-16 22:32:07,692 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,692 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-05-16 22:32:07,692 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-05-16 22:32:07,692 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-05-16 22:32:07,693 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@1871392
2014-05-16 22:32:07,693 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-05-16 22:32:07,693 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-05-16 22:32:07,693 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 31 ) ) )
2014-05-16 22:32:07,694 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-05-16 22:32:07,694 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-05-16 22:32:07,694 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-05-16 22:32:07,694 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '31'

2014-05-16 22:32:07,695 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,695 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 31
2014-05-16 22:32:07,695 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=31
2014-05-16 22:32:07,695 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,696 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,696 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=31
2014-05-16 22:32:07,697 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,697 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#31]
2014-05-16 22:32:07,697 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,697 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,698 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,698 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,698 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227276
2014-05-16 22:32:07,698 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,698 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,698 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,706 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,706 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,707 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,707 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-05-16 22:32:07,708 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,708 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#31]
2014-05-16 22:32:07,709 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,709 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,709 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#31]
2014-05-16 22:32:07,709 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#31]
2014-05-16 22:32:07,710 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,710 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,710 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,710 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,710 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-05-16 22:32:07,711 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,711 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,711 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=31, questionid=jpa.Question#9}
2014-05-16 22:32:07,711 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,711 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-05-16 22:32:07,712 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:07,712 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,713 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,714 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,714 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,714 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227277
2014-05-16 22:32:07,714 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,714 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,715 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,722 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,722 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,723 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 32, using strategy: org.hibernate.id.IncrementGenerator
2014-05-16 22:32:07,723 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,723 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,724 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,724 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:07,724 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,724 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,724 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=32, questionid=jpa.Question#10}
2014-05-16 22:32:07,725 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,725 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-05-16 22:32:07,725 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:07,726 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,727 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,728 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,728 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,728 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,728 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,728 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:07,728 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,729 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,729 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=32, questionid=jpa.Question#10}
2014-05-16 22:32:07,729 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 32
2014-05-16 22:32:07,731 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '32'

2014-05-16 22:32:07,731 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,731 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-05-16 22:32:07,731 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-05-16 22:32:07,732 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-05-16 22:32:07,732 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@1871392
2014-05-16 22:32:07,732 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-05-16 22:32:07,732 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-05-16 22:32:07,733 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 32 ) ) )
2014-05-16 22:32:07,733 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-05-16 22:32:07,733 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-05-16 22:32:07,733 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-05-16 22:32:07,734 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '32'

2014-05-16 22:32:07,734 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,734 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 32
2014-05-16 22:32:07,734 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=32
2014-05-16 22:32:07,735 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,735 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,735 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=32
2014-05-16 22:32:07,736 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,736 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#32]
2014-05-16 22:32:07,737 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,737 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,737 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,737 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,737 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227277
2014-05-16 22:32:07,737 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,738 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,738 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,746 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,746 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,747 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,747 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-05-16 22:32:07,748 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,749 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#32]
2014-05-16 22:32:07,749 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,749 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,749 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#32]
2014-05-16 22:32:07,750 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#32]
2014-05-16 22:32:07,750 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,750 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,750 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,750 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,751 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-05-16 22:32:07,751 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,751 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,751 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=32, questionid=jpa.Question#10}
2014-05-16 22:32:07,751 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,751 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-05-16 22:32:07,752 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:07,752 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,754 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,754 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,754 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,755 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227277
2014-05-16 22:32:07,755 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,755 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,755 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,763 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,764 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,764 [main] DEBUG org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 33, using strategy: org.hibernate.id.IncrementGenerator
2014-05-16 22:32:07,764 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,765 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,765 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,765 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:07,765 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,765 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,765 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=33, questionid=jpa.Question#11}
2014-05-16 22:32:07,766 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,766 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into proposition (PROPOSITIONLIBELLE, PROPOSITIONVRAI, QUESTIONID, PROPOSITIONID) values (?, ?, ?, ?)
2014-05-16 22:32:07,766 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:07,767 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,768 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,769 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,769 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,769 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,769 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,769 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:07,770 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,770 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,770 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=33, questionid=jpa.Question#11}
2014-05-16 22:32:07,770 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Proposition where propositionid = 33
2014-05-16 22:32:07,772 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Proposition'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'propositionid'
          \-[NUM_INT] Node: '33'

2014-05-16 22:32:07,772 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,772 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-05-16 22:32:07,772 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (no alias) -> propositio0_
2014-05-16 22:32:07,773 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-05-16 22:32:07,773 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : propositionid -> org.hibernate.type.IntegerType@1871392
2014-05-16 22:32:07,773 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.propositionid -> propositio0_.PROPOSITIONID
2014-05-16 22:32:07,773 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-05-16 22:32:07,774 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.PROPOSITIONID {synthetic-alias} propositionid ) 33 ) ) )
2014-05-16 22:32:07,774 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-05-16 22:32:07,774 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-05-16 22:32:07,774 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-05-16 22:32:07,775 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.PROPOSITIONID' {propertyName=propositionid,dereferenceType=ALL,propertyPath=propositionid,path={synthetic-alias}.propositionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'propositionid' {originalText=propositionid}
          \-[NUM_INT] LiteralNode: '33'

2014-05-16 22:32:07,775 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,775 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Proposition where propositionid = 33
2014-05-16 22:32:07,776 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=33
2014-05-16 22:32:07,776 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-05-16 22:32:07,776 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,776 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.PROPOSITIONID=33
2014-05-16 22:32:07,777 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,777 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#33]
2014-05-16 22:32:07,778 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,778 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,778 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,778 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,778 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227277
2014-05-16 22:32:07,778 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,779 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,779 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,787 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,787 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,788 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,788 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.PROPOSITIONID as PROPOSIT1_0_0_, this_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, this_.PROPOSITIONVRAI as PROPOSIT3_0_0_, this_.QUESTIONID as QUESTIONID0_0_ from proposition this_ where this_.PROPOSITIONID=?
2014-05-16 22:32:07,789 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,790 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#33]
2014-05-16 22:32:07,790 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,790 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,790 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#33]
2014-05-16 22:32:07,791 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#33]
2014-05-16 22:32:07,791 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,791 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,791 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,791 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,791 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2014-05-16 22:32:07,792 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,792 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,792 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=ds ton cul, propositionvrai=1, propositionid=33, questionid=jpa.Question#11}
2014-05-16 22:32:07,792 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,792 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from proposition where PROPOSITIONID=?
2014-05-16 22:32:07,793 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-05-16 22:32:07,793 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,794 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,795 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,795 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,795 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227277
2014-05-16 22:32:07,795 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,796 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,796 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,804 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,804 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,805 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,805 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONIMAGE as QUESTION2_9_, question0_.QUESTIONTEXT as QUESTION3_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-05-16 22:32:07,806 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,806 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,806 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,807 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,807 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,807 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,808 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,808 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,808 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227278
2014-05-16 22:32:07,808 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,808 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,809 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,817 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,817 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,817 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,818 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONIMAGE as QUESTION2_9_, question0_.QUESTIONTEXT as QUESTION3_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-05-16 22:32:07,818 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,819 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,819 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,819 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,819 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,820 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,820 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,820 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,821 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227278
2014-05-16 22:32:07,821 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,821 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,821 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,829 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,829 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,830 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,830 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONIMAGE as QUESTION2_9_, question0_.QUESTIONTEXT as QUESTION3_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-05-16 22:32:07,831 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,831 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,831 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,832 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,832 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,832 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,833 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,833 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,833 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227278
2014-05-16 22:32:07,833 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,833 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,834 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,848 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,848 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,849 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,849 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONIMAGE as QUESTION2_9_, question0_.QUESTIONTEXT as QUESTION3_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-05-16 22:32:07,850 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,850 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,850 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,850 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,851 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,851 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,851 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,852 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,852 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227278
2014-05-16 22:32:07,852 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,852 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,852 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,860 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,860 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,861 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,861 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONIMAGE as QUESTION2_9_, question0_.QUESTIONTEXT as QUESTION3_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-05-16 22:32:07,862 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,862 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,862 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,862 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,863 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,863 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,863 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,864 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,864 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227278
2014-05-16 22:32:07,864 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,864 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,864 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,872 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,872 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,873 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,873 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONIMAGE as QUESTION2_9_, question0_.QUESTIONTEXT as QUESTION3_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-05-16 22:32:07,874 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,874 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,874 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,874 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,874 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,875 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,875 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,875 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,876 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227278
2014-05-16 22:32:07,876 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,876 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,876 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,884 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,884 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,885 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,885 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONIMAGE as QUESTION2_9_, question0_.QUESTIONTEXT as QUESTION3_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-05-16 22:32:07,886 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,886 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,886 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,887 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,887 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,887 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,888 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,888 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,888 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227278
2014-05-16 22:32:07,888 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,888 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,889 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,896 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,897 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,897 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,897 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONIMAGE as QUESTION2_9_, question0_.QUESTIONTEXT as QUESTION3_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-05-16 22:32:07,898 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,898 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,899 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,899 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,899 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,899 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,900 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,900 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,900 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227279
2014-05-16 22:32:07,900 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,900 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,901 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,908 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,908 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,909 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,909 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONIMAGE as QUESTION2_9_, question0_.QUESTIONTEXT as QUESTION3_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.RUBRIQUEID=?
2014-05-16 22:32:07,910 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,910 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,910 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,911 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,911 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,911 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,912 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,912 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,912 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227279
2014-05-16 22:32:07,913 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,913 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,913 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,921 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,921 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,921 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,922 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select test0_.TESTID as TESTID3_, test0_.TESTMATIERE as TESTMATI2_3_, test0_.TESTDUREE as TESTDUREE3_, test0_.TEST_NBQUESTION_RUB as TEST4_3_, test0_.TESTNATURE as TESTNATURE3_, test0_.TESTFORMAT as TESTFORMAT3_, test0_.TEST_START as TEST7_3_, test0_.TEST_DESCRIPTION as TEST8_3_, test0_.THEME as THEME3_, test0_.NIVEAU as NIVEAU3_, test0_.CATEGORIEID as CATEGOR11_3_ from test test0_ where test0_.TESTID=1
2014-05-16 22:32:07,922 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,923 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#1]
2014-05-16 22:32:07,923 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,923 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,924 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#1]
2014-05-16 22:32:07,924 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#1]
2014-05-16 22:32:07,925 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,925 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,925 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,925 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,925 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.rubriqueCollection#1], was: [jpa.Test.rubriqueCollection#1] (uninitialized)
2014-05-16 22:32:07,925 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Test.jointureCollection#1], was: [jpa.Test.jointureCollection#1] (uninitialized)
2014-05-16 22:32:07,926 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:07,926 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2014-05-16 22:32:07,926 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,926 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Test{rubriqueCollection=<uninitialized>, testmatiere=Développement PHP, testformat=CODE, theme=Boucles en PHP, jointureCollection=<uninitialized>, testnature=THEM, testid=1, testDescription=Les boucles permettent d'effectuer un certain nombre de fois les mêmes opérations, par exemple afficher une suite de nombres que l'on incrémentera à chaque tour de boucle. 
Vous allez pouvoir répéter autant d'instructions que vous souhaitez et vous arrêter lorsque vous l'aurez décidé.
Ce test vérifiera les compétences du candidat sur ces notions élémentaires.
, categorieid=jpa.Categorie#1, testStart=Instructions début, niveau=1, testNbquestionRub=10, testduree=20}
2014-05-16 22:32:07,927 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,927 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,927 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,927 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227279
2014-05-16 22:32:07,928 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,928 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,928 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,936 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,936 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,936 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,937 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ cross join question question1_ cross join rubrique rubrique2_ where propositio0_.QUESTIONID=question1_.QUESTIONID and question1_.RUBRIQUEID=rubrique2_.RUBRIQUEID and rubrique2_.TESTID=?
2014-05-16 22:32:07,938 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,938 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#1]
2014-05-16 22:32:07,938 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#2]
2014-05-16 22:32:07,939 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#3]
2014-05-16 22:32:07,939 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#4]
2014-05-16 22:32:07,939 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#5]
2014-05-16 22:32:07,939 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#6]
2014-05-16 22:32:07,940 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#7]
2014-05-16 22:32:07,940 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#8]
2014-05-16 22:32:07,940 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#9]
2014-05-16 22:32:07,941 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#10]
2014-05-16 22:32:07,941 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Proposition#11]
2014-05-16 22:32:07,941 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,941 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,941 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#1]
2014-05-16 22:32:07,942 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#1]
2014-05-16 22:32:07,942 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#2]
2014-05-16 22:32:07,942 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#2]
2014-05-16 22:32:07,942 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#3]
2014-05-16 22:32:07,943 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#3]
2014-05-16 22:32:07,943 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#4]
2014-05-16 22:32:07,943 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#4]
2014-05-16 22:32:07,943 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#5]
2014-05-16 22:32:07,943 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#5]
2014-05-16 22:32:07,944 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#6]
2014-05-16 22:32:07,944 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#6]
2014-05-16 22:32:07,944 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#7]
2014-05-16 22:32:07,944 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#7]
2014-05-16 22:32:07,944 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#8]
2014-05-16 22:32:07,945 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#8]
2014-05-16 22:32:07,945 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#9]
2014-05-16 22:32:07,945 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#9]
2014-05-16 22:32:07,945 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#10]
2014-05-16 22:32:07,945 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#10]
2014-05-16 22:32:07,946 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Proposition#11]
2014-05-16 22:32:07,946 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Proposition#11]
2014-05-16 22:32:07,946 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,946 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,946 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,946 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,947 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 11 objects
2014-05-16 22:32:07,947 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-05-16 22:32:07,947 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,947 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 1, propositionvrai=1, propositionid=1, questionid=jpa.Question#1}
2014-05-16 22:32:07,947 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 3, propositionvrai=1, propositionid=3, questionid=jpa.Question#3}
2014-05-16 22:32:07,948 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 2, propositionvrai=1, propositionid=2, questionid=jpa.Question#2}
2014-05-16 22:32:07,948 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 9, propositionvrai=1, propositionid=9, questionid=jpa.Question#9}
2014-05-16 22:32:07,948 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 5, propositionvrai=1, propositionid=5, questionid=jpa.Question#5}
2014-05-16 22:32:07,948 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 8, propositionvrai=1, propositionid=8, questionid=jpa.Question#8}
2014-05-16 22:32:07,948 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 4, propositionvrai=1, propositionid=4, questionid=jpa.Question#4}
2014-05-16 22:32:07,949 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 11, propositionvrai=1, propositionid=11, questionid=jpa.Question#11}
2014-05-16 22:32:07,949 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 7, propositionvrai=1, propositionid=7, questionid=jpa.Question#7}
2014-05-16 22:32:07,949 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 10, propositionvrai=1, propositionid=10, questionid=jpa.Question#10}
2014-05-16 22:32:07,949 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Proposition{propositionlibelle=Proposition 6, propositionvrai=1, propositionid=6, questionid=jpa.Question#6}
2014-05-16 22:32:07,949 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,950 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,950 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,951 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227279
2014-05-16 22:32:07,951 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,951 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,951 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,959 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,960 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,960 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,960 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,961 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,961 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,962 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,962 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.TESTID as TESTID3_0_, this_.TESTMATIERE as TESTMATI2_3_0_, this_.TESTDUREE as TESTDUREE3_0_, this_.TEST_NBQUESTION_RUB as TEST4_3_0_, this_.TESTNATURE as TESTNATURE3_0_, this_.TESTFORMAT as TESTFORMAT3_0_, this_.TEST_START as TEST7_3_0_, this_.TEST_DESCRIPTION as TEST8_3_0_, this_.THEME as THEME3_0_, this_.NIVEAU as NIVEAU3_0_, this_.CATEGORIEID as CATEGOR11_3_0_ from test this_
2014-05-16 22:32:07,963 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,963 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#1]
2014-05-16 22:32:07,963 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#2]
2014-05-16 22:32:07,964 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#3]
2014-05-16 22:32:07,964 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#4]
2014-05-16 22:32:07,965 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#5]
2014-05-16 22:32:07,965 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Test#6]
2014-05-16 22:32:07,965 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,965 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,966 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#1]
2014-05-16 22:32:07,966 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#1]
2014-05-16 22:32:07,966 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#2]
2014-05-16 22:32:07,966 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#2]
2014-05-16 22:32:07,967 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#3]
2014-05-16 22:32:07,967 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#3]
2014-05-16 22:32:07,967 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#4]
2014-05-16 22:32:07,967 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#4]
2014-05-16 22:32:07,968 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#5]
2014-05-16 22:32:07,968 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#5]
2014-05-16 22:32:07,968 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Test#6]
2014-05-16 22:32:07,968 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Test#6]
2014-05-16 22:32:07,968 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,968 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,969 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227279
2014-05-16 22:32:07,969 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,969 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,969 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,978 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,978 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,978 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,979 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select candidat0_.CANDIDATID as CANDIDATID2_, candidat0_.CANDIDAT_CIVILITE as CANDIDAT2_2_, candidat0_.CANDIDAT_NOM as CANDIDAT3_2_, candidat0_.CANDIDAT_PRENOM as CANDIDAT4_2_, candidat0_.CANDIDAT_MAIL as CANDIDAT5_2_, candidat0_.CANDIDAT_DATE_NAISSANCE as CANDIDAT6_2_ from candidat candidat0_ where candidat0_.CANDIDATID=1
2014-05-16 22:32:07,980 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,980 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Candidat#1]
2014-05-16 22:32:07,980 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,980 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,981 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Candidat#1]
2014-05-16 22:32:07,981 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Candidat#1]
2014-05-16 22:32:07,981 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,981 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,981 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-05-16 22:32:07,981 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-05-16 22:32:07,982 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Candidat.passageCollection#1], was: [jpa.Candidat.passageCollection#1] (uninitialized)
2014-05-16 22:32:07,982 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-05-16 22:32:07,982 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2014-05-16 22:32:07,982 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-05-16 22:32:07,982 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Candidat{candidatMail=sam.fab@hotmail.fr, passageCollection=<uninitialized>, candidatDateNaissance=1985-01-01, candidatPrenom=Samuel, candidatNom=Faber, candidatCivilite=Mr, candidatid=1}
2014-05-16 22:32:07,983 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,983 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,983 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,984 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227279
2014-05-16 22:32:07,984 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,984 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,984 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:07,992 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:07,992 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:07,993 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:07,993 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select passage0_.PASSAGEID as PASSAGEID5_, passage0_.PASSAGE_ETAT as PASSAGE2_5_, passage0_.PASSAGE_DATE as PASSAGE3_5_, passage0_.PASSAGEDEBUT_VAL as PASSAGED4_5_, passage0_.PASSAGEFIN_VAL as PASSAGEFIN5_5_, passage0_.CANDIDATID as CANDIDATID5_ from passage passage0_ where passage0_.CANDIDATID=? and passage0_.PASSAGE_ETAT=0
2014-05-16 22:32:07,994 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:07,994 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:07,994 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:07,994 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:07,995 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:07,995 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:07,995 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:07,996 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:07,996 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227279
2014-05-16 22:32:07,996 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:07,996 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:07,997 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:08,005 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:08,005 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:08,006 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:08,006 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select test0_.TESTID as TESTID3_, test0_.TESTMATIERE as TESTMATI2_3_, test0_.TESTDUREE as TESTDUREE3_, test0_.TEST_NBQUESTION_RUB as TEST4_3_, test0_.TESTNATURE as TESTNATURE3_, test0_.TESTFORMAT as TESTFORMAT3_, test0_.TEST_START as TEST7_3_, test0_.TEST_DESCRIPTION as TEST8_3_, test0_.THEME as THEME3_, test0_.NIVEAU as NIVEAU3_, test0_.CATEGORIEID as CATEGOR11_3_ from test test0_ where test0_.TESTID=18
2014-05-16 22:32:08,007 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:08,007 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:08,007 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:08,007 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:08,007 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:08,008 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:08,008 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:08,009 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-05-16 22:32:08,009 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14003227280
2014-05-16 22:32:08,009 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-05-16 22:32:08,009 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-05-16 22:32:08,009 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-05-16 22:32:08,018 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-05-16 22:32:08,018 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-05-16 22:32:08,019 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-05-16 22:32:08,019 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select rubrique0_.RUBRIQUEID as RUBRIQUEID6_, rubrique0_.RUBRIQUENOM as RUBRIQUE2_6_, rubrique0_.TESTID as TESTID6_ from rubrique rubrique0_ where rubrique0_.TESTID=?
2014-05-16 22:32:08,020 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-05-16 22:32:08,020 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-05-16 22:32:08,020 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-05-16 22:32:08,020 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-05-16 22:32:08,020 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-05-16 22:32:08,021 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-05-16 22:32:08,021 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-05-16 22:32:08,021 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
