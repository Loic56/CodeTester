2014-02-03 12:40:22,928 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into reponse (REPONSETEXTE, REPONSEDUREE, REPONSEMESSAGE, PASSAGEID, QUESTIONID, REPONSEID) values (?, ?, ?, ?, ?, ?)
2014-02-03 12:40:22,929 [main] DEBUG org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
2014-02-03 12:40:22,931 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-02-03 12:40:22,934 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-02-03 12:40:22,935 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-02-03 12:40:22,936 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-02-03 12:40:22,936 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-02-03 12:40:22,936 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-02-03 12:40:22,936 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2014-02-03 12:40:22,936 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2014-02-03 12:40:22,937 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-02-03 12:40:22,937 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=1, reponsemessage=fuck, reponsetexte=, reponseduree=null, questionid=jpa.Question#12, passageid=jpa.Passage#2}
2014-02-03 12:40:22,937 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Reponse where reponseid = 1
2014-02-03 12:40:22,944 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Reponse'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'reponseid'
          \-[NUM_INT] Node: '1'

2014-02-03 12:40:22,945 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-02-03 12:40:22,945 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-02-03 12:40:22,946 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Reponse (no alias) -> reponse0_
2014-02-03 12:40:22,946 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-02-03 12:40:22,947 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : reponseid -> org.hibernate.type.IntegerType@59e0e5
2014-02-03 12:40:22,947 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.reponseid -> reponse0_.REPONSEID
2014-02-03 12:40:22,947 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-02-03 12:40:22,947 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} reponse reponse0_ ) ( where ( = ( reponse0_.REPONSEID {synthetic-alias} reponseid ) 1 ) ) )
2014-02-03 12:40:22,948 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-02-03 12:40:22,948 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [reponse reponse0_]
2014-02-03 12:40:22,948 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-02-03 12:40:22,949 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (reponse)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'reponse0_.REPONSEID as REPONSEID8_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=reponse,tableAlias=reponse0_,origin=null,columns={,className=jpa.Reponse}}}
    |  \-[SQL_TOKEN] SqlFragment: 'reponse0_.REPONSETEXTE as REPONSET2_8_, reponse0_.REPONSEDUREE as REPONSED3_8_, reponse0_.REPONSEMESSAGE as REPONSEM4_8_, reponse0_.PASSAGEID as PASSAGEID8_, reponse0_.QUESTIONID as QUESTIONID8_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[reponse0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'reponse reponse0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=reponse,tableAlias=reponse0_,origin=null,columns={,className=jpa.Reponse}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'reponse0_.REPONSEID' {propertyName=reponseid,dereferenceType=ALL,propertyPath=reponseid,path={synthetic-alias}.reponseid,tableAlias=reponse0_,className=jpa.Reponse,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'reponseid' {originalText=reponseid}
          \-[NUM_INT] LiteralNode: '1'

2014-02-03 12:40:22,949 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-02-03 12:40:22,949 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Reponse where reponseid = 1
2014-02-03 12:40:22,950 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select reponse0_.REPONSEID as REPONSEID8_, reponse0_.REPONSETEXTE as REPONSET2_8_, reponse0_.REPONSEDUREE as REPONSED3_8_, reponse0_.REPONSEMESSAGE as REPONSEM4_8_, reponse0_.PASSAGEID as PASSAGEID8_, reponse0_.QUESTIONID as QUESTIONID8_ from reponse reponse0_ where reponse0_.REPONSEID=1
2014-02-03 12:40:22,950 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-02-03 12:40:22,950 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-02-03 12:40:22,950 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select reponse0_.REPONSEID as REPONSEID8_, reponse0_.REPONSETEXTE as REPONSET2_8_, reponse0_.REPONSEDUREE as REPONSED3_8_, reponse0_.REPONSEMESSAGE as REPONSEM4_8_, reponse0_.PASSAGEID as PASSAGEID8_, reponse0_.QUESTIONID as QUESTIONID8_ from reponse reponse0_ where reponse0_.REPONSEID=1
2014-02-03 12:40:22,952 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-02-03 12:40:22,953 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#1]
2014-02-03 12:40:22,953 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-02-03 12:40:22,953 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-02-03 12:40:22,953 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-02-03 12:40:22,954 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-02-03 12:40:22,954 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2158) - loading collection: [jpa.Question.reponseCollection#12]
2014-02-03 12:40:22,954 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-02-03 12:40:22,954 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select reponsecol0_.QUESTIONID as QUESTIONID9_1_, reponsecol0_.REPONSEID as REPONSEID1_, reponsecol0_.REPONSEID as REPONSEID8_0_, reponsecol0_.REPONSETEXTE as REPONSET2_8_0_, reponsecol0_.REPONSEDUREE as REPONSED3_8_0_, reponsecol0_.REPONSEMESSAGE as REPONSEM4_8_0_, reponsecol0_.PASSAGEID as PASSAGEID8_0_, reponsecol0_.QUESTIONID as QUESTIONID8_0_ from reponse reponsecol0_ where reponsecol0_.QUESTIONID=?
2014-02-03 12:40:22,956 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-02-03 12:40:22,956 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1203) - result set contains (possibly empty) collection: [jpa.Question.reponseCollection#12]
2014-02-03 12:40:22,956 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#1]
2014-02-03 12:40:22,957 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Question.reponseCollection#12]
2014-02-03 12:40:22,957 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-02-03 12:40:22,957 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-02-03 12:40:22,958 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#1]
2014-02-03 12:40:22,958 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#1]
2014-02-03 12:40:22,958 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: jpa.Question.reponseCollection
2014-02-03 12:40:22,958 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:275) - collection fully initialized: [jpa.Question.reponseCollection#12]
2014-02-03 12:40:22,958 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:241) - 1 collections initialized for role: jpa.Question.reponseCollection
2014-02-03 12:40:22,959 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-02-03 12:40:22,959 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2182) - done loading collection
2014-02-03 12:40:22,959 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13914744229
2014-02-03 12:40:22,959 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-02-03 12:40:22,959 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-02-03 12:40:22,960 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-02-03 12:40:22,975 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-02-03 12:40:22,975 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-02-03 12:40:22,979 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2022) - loading entity: [jpa.Question#12]
2014-02-03 12:40:22,979 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-02-03 12:40:22,980 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_0_, question0_.QUESTIONTEXT as QUESTION2_9_0_, question0_.RUBRIQUEID as RUBRIQUEID9_0_ from question question0_ where question0_.QUESTIONID=?
2014-02-03 12:40:22,981 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-02-03 12:40:22,981 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#12]
2014-02-03 12:40:22,982 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-02-03 12:40:22,982 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-02-03 12:40:22,982 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Question#12]
2014-02-03 12:40:22,983 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Question#12]
2014-02-03 12:40:22,983 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-02-03 12:40:22,983 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2050) - done entity load
2014-02-03 12:40:22,985 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2022) - loading entity: [jpa.Reponse#1]
2014-02-03 12:40:22,985 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-02-03 12:40:22,986 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select reponse0_.REPONSEID as REPONSEID8_0_, reponse0_.REPONSETEXTE as REPONSET2_8_0_, reponse0_.REPONSEDUREE as REPONSED3_8_0_, reponse0_.REPONSEMESSAGE as REPONSEM4_8_0_, reponse0_.PASSAGEID as PASSAGEID8_0_, reponse0_.QUESTIONID as QUESTIONID8_0_ from reponse reponse0_ where reponse0_.REPONSEID=?
2014-02-03 12:40:22,987 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-02-03 12:40:22,988 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#1]
2014-02-03 12:40:22,988 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-02-03 12:40:22,988 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-02-03 12:40:22,989 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:130) - resolving associations for [jpa.Reponse#1]
2014-02-03 12:40:22,989 [main] DEBUG org.hibernate.engine.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:255) - done materializing entity [jpa.Reponse#1]
2014-02-03 12:40:22,989 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-02-03 12:40:22,989 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2050) - done entity load
2014-02-03 12:40:22,990 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2158) - loading collection: [jpa.Question.reponseCollection#12]
2014-02-03 12:40:22,990 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-02-03 12:40:22,990 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select reponsecol0_.QUESTIONID as QUESTIONID9_1_, reponsecol0_.REPONSEID as REPONSEID1_, reponsecol0_.REPONSEID as REPONSEID8_0_, reponsecol0_.REPONSETEXTE as REPONSET2_8_0_, reponsecol0_.REPONSEDUREE as REPONSED3_8_0_, reponsecol0_.REPONSEMESSAGE as REPONSEM4_8_0_, reponsecol0_.PASSAGEID as PASSAGEID8_0_, reponsecol0_.QUESTIONID as QUESTIONID8_0_ from reponse reponsecol0_ where reponsecol0_.QUESTIONID=?
2014-02-03 12:40:22,992 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-02-03 12:40:22,992 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1203) - result set contains (possibly empty) collection: [jpa.Question.reponseCollection#12]
2014-02-03 12:40:22,992 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Reponse#1]
2014-02-03 12:40:22,993 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1133) - found row of collection: [jpa.Question.reponseCollection#12]
2014-02-03 12:40:22,993 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-02-03 12:40:22,993 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-02-03 12:40:22,993 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: jpa.Question.reponseCollection
2014-02-03 12:40:22,994 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:275) - collection fully initialized: [jpa.Question.reponseCollection#12]
2014-02-03 12:40:22,994 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:241) - 1 collections initialized for role: jpa.Question.reponseCollection
2014-02-03 12:40:22,994 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-02-03 12:40:22,994 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2182) - done loading collection
2014-02-03 12:40:22,995 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-02-03 12:40:22,995 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-02-03 12:40:22,995 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-02-03 12:40:22,995 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#12], was: [jpa.Question.propositionCollection#12] (uninitialized)
2014-02-03 12:40:22,995 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#12], was: [jpa.Question.reponseHistoCollection#12] (uninitialized)
2014-02-03 12:40:22,996 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#12], was: [jpa.Question.reponseCollection#12] (initialized)
2014-02-03 12:40:22,996 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2014-02-03 12:40:22,996 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2014-02-03 12:40:22,996 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-02-03 12:40:22,996 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=[jpa.Reponse#1], rubriqueid=jpa.Rubrique#10, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=En PHP le dimensionnement d'un tableau :, questionid=12}
2014-02-03 12:40:22,997 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=1, reponsemessage=fuck, reponsetexte=, reponseduree=null, questionid=jpa.Question#12, passageid=jpa.Passage#2}
2014-02-03 12:40:22,998 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-02-03 12:40:22,999 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-02-03 12:40:22,999 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-02-03 12:40:23,000 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
2014-02-03 12:40:23,000 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
2014-02-03 12:40:23,000 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.propositionCollection#12], was: [jpa.Question.propositionCollection#12] (uninitialized)
2014-02-03 12:40:23,000 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseHistoCollection#12], was: [jpa.Question.reponseHistoCollection#12] (uninitialized)
2014-02-03 12:40:23,000 [main] DEBUG org.hibernate.engine.Collections.processReachableCollection(Collections.java:198) - Collection found: [jpa.Question.reponseCollection#12], was: [jpa.Question.reponseCollection#12] (initialized)
2014-02-03 12:40:23,001 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2014-02-03 12:40:23,001 [main] DEBUG org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2014-02-03 12:40:23,001 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
2014-02-03 12:40:23,002 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Question{reponseCollection=[jpa.Reponse#1], rubriqueid=jpa.Rubrique#10, propositionCollection=<uninitialized>, reponseHistoCollection=<uninitialized>, questiontext=En PHP le dimensionnement d'un tableau :, questionid=12}
2014-02-03 12:40:23,002 [main] DEBUG org.hibernate.pretty.Printer.toString(Printer.java:113) - jpa.Reponse{reponseid=1, reponsemessage=fuck, reponsetexte=, reponseduree=null, questionid=jpa.Question#12, passageid=jpa.Passage#2}
2014-02-03 12:40:23,002 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: from jpa.Question where questionid = 12
2014-02-03 12:40:23,004 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'Question'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'questionid'
          \-[NUM_INT] Node: '12'

2014-02-03 12:40:23,004 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-02-03 12:40:23,004 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-02-03 12:40:23,005 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Question (no alias) -> question0_
2014-02-03 12:40:23,005 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias} -> {synthetic-alias}
2014-02-03 12:40:23,005 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : questionid -> org.hibernate.type.IntegerType@59e0e5
2014-02-03 12:40:23,006 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  {synthetic-alias}.questionid -> question0_.QUESTIONID
2014-02-03 12:40:23,006 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-02-03 12:40:23,006 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} question question0_ ) ( where ( = ( question0_.QUESTIONID {synthetic-alias} questionid ) 12 ) ) )
2014-02-03 12:40:23,006 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
2014-02-03 12:40:23,007 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [question question0_]
2014-02-03 12:40:23,007 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-02-03 12:40:23,007 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (question)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'question0_.QUESTIONID as QUESTIONID9_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=question,tableAlias=question0_,origin=null,columns={,className=jpa.Question}}}
    |  \-[SQL_TOKEN] SqlFragment: 'question0_.QUESTIONTEXT as QUESTION2_9_, question0_.RUBRIQUEID as RUBRIQUEID9_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[question0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'question question0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=question,tableAlias=question0_,origin=null,columns={,className=jpa.Question}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'question0_.QUESTIONID' {propertyName=questionid,dereferenceType=ALL,propertyPath=questionid,path={synthetic-alias}.questionid,tableAlias=question0_,className=jpa.Question,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'questionid' {originalText=questionid}
          \-[NUM_INT] LiteralNode: '12'

2014-02-03 12:40:23,007 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-02-03 12:40:23,008 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: from jpa.Question where questionid = 12
2014-02-03 12:40:23,008 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONTEXT as QUESTION2_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.QUESTIONID=12
2014-02-03 12:40:23,008 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-02-03 12:40:23,008 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-02-03 12:40:23,009 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select question0_.QUESTIONID as QUESTIONID9_, question0_.QUESTIONTEXT as QUESTION2_9_, question0_.RUBRIQUEID as RUBRIQUEID9_ from question question0_ where question0_.QUESTIONID=12
2014-02-03 12:40:23,010 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-02-03 12:40:23,011 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[jpa.Question#12]
2014-02-03 12:40:23,011 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-02-03 12:40:23,011 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-02-03 12:40:23,011 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-02-03 12:40:23,011 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2014-02-03 12:40:23,012 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2158) - loading collection: [jpa.Question.propositionCollection#12]
2014-02-03 12:40:23,012 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-02-03 12:40:23,012 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.QUESTIONID as QUESTIONID9_1_, propositio0_.PROPOSITIONID as PROPOSIT1_1_, propositio0_.PROPOSITIONID as PROPOSIT1_0_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_0_, propositio0_.QUESTIONID as QUESTIONID0_0_ from proposition propositio0_ where propositio0_.QUESTIONID=?
2014-02-03 12:40:23,014 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-02-03 12:40:23,014 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1203) - result set contains (possibly empty) collection: [jpa.Question.propositionCollection#12]
2014-02-03 12:40:23,014 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-02-03 12:40:23,014 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-02-03 12:40:23,015 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: jpa.Question.propositionCollection
2014-02-03 12:40:23,015 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:275) - collection fully initialized: [jpa.Question.propositionCollection#12]
2014-02-03 12:40:23,015 [main] DEBUG org.hibernate.engine.loading.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:241) - 1 collections initialized for role: jpa.Question.propositionCollection
2014-02-03 12:40:23,015 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-02-03 12:40:23,015 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2182) - done loading collection
2014-02-03 12:40:23,016 [main] DEBUG org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 13914744230
2014-02-03 12:40:23,016 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
2014-02-03 12:40:23,016 [main] DEBUG org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
2014-02-03 12:40:23,016 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/testeur_de_code]
2014-02-03 12:40:23,031 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: true
2014-02-03 12:40:23,031 [main] DEBUG org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:86) - disabling autocommit
2014-02-03 12:40:23,033 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:274) - parse() - HQL: select p from jpa.Proposition p where p.questionid =:question 
2014-02-03 12:40:23,035 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:293) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Proposition'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'questionid'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'question'

2014-02-03 12:40:23,035 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-02-03 12:40:23,036 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
2014-02-03 12:40:23,036 [main] DEBUG org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  jpa.Proposition (p) -> propositio0_
2014-02-03 12:40:23,036 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  p -> propositio0_.PROPOSITIONID
2014-02-03 12:40:23,037 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  p -> propositio0_.PROPOSITIONID
2014-02-03 12:40:23,037 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : questionid -> org.hibernate.type.ManyToOneType(jpa.Question)
2014-02-03 12:40:23,037 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.dereferenceEntityIdentifier(DotNode.java:570) - dereferenceShortcut() : property questionid in jpa.Proposition does not require a join.
2014-02-03 12:40:23,037 [main] DEBUG org.hibernate.hql.ast.tree.DotNode.setPropertyNameAndPath(DotNode.java:599) - terminal propertyPath = [questionid]
2014-02-03 12:40:23,038 [main] DEBUG org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  p.questionid -> propositio0_.QUESTIONID
2014-02-03 12:40:23,038 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
2014-02-03 12:40:23,038 [main] DEBUG org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( {select clause} propositio0_.PROPOSITIONID ) ( FromClause{level=1} proposition propositio0_ ) ( where ( = ( propositio0_.QUESTIONID propositio0_.PROPOSITIONID questionid ) ? ) ) )
2014-02-03 12:40:23,038 [main] DEBUG org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [proposition propositio0_]
2014-02-03 12:40:23,039 [main] DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
2014-02-03 12:40:23,039 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:260) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (proposition)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'propositio0_.PROPOSITIONID as PROPOSIT1_0_' {alias=p, className=jpa.Proposition, tableAlias=propositio0_}
    |  \-[SQL_TOKEN] SqlFragment: 'propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[propositio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'proposition propositio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=proposition,tableAlias=propositio0_,origin=null,columns={,className=jpa.Proposition}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'propositio0_.QUESTIONID' {propertyName=questionid,dereferenceType=0,propertyPath=questionid,path=p.questionid,tableAlias=propositio0_,className=jpa.Proposition,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'propositio0_.PROPOSITIONID' {alias=p, className=jpa.Proposition, tableAlias=propositio0_}
          |  \-[IDENT] IdentNode: 'questionid' {originalText=questionid}
          \-[NAMED_PARAM] ParameterNode: '?' {name=question, expectedType=org.hibernate.type.ManyToOneType(jpa.Question)}

2014-02-03 12:40:23,039 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-02-03 12:40:23,040 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:243) - HQL: select p from jpa.Proposition p where p.questionid =:question 
2014-02-03 12:40:23,040 [main] DEBUG org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:244) - SQL: select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.QUESTIONID=?
2014-02-03 12:40:23,040 [main] DEBUG org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
2014-02-03 12:40:23,040 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2014-02-03 12:40:23,041 [main] DEBUG org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select propositio0_.PROPOSITIONID as PROPOSIT1_0_, propositio0_.PROPOSITIONLIBELLE as PROPOSIT2_0_, propositio0_.PROPOSITIONVRAI as PROPOSIT3_0_, propositio0_.QUESTIONID as QUESTIONID0_ from proposition propositio0_ where propositio0_.QUESTIONID=?
2014-02-03 12:40:23,042 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
2014-02-03 12:40:23,043 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
2014-02-03 12:40:23,043 [main] DEBUG org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2014-02-03 12:40:23,043 [main] DEBUG org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
2014-02-03 12:40:23,043 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) - commit
2014-02-03 12:40:23,044 [main] DEBUG org.hibernate.transaction.JDBCTransaction.toggleAutoCommit(JDBCTransaction.java:223) - re-enabling autocommit
2014-02-03 12:40:23,045 [main] DEBUG org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) - committed JDBC Connection
2014-02-03 12:40:23,046 [main] DEBUG org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
